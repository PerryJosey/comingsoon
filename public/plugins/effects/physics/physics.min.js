var canvas=document.querySelector(".physics"),width=canvas.offsetWidth,height=canvas.offsetHeight,renderer=new THREE.WebGLRenderer({canvas,antialias:!0,alpha:!0});renderer.setPixelRatio(window.devicePixelRatio>1?2:1),renderer.setSize(width,height),renderer.setClearColor(0,0),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(40,width/height,.1,1e3),camera.position.set(0,0,350),sphere=new THREE.Group,scene.add(sphere);for(var i,scene,camera,sphere,material=new THREE.LineBasicMaterial({color:color_physics}),linesAmount=18,radius=100,verticesAmount=50,j=0,index,geometry,vector,line,resizeTm,mouse;j<linesAmount;j++){index=j,geometry=new THREE.Geometry,geometry.y=index/linesAmount*radius*2;for(i=0;i<=verticesAmount;i++)vector=new THREE.Vector3,vector.x=Math.cos(i/verticesAmount*Math.PI*2),vector.z=Math.sin(i/verticesAmount*Math.PI*2),vector._o=vector.clone(),geometry.vertices.push(vector);line=new THREE.Line(geometry,material),sphere.add(line)}function updateVertices(e){for(s=0;s<sphere.children.length;s++){t=sphere.children[s],t.geometry.y+=.3,t.geometry.y>2*radius&&(t.geometry.y=0);for(var t,n,s,i,a=Math.sqrt(t.geometry.y*(2*radius-t.geometry.y)),o=0;o<=verticesAmount;o++)n=t.geometry.vertices[o],i=15*noise.simplex3(.009*n.x,.009*n.z+6e-4*e,.009*t.geometry.y),n.copy(n._o),n.multiplyScalar(a+i),n.y=t.geometry.y-radius;t.geometry.verticesNeedUpdate=!0}}function render(e){requestAnimationFrame(render),updateVertices(e),renderer.render(scene,camera)}function onResize(){canvas.style.width="",canvas.style.height="",width=canvas.offsetWidth,height=canvas.offsetHeight,camera.aspect=width/height,camera.updateProjectionMatrix(),renderer.setSize(width,height)}mouse=new THREE.Vector2(.8,.5);function onMouseMove(e){mouse.y=e.clientY/window.innerHeight,TweenMax.to(sphere.rotation,2,{x:1*mouse.y,ease:Power1.easeOut})}requestAnimationFrame(render),window.addEventListener("mousemove",onMouseMove),window.addEventListener("resize",function(){resizeTm=clearTimeout(resizeTm),resizeTm=setTimeout(onResize,200)})