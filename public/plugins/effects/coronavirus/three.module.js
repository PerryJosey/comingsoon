Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52)),Number.isInteger===void 0&&(Number.isInteger=function(e){return typeof e=="number"&&isFinite(e)&&Math.floor(e)===e}),Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),"name"in Function.prototype===!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^(\s]*)/)[1]}}),Object.assign===void 0&&(Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");for(var t,s,o=Object(e),n=1;n<arguments.length;n++)if(t=arguments[n],t!=null)for(s in t)Object.prototype.hasOwnProperty.call(t,s)&&(o[s]=t[s]);return o}),REVISION="113",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,FrontFaceDirectionCW=0,FrontFaceDirectionCCW=1,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoColors=0,FaceColors=1,VertexColors=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,Uncharted2ToneMapping=3,CineonToneMapping=4,ACESFilmicToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,SphericalReflectionMapping=305,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=RGBAFormat,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RedIntegerFormat=1029,RGFormat=1030,RGIntegerFormat=1031,RGBIntegerFormat=1032,RGBAIntegerFormat=1033,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,StaticDrawUsage=35044,DynamicDrawUsage=35048,StreamDrawUsage=35040,StaticReadUsage=35045,DynamicReadUsage=35049,StreamReadUsage=35041,StaticCopyUsage=35046,DynamicCopyUsage=35050,StreamCopyUsage=35042;function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners===void 0)return;var s,o=this._listeners,n=o[e];n!==void 0&&(s=n.indexOf(t),s!==-1&&n.splice(s,1))},dispatchEvent:function(e){if(this._listeners===void 0)return;if(o=this._listeners,t=o[e.type],t!==void 0){e.target=this,n=t.slice(0);for(var t,n,o,s=0,i=n.length;s<i;s++)n[s].call(this,e)}}}),_lut=[];for(i=0;i<256;i++)_lut[i]=(i<16?"0":"")+i.toString(16);MathUtils={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,s=Math.random()*4294967295|0,o=_lut[e&255]+_lut[e>>8&255]+_lut[e>>16&255]+_lut[e>>24&255]+"-"+_lut[t&255]+_lut[t>>8&255]+"-"+_lut[t>>16&15|64]+_lut[t>>24&255]+"-"+_lut[n&63|128]+_lut[n>>8&255]+"-"+_lut[n>>16&255]+_lut[n>>24&255]+_lut[s&255]+_lut[s>>8&255]+_lut[s>>16&255]+_lut[s>>24&255];return o.toUpperCase()},clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,s,o){return s+(e-t)*(o-s)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*MathUtils.DEG2RAD},radToDeg:function(e){return e*MathUtils.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:function(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))},setQuaternionFromProperEuler:function(e,t,n,s,o){var l=Math.cos,d=Math.sin,i=l(n/2),a=d(n/2),r=l((t+s)/2),c=d((t+s)/2),u=l((t-s)/2),h=d((t-s)/2),m=l((s-t)/2),f=d((s-t)/2);o==="XYX"?e.set(i*c,a*u,a*h,i*r):o==="YZY"?e.set(a*h,i*c,a*u,i*r):o==="ZXZ"?e.set(a*u,a*h,i*c,i*r):o==="XZX"?e.set(i*c,a*f,a*m,i*r):o==="YXY"?e.set(a*m,i*c,a*f,i*r):o==="ZYZ"?e.set(a*f,a*m,i*c,i*r):console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.")}};function Vector2(e,t){this.x=e||0,this.y=t||0}Object.defineProperties(Vector2.prototype,{width:{get:function(){return this.x},set:function(e){this.x=e}},height:{get:function(){return this.y},set:function(e){this.y=e}}}),Object.assign(Vector2.prototype,{isVector2:!0,set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},applyMatrix3:function(e){var n=this.x,s=this.y,t=e.elements;return this.x=t[0]*n+t[3]*s+t[6],this.y=t[1]*n+t[4]*s+t[7],this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},cross:function(e){return this.x*e.y-this.y*e.x},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),s=Math.sin(t),o=this.x-e.x,i=this.y-e.y;return this.x=o*n-i*s+e.x,this.y=o*s+i*n+e.y,this}});function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix3.prototype,{isMatrix3:!0,set:function(e,t,n,s,o,i,a,r,c){var l=this.elements;return l[0]=e,l[1]=s,l[2]=a,l[3]=t,l[4]=o,l[5]=r,l[6]=n,l[7]=i,l[8]=c,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},multiply:function(e){return this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,s=t.elements,o=this.elements,i=n[0],a=n[3],r=n[6],c=n[1],l=n[4],d=n[7],u=n[2],h=n[5],m=n[8],f=s[0],p=s[3],g=s[6],v=s[1],b=s[4],j=s[7],y=s[2],_=s[5],w=s[8];return o[0]=i*f+a*v+r*y,o[3]=i*p+a*b+r*_,o[6]=i*g+a*j+r*w,o[1]=c*f+l*v+d*y,o[4]=c*p+l*b+d*_,o[7]=c*g+l*j+d*w,o[2]=u*f+h*v+m*y,o[5]=u*p+h*b+m*_,o[8]=u*g+h*j+m*w,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],s=e[2],o=e[3],i=e[4],a=e[5],r=e[6],c=e[7],l=e[8];return t*i*l-t*a*c-n*o*l+n*a*r+s*o*c-s*i*r},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");var n,f,s=e.elements,o=this.elements,i=s[0],a=s[1],r=s[2],m=s[3],d=s[4],l=s[5],c=s[6],u=s[7],h=s[8],p=h*d-l*u,g=l*c-h*m,v=u*m-d*c,b=i*p+a*g+r*v;if(b===0){if(f="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0",t===!0)throw new Error(f);return console.warn(f),this.identity()}return n=1/b,o[0]=p*n,o[1]=(r*u-h*a)*n,o[2]=(l*a-r*d)*n,o[3]=g*n,o[4]=(h*i-r*c)*n,o[5]=(r*m-l*i)*n,o[6]=v*n,o[7]=(a*c-u*i)*n,o[8]=(d*i-a*m)*n,this},transpose:function(){var e=this.elements,t=e[1];return e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},setUvTransform:function(e,t,n,s,o,i,a){var r=Math.cos(o),c=Math.sin(o);this.set(n*r,n*c,-n*(r*i+c*a)+i+e,-s*c,s*r,-s*(-c*i+r*a)+a+t,0,0,1)},scale:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this},rotate:function(e){var n=Math.cos(e),s=Math.sin(e),t=this.elements,o=t[0],i=t[3],a=t[6],r=t[1],c=t[4],l=t[7];return t[0]=n*o+s*r,t[3]=n*i+s*c,t[6]=n*a+s*l,t[1]=-s*o+n*r,t[4]=-s*i+n*c,t[7]=-s*a+n*l,this},translate:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this},equals:function(e){for(var n=this.elements,s=e.elements,t=0;t<9;t++)if(n[t]!==s[t])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}}),ImageUtils={getDataURL:function(e){if(typeof HTMLCanvasElement=="undefined")return e.src;if(e instanceof HTMLCanvasElement)t=e;else{_canvas===void 0&&(_canvas=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),_canvas.width=e.width,_canvas.height=e.height;var t,n=_canvas.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=_canvas}return t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}},textureId=0;function Texture(e,t,n,s,o,i,a,r,c,l){Object.defineProperty(this,"id",{value:textureId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.image=e!==void 0?e:Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:Texture.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:ClampToEdgeWrapping,this.wrapT=s!==void 0?s:ClampToEdgeWrapping,this.magFilter=o!==void 0?o:LinearFilter,this.minFilter=i!==void 0?i:LinearMipmapLinearFilter,this.anisotropy=c!==void 0?c:1,this.format=a!==void 0?a:RGBAFormat,this.internalFormat=null,this.type=r!==void 0?r:UnsignedByteType,this.offset=new Vector2(0,0),this.repeat=new Vector2(1,1),this.center=new Vector2(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Matrix3,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=l!==void 0?l:LinearEncoding,this.version=0,this.onUpdate=null}Texture.DEFAULT_IMAGE=void 0,Texture.DEFAULT_MAPPING=UVMapping,Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(n=e===void 0||typeof e=="string",!n&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];if(s={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment},this.image!==void 0){if(t=this.image,t.uuid===void 0&&(t.uuid=MathUtils.generateUUID()),!n&&e.images[t.uuid]===void 0){if(Array.isArray(t)){o=[];for(var t,n,s,o,i=0,a=t.length;i<a;i++)o.push(ImageUtils.getDataURL(t[i]))}else o=ImageUtils.getDataURL(t);e.images[t.uuid]={uuid:t.uuid,url:o}}s.image=t.uuid}return n||(e.textures[this.uuid]=s),s},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==UVMapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case MirroredRepeatWrapping:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}}),Object.defineProperty(Texture.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function Vector4(e,t,n,s){this.x=e||0,this.y=t||0,this.z=n||0,this.w=s!==void 0?s:1}Object.defineProperties(Vector4.prototype,{width:{get:function(){return this.z},set:function(e){this.z=e}},height:{get:function(){return this.w},set:function(e){this.w=e}}}),Object.assign(Vector4.prototype,{isVector4:!0,set:function(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var n=this.x,s=this.y,o=this.z,i=this.w,t=e.elements;return this.x=t[0]*n+t[4]*s+t[8]*o+t[12]*i,this.y=t[1]*n+t[5]*s+t[9]*o+t[13]*i,this.z=t[2]*n+t[6]*s+t[10]*o+t[14]*i,this.w=t[3]*n+t[7]*s+t[11]*o+t[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var n,s,o,a,m,f,p,y,_,w,O,r=.01,g=.1,t=e.elements,j=t[0],i=t[4],c=t[8],l=t[1],b=t[5],d=t[9],u=t[2],h=t[6],v=t[10];return Math.abs(i-l)<r&&Math.abs(c-u)<r&&Math.abs(d-h)<r?Math.abs(i+l)<g&&Math.abs(c+u)<g&&Math.abs(d+h)<g&&Math.abs(j+b+v-3)<g?(this.set(1,0,0,0),this):(O=Math.PI,f=(j+1)/2,p=(b+1)/2,m=(v+1)/2,y=(i+l)/4,_=(c+u)/4,w=(d+h)/4,f>p&&f>m?f<r?(n=0,s=.707106781,o=.707106781):(n=Math.sqrt(f),s=y/n,o=_/n):p>m?p<r?(n=.707106781,s=0,o=.707106781):(s=Math.sqrt(p),n=y/s,o=w/s):m<r?(n=.707106781,s=.707106781,o=0):(o=Math.sqrt(m),n=_/o,s=w/o),this.set(n,s,o,O),this):(a=Math.sqrt((h-d)*(h-d)+(c-u)*(c-u)+(l-i)*(l-i)),Math.abs(a)<.001&&(a=1),this.x=(h-d)/a,this.y=(c-u)/a,this.z=(l-i)/a,this.w=Math.acos((j+b+v-1)/2),this)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}});function WebGLRenderTarget(e,t,n){this.width=e,this.height=t,this.scissor=new Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new Vector4(0,0,e,t),n=n||{},this.texture=new Texture(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.generateMipmaps=n.generateMipmaps!==void 0&&n.generateMipmaps,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:LinearFilter,this.depthBuffer=n.depthBuffer===void 0||n.depthBuffer,this.stencilBuffer=n.stencilBuffer===void 0||n.stencilBuffer,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.texture.image.width=e,this.texture.image.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function WebGLMultisampleRenderTarget(e,t,n){WebGLRenderTarget.call(this,e,t,n),this.samples=4}WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.samples=e.samples,this}});function Quaternion(e,t,n,s){this._x=e||0,this._y=t||0,this._z=n||0,this._w=s!==void 0?s:1}Object.assign(Quaternion,{slerp:function(e,t,n,s){return n.copy(e).slerp(t,s)},slerpFlat:function(e,t,n,s,o,i,a){var h,m,f,b,d=n[s+0],r=n[s+1],c=n[s+2],l=n[s+3],y=o[i+0],j=o[i+1],v=o[i+2],g=o[i+3];if(l!==g||d!==y||r!==j||c!==v){var u=1-a,p=d*y+r*j+c*v+l*g,_=p>=0?1:-1,w=1-p*p;w>Number.EPSILON&&(f=Math.sqrt(w),b=Math.atan2(f,p*_),u=Math.sin(u*b)/f,a=Math.sin(a*b)/f),m=a*_,d=d*u+y*m,r=r*u+j*m,c=c*u+v*m,l=l*u+g*m,u===1-a&&(h=1/Math.sqrt(d*d+r*r+c*c+l*l),d*=h,r*=h,c*=h,l*=h)}e[t]=d,e[t+1]=r,e[t+2]=c,e[t+3]=l}}),Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},w:{get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}}}),Object.assign(Quaternion.prototype,{isQuaternion:!0,set:function(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this},setFromEuler:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var u=e._x,h=e._y,m=e._z,c=e.order,l=Math.cos,d=Math.sin,n=l(u/2),s=l(h/2),o=l(m/2),i=d(u/2),a=d(h/2),r=d(m/2);return c==="XYZ"?(this._x=i*s*o+n*a*r,this._y=n*a*o-i*s*r,this._z=n*s*r+i*a*o,this._w=n*s*o-i*a*r):c==="YXZ"?(this._x=i*s*o+n*a*r,this._y=n*a*o-i*s*r,this._z=n*s*r-i*a*o,this._w=n*s*o+i*a*r):c==="ZXY"?(this._x=i*s*o-n*a*r,this._y=n*a*o+i*s*r,this._z=n*s*r+i*a*o,this._w=n*s*o-i*a*r):c==="ZYX"?(this._x=i*s*o-n*a*r,this._y=n*a*o+i*s*r,this._z=n*s*r-i*a*o,this._w=n*s*o+i*a*r):c==="YZX"?(this._x=i*s*o+n*a*r,this._y=n*a*o+i*s*r,this._z=n*s*r-i*a*o,this._w=n*s*o-i*a*r):c==="XZY"&&(this._x=i*s*o-n*a*r,this._y=n*a*o-i*s*r,this._z=n*s*r+i*a*o,this._w=n*s*o+i*a*r),t!==!1&&this._onChangeCallback(),this},setFromAxisAngle:function(e,t){var s=t/2,n=Math.sin(s);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(s),this._onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,s=n[0],a=n[4],r=n[8],c=n[1],o=n[5],l=n[9],d=n[2],u=n[6],i=n[10],h=s+o+i;return h>0?(t=.5/Math.sqrt(h+1),this._w=.25/t,this._x=(u-l)*t,this._y=(r-d)*t,this._z=(c-a)*t):s>o&&s>i?(t=2*Math.sqrt(1+s-o-i),this._w=(u-l)/t,this._x=.25*t,this._y=(a+c)/t,this._z=(r+d)/t):o>i?(t=2*Math.sqrt(1+o-s-i),this._w=(r-d)/t,this._x=(a+c)/t,this._y=.25*t,this._z=(l+u)/t):(t=2*Math.sqrt(1+i-s-o),this._w=(c-a)/t,this._x=(r+d)/t,this._y=(l+u)/t,this._z=.25*t),this._onChangeCallback(),this},setFromUnitVectors:function(e,t){var s=1e-6,n=e.dot(t)+1;return n<s?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()},angleTo:function(e){return 2*Math.acos(Math.abs(MathUtils.clamp(this.dot(e),-1,1)))},rotateTowards:function(e,t){var s,n=this.angleTo(e);return n===0?this:(s=Math.min(1,t/n),this.slerp(e,s),this)},inverse:function(){return this.conjugate()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,s=e._y,o=e._z,i=e._w,a=t._x,r=t._y,c=t._z,l=t._w;return this._x=n*l+i*a+s*c-o*r,this._y=s*l+i*r+o*a-n*c,this._z=o*l+i*c+n*r-s*a,this._w=i*l-n*a-s*r-o*c,this._onChangeCallback(),this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var s,o,i,d,u,h,a=this._x,r=this._y,c=this._z,l=this._w,n=l*e._w+a*e._x+r*e._y+c*e._z;return n<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,n=-n):this.copy(e),n>=1?(this._w=l,this._x=a,this._y=r,this._z=c,this):(u=1-n*n,u<=Number.EPSILON?(s=1-t,this._w=s*l+t*this._w,this._x=s*a+t*this._x,this._y=s*r+t*this._y,this._z=s*c+t*this._z,this.normalize(),this._onChangeCallback(),this):(d=Math.sqrt(u),h=Math.atan2(d,n),o=Math.sin((1-t)*h)/d,i=Math.sin(t*h)/d,this._w=l*o+this._w*i,this._x=a*o+this._x*i,this._y=r*o+this._y*i,this._z=c*o+this._z*i,this._onChangeCallback(),this))},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}}),_vector=new Vector3,_quaternion=new Quaternion;function Vector3(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}Object.assign(Vector3.prototype,{isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(_quaternion.setFromEuler(e))},applyAxisAngle:function(e,t){return this.applyQuaternion(_quaternion.setFromAxisAngle(e,t))},applyMatrix3:function(e){var n=this.x,s=this.y,o=this.z,t=e.elements;return this.x=t[0]*n+t[3]*s+t[6]*o,this.y=t[1]*n+t[4]*s+t[7]*o,this.z=t[2]*n+t[5]*s+t[8]*o,this},applyNormalMatrix:function(e){return this.applyMatrix3(e).normalize()},applyMatrix4:function(e){var n=this.x,s=this.y,o=this.z,t=e.elements,i=1/(t[3]*n+t[7]*s+t[11]*o+t[15]);return this.x=(t[0]*n+t[4]*s+t[8]*o+t[12])*i,this.y=(t[1]*n+t[5]*s+t[9]*o+t[13])*i,this.z=(t[2]*n+t[6]*s+t[10]*o+t[14])*i,this},applyQuaternion:function(e){var i=this.x,a=this.y,r=this.z,t=e.x,n=e.y,s=e.z,o=e.w,c=o*i+n*r-s*a,l=o*a+s*i-t*r,d=o*r+t*a-n*i,u=-t*i-n*a-s*r;return this.x=c*o+u*-t+l*-s-d*-n,this.y=l*o+u*-n+d*-t-c*-s,this.z=d*o+u*-s+c*-n-l*-t,this},project:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)},unproject:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)},transformDirection:function(e){var n=this.x,s=this.y,o=this.z,t=e.elements;return this.x=t[0]*n+t[4]*s+t[8]*o,this.y=t[1]*n+t[5]*s+t[9]*o,this.z=t[2]*n+t[6]*s+t[10]*o,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this},clampLength:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(e){return this.normalize().multiplyScalar(e)},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)},crossVectors:function(e,t){var n=e.x,s=e.y,o=e.z,i=t.x,a=t.y,r=t.z;return this.x=s*r-o*a,this.y=o*i-n*r,this.z=n*a-s*i,this},projectOnVector:function(e){var n,t=e.lengthSq();return t===0?this.set(0,0,0):(n=e.dot(this)/t,this.copy(e).multiplyScalar(n))},projectOnPlane:function(e){return _vector.copy(this).projectOnVector(e),this.sub(_vector)},reflect:function(e){return this.sub(_vector.copy(e).multiplyScalar(2*this.dot(e)))},angleTo:function(e){var n,t=Math.sqrt(this.lengthSq()*e.lengthSq());return t===0?Math.PI/2:(n=this.dot(e)/t,Math.acos(MathUtils.clamp(n,-1,1)))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s},manhattanDistanceTo:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)},setFromSphericalCoords:function(e,t,n){var s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this},setFromCylindrical:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)},setFromCylindricalCoords:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this},setFromMatrixPosition:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this},setFromMatrixColumn:function(e,t){return this.fromArray(e.elements,t*4)},setFromMatrix3Column:function(e,t){return this.fromArray(e.elements,t*3)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromBufferAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}}),_v1=new Vector3,_m1=new Matrix4,_zero=new Vector3(0,0,0),_one=new Vector3(1,1,1),_x=new Vector3,_y=new Vector3,_z=new Vector3;function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}Object.assign(Matrix4.prototype,{isMatrix4:!0,set:function(e,t,n,s,o,i,a,r,c,l,d,u,h,m,f,p){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=s,g[1]=o,g[5]=i,g[9]=a,g[13]=r,g[2]=c,g[6]=l,g[10]=d,g[14]=u,g[3]=h,g[7]=m,g[11]=f,g[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new Matrix4).fromArray(this.elements)},copy:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(e){var t=this.elements,n=e.elements,s=1/_v1.setFromMatrixColumn(e,0).length(),o=1/_v1.setFromMatrixColumn(e,1).length(),i=1/_v1.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*o,t[5]=n[5]*o,t[6]=n[6]*o,t[7]=0,t[8]=n[8]*i,t[9]=n[9]*i,t[10]=n[10]*i,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromEuler:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,_=e.x,w=e.y,y=e.z,a=Math.cos(_),o=Math.sin(_),r=Math.cos(w),n=Math.sin(w),i=Math.cos(y),s=Math.sin(y);if(e.order==="XYZ"){var c=a*i,h=a*s,m=o*i,f=o*s;t[0]=r*i,t[4]=-r*s,t[8]=n,t[1]=h+m*n,t[5]=c-f*n,t[9]=-o*r,t[2]=f-c*n,t[6]=m+h*n,t[10]=a*r}else if(e.order==="YXZ"){var l=r*i,g=r*s,v=n*i,b=n*s;t[0]=l+b*o,t[4]=v*o-g,t[8]=a*n,t[1]=a*s,t[5]=a*i,t[9]=-o,t[2]=g*o-v,t[6]=b+l*o,t[10]=a*r}else if(e.order==="ZXY"){var l=r*i,g=r*s,v=n*i,b=n*s;t[0]=l-b*o,t[4]=-a*s,t[8]=v+g*o,t[1]=g+v*o,t[5]=a*i,t[9]=b-l*o,t[2]=-a*n,t[6]=o,t[10]=a*r}else if(e.order==="ZYX"){var c=a*i,h=a*s,m=o*i,f=o*s;t[0]=r*i,t[4]=m*n-h,t[8]=c*n+f,t[1]=r*s,t[5]=f*n+c,t[9]=h*n-m,t[2]=-n,t[6]=o*r,t[10]=a*r}else if(e.order==="YZX"){var j=a*r,p=a*n,u=o*r,d=o*n;t[0]=r*i,t[4]=d-j*s,t[8]=u*s+p,t[1]=s,t[5]=a*i,t[9]=-o*i,t[2]=-n*i,t[6]=p*s+u,t[10]=j-d*s}else if(e.order==="XZY"){var j=a*r,p=a*n,u=o*r,d=o*n;t[0]=r*i,t[4]=-s,t[8]=n*i,t[1]=j*s+d,t[5]=a*i,t[9]=p*s-u,t[2]=u*s-p,t[6]=o*i,t[10]=d*s+j}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){return this.compose(_zero,e,_one)},lookAt:function(e,t,n){var s=this.elements;return _z.subVectors(e,t),_z.lengthSq()===0&&(_z.z=1),_z.normalize(),_x.crossVectors(n,_z),_x.lengthSq()===0&&(Math.abs(n.z)===1?_z.x+=1e-4:_z.z+=1e-4,_z.normalize(),_x.crossVectors(n,_z)),_x.normalize(),_y.crossVectors(_z,_x),s[0]=_x.x,s[4]=_y.x,s[8]=_z.x,s[1]=_x.y,s[5]=_y.y,s[9]=_z.y,s[2]=_x.z,s[6]=_y.z,s[10]=_z.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,s=t.elements,o=this.elements,i=n[0],a=n[4],r=n[8],c=n[12],l=n[1],d=n[5],u=n[9],h=n[13],m=n[2],f=n[6],p=n[10],g=n[14],v=n[3],b=n[7],j=n[11],y=n[15],_=s[0],w=s[4],O=s[8],x=s[12],C=s[1],E=s[5],k=s[9],A=s[13],S=s[2],M=s[6],F=s[10],T=s[14],z=s[3],D=s[7],N=s[11],L=s[15];return o[0]=i*_+a*C+r*S+c*z,o[4]=i*w+a*E+r*M+c*D,o[8]=i*O+a*k+r*F+c*N,o[12]=i*x+a*A+r*T+c*L,o[1]=l*_+d*C+u*S+h*z,o[5]=l*w+d*E+u*M+h*D,o[9]=l*O+d*k+u*F+h*N,o[13]=l*x+d*A+u*T+h*L,o[2]=m*_+f*C+p*S+g*z,o[6]=m*w+f*E+p*M+g*D,o[10]=m*O+f*k+p*F+g*N,o[14]=m*x+f*A+p*T+g*L,o[3]=v*_+b*C+j*S+y*z,o[7]=v*w+b*E+j*M+y*D,o[11]=v*O+b*k+j*F+y*N,o[15]=v*x+b*A+j*T+y*L,this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[4],s=e[8],o=e[12],i=e[1],a=e[5],r=e[9],c=e[13],l=e[2],d=e[6],u=e[10],h=e[14],m=e[3],f=e[7],p=e[11],g=e[15];return m*(+o*r*d-s*c*d-o*a*u+n*c*u+s*a*h-n*r*h)+f*(+t*r*h-t*c*u+o*i*u-s*i*h+s*c*l-o*r*l)+p*(+t*c*d-t*a*h-o*i*d+n*i*h+o*a*l-n*c*l)+g*(-s*a*l-t*r*d+t*a*u+s*i*d-n*i*u+n*r*l)},transpose:function(){var e=this.elements,t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e,t,n){var s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this},getInverse:function(e,t){var b,_,y=this.elements,j=e.elements,o=j[0],i=j[1],n=j[2],s=j[3],c=j[4],l=j[5],d=j[6],u=j[7],h=j[8],m=j[9],a=j[10],p=j[11],g=j[12],r=j[13],v=j[14],f=j[15],w=m*v*u-r*a*u+r*d*p-l*v*p-m*d*f+l*a*f,O=g*a*u-h*v*u-g*d*p+c*v*p+h*d*f-c*a*f,x=h*r*u-g*m*u+g*l*p-c*r*p-h*l*f+c*m*f,C=g*m*d-h*r*d-g*l*a+c*r*a+h*l*v-c*m*v,E=o*w+i*O+n*x+s*C;if(E===0){if(_="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0",t===!0)throw new Error(_);return console.warn(_),this.identity()}return b=1/E,y[0]=w*b,y[1]=(r*a*s-m*v*s-r*n*p+i*v*p+m*n*f-i*a*f)*b,y[2]=(l*v*s-r*d*s+r*n*u-i*v*u-l*n*f+i*d*f)*b,y[3]=(m*d*s-l*a*s-m*n*u+i*a*u+l*n*p-i*d*p)*b,y[4]=O*b,y[5]=(h*v*s-g*a*s+g*n*p-o*v*p-h*n*f+o*a*f)*b,y[6]=(g*d*s-c*v*s-g*n*u+o*v*u+c*n*f-o*d*f)*b,y[7]=(c*a*s-h*d*s+h*n*u-o*a*u-c*n*p+o*d*p)*b,y[8]=x*b,y[9]=(g*m*s-h*r*s-g*i*p+o*r*p+h*i*f-o*m*f)*b,y[10]=(c*r*s-g*l*s+g*i*u-o*r*u-c*i*f+o*l*f)*b,y[11]=(h*l*s-c*m*s-h*i*u+o*m*u+c*i*p-o*l*p)*b,y[12]=C*b,y[13]=(h*r*n-g*m*n+g*i*a-o*r*a-h*i*v+o*m*v)*b,y[14]=(g*l*n-c*r*n-g*i*d+o*r*d+c*i*v-o*l*v)*b,y[15]=(c*m*n-h*l*n+h*i*d-o*m*d-c*i*a+o*l*a)*b,this},scale:function(e){var t=this.elements,n=e.x,s=e.y,o=e.z;return t[0]*=n,t[4]*=s,t[8]*=o,t[1]*=n,t[5]*=s,t[9]*=o,t[2]*=n,t[6]*=s,t[10]*=o,t[3]*=n,t[7]*=s,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var a=Math.cos(t),s=Math.sin(t),c=1-a,r=e.x,o=e.y,n=e.z,i=c*r,l=c*o;return this.set(i*r+a,i*o-s*n,i*n+s*o,0,i*o+s*n,l*o+a,l*n-s*r,0,i*n-s*o,l*n+s*r,c*n*n+a,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){var s=this.elements,o=t._x,i=t._y,r=t._z,c=t._w,w=o+o,d=i+i,a=r+r,_=o*w,y=o*d,m=o*a,f=i*d,p=i*a,g=r*a,v=c*w,b=c*d,j=c*a,h=n.x,u=n.y,l=n.z;return s[0]=(1-(f+g))*h,s[1]=(y+j)*h,s[2]=(m-b)*h,s[3]=0,s[4]=(y-j)*u,s[5]=(1-(_+g))*u,s[6]=(p+v)*u,s[7]=0,s[8]=(m+b)*l,s[9]=(p-v)*l,s[10]=(1-(_+f))*l,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this},decompose:function(e,t,n){var i,a,r,s=this.elements,o=_v1.set(s[0],s[1],s[2]).length(),c=_v1.set(s[4],s[5],s[6]).length(),l=_v1.set(s[8],s[9],s[10]).length(),d=this.determinant();return d<0&&(o=-o),e.x=s[12],e.y=s[13],e.z=s[14],_m1.copy(this),i=1/o,a=1/c,r=1/l,_m1.elements[0]*=i,_m1.elements[1]*=i,_m1.elements[2]*=i,_m1.elements[4]*=a,_m1.elements[5]*=a,_m1.elements[6]*=a,_m1.elements[8]*=r,_m1.elements[9]*=r,_m1.elements[10]*=r,t.setFromRotationMatrix(_m1),n.x=o,n.y=c,n.z=l,this},makePerspective:function(e,t,n,s,o,i){i===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var a=this.elements,r=2*o/(t-e),c=2*o/(n-s),l=(t+e)/(t-e),d=(n+s)/(n-s),u=-(i+o)/(i-o),h=-2*i*o/(i-o);return a[0]=r,a[4]=0,a[8]=l,a[12]=0,a[1]=0,a[5]=c,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=h,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makeOrthographic:function(e,t,n,s,o,i){var a=this.elements,r=1/(t-e),c=1/(n-s),l=1/(i-o),d=(t+e)*r,u=(n+s)*c,h=(i+o)*l;return a[0]=2*r,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2*l,a[14]=-h,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){for(var n=this.elements,s=e.elements,t=0;t<16;t++)if(n[t]!==s[t])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}),_matrix=new Matrix4,_quaternion$1=new Quaternion;function Euler(e,t,n,s){this._x=e||0,this._y=t||0,this._z=n||0,this._order=s||Euler.DefaultOrder}Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],Euler.DefaultOrder="XYZ",Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},y:{get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},z:{get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},order:{get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}}}),Object.assign(Euler.prototype,{isEuler:!0,set:function(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._order=s||this._order,this._onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var o=MathUtils.clamp,s=e.elements,i=s[0],c=s[4],l=s[8],d=s[1],a=s[5],u=s[9],h=s[2],m=s[6],r=s[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(o(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,r),this._z=Math.atan2(-c,i)):(this._x=Math.atan2(m,a),this._z=0)):t==="YXZ"?(this._x=Math.asin(-o(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,r),this._z=Math.atan2(d,a)):(this._y=Math.atan2(-h,i),this._z=0)):t==="ZXY"?(this._x=Math.asin(o(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-h,r),this._z=Math.atan2(-c,a)):(this._y=0,this._z=Math.atan2(d,i))):t==="ZYX"?(this._y=Math.asin(-o(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(m,r),this._z=Math.atan2(d,i)):(this._x=0,this._z=Math.atan2(-c,a))):t==="YZX"?(this._z=Math.asin(o(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-u,a),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(l,r))):t==="XZY"?(this._z=Math.asin(-o(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(m,a),this._y=Math.atan2(l,i)):(this._x=Math.atan2(-u,r),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this._onChangeCallback(),this},setFromQuaternion:function(e,t,n){return _matrix.makeRotationFromQuaternion(e),this.setFromRotationMatrix(_matrix,t,n)},setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(e){return _quaternion$1.setFromEuler(this),this.setFromQuaternion(_quaternion$1,e)},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new Vector3(this._x,this._y,this._z)},_onChange:function(e){return this._onChangeCallback=e,this},_onChangeCallback:function(){}});function Layers(){this.mask=1|0}Object.assign(Layers.prototype,{set:function(e){this.mask=1<<e|0},enable:function(e){this.mask|=1<<e|0},enableAll:function(){this.mask=4294967295|0},toggle:function(e){this.mask^=1<<e|0},disable:function(e){this.mask&=~(1<<e|0)},disableAll:function(){this.mask=0},test:function(e){return(this.mask&e.mask)!==0}}),_object3DId=0,_v1$1=new Vector3,_q1=new Quaternion,_m1$1=new Matrix4,_target=new Vector3,_position=new Vector3,_scale=new Vector3,_quaternion$2=new Quaternion,_xAxis=new Vector3(1,0,0),_yAxis=new Vector3(0,1,0),_zAxis=new Vector3(0,0,1),_addedEvent={type:"added"},_removedEvent={type:"removed"};function Object3D(){Object.defineProperty(this,"id",{value:_object3DId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Object3D.DefaultUp.clone();var n=new Vector3,e=new Euler,t=new Quaternion,s=new Vector3(1,1,1);function o(){t.setFromEuler(e,!1)}function i(){e.setFromQuaternion(t,void 0,!1)}e._onChange(o),t._onChange(i),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:n},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:t},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Matrix4},normalMatrix:{value:new Matrix3}}),this.matrix=new Matrix4,this.matrixWorld=new Matrix4,this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}Object3D.DefaultUp=new Vector3(0,1,0),Object3D.DefaultMatrixAutoUpdate=!0,Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(e){return this.quaternion.premultiply(e),this},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.multiply(_q1),this},rotateOnWorldAxis:function(e,t){return _q1.setFromAxisAngle(e,t),this.quaternion.premultiply(_q1),this},rotateX:function(e){return this.rotateOnAxis(_xAxis,e)},rotateY:function(e){return this.rotateOnAxis(_yAxis,e)},rotateZ:function(e){return this.rotateOnAxis(_zAxis,e)},translateOnAxis:function(e,t){return _v1$1.copy(e).applyQuaternion(this.quaternion),this.position.add(_v1$1.multiplyScalar(t)),this},translateX:function(e){return this.translateOnAxis(_xAxis,e)},translateY:function(e){return this.translateOnAxis(_yAxis,e)},translateZ:function(e){return this.translateOnAxis(_zAxis,e)},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(_m1$1.getInverse(this.matrixWorld))},lookAt:function(e,t,n){e.isVector3?_target.copy(e):_target.set(e,t,n);var s=this.parent;this.updateWorldMatrix(!0,!1),_position.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?_m1$1.lookAt(_position,_target,this.up):_m1$1.lookAt(_target,_position,this.up),this.quaternion.setFromRotationMatrix(_m1$1),s&&(_m1$1.extractRotation(s.matrixWorld),_q1.setFromRotationMatrix(_m1$1),this.quaternion.premultiply(_q1.inverse()))},add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(_addedEvent)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1){for(var n,t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}return n=this.children.indexOf(e),n!==-1&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(_removedEvent)),this},attach:function(e){return this.updateWorldMatrix(!0,!1),_m1$1.getInverse(this.matrixWorld),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),_m1$1.multiply(e.parent.matrixWorld)),e.applyMatrix4(_m1$1),e.updateWorldMatrix(!1,!1),this.add(e),this},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var s,o,n=0,i=this.children.length;n<i;n++)if(o=this.children[n],s=o.getObjectByProperty(e,t),s!==void 0)return s},getWorldPosition:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new Quaternion),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,e,_scale),e},getWorldScale:function(e){return e===void 0&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new Vector3),this.updateMatrixWorld(!0),this.matrixWorld.decompose(_position,_quaternion$2,e),e},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new Vector3),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()},raycast:function(){},traverse:function(e){e(this),t=this.children;for(var t,n=0,s=t.length;n<s;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this),t=this.children;for(var t,n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){var t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0),t=this.children;for(var t,n=0,s=t.length;n<s;n++)t[n].updateMatrixWorld(e)},updateWorldMatrix:function(e,t){if(n=this.parent,e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){s=this.children;for(var n,s,o=0,i=s.length;o<i;o++)s[o].updateWorldMatrix(!1,!0)}},toJSON:function(e){c=e===void 0||typeof e=="string",s={},c&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{}},s.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),t={},t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.castShadow===!0&&(t.castShadow=!0),this.receiveShadow===!0&&(t.receiveShadow=!0),this.visible===!1&&(t.visible=!1),this.frustumCulled===!1&&(t.frustumCulled=!1),this.renderOrder!==0&&(t.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData),t.layers=this.layers.mask,t.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(t.matrixAutoUpdate=!1),this.isInstancedMesh&&(t.type="InstancedMesh",t.count=this.count,t.instanceMatrix=this.instanceMatrix.toJSON());function i(t,n){return t[n.uuid]===void 0&&(t[n.uuid]=n.toJSON(e)),n.uuid}if((this.isMesh||this.isLine||this.isPoints)&&(t.geometry=i(e.geometries,this.geometry),r=this.geometry.parameters,r!==void 0&&r.shapes!==void 0))if(o=r.shapes,Array.isArray(o))for(var t,s,o,r,c,d,u,h,m,f,p,n=0,l=o.length;n<l;n++)p=o[n],i(e.shapes,p);else i(e.shapes,o);if(this.material!==void 0)if(Array.isArray(this.material)){d=[];for(n=0,l=this.material.length;n<l;n++)d.push(i(e.materials,this.material[n]));t.material=d}else t.material=i(e.materials,this.material);if(this.children.length>0){t.children=[];for(n=0;n<this.children.length;n++)t.children.push(this.children[n].toJSON(e).object)}return c&&(u=a(e.geometries),h=a(e.materials),m=a(e.textures),f=a(e.images),o=a(e.shapes),u.length>0&&(s.geometries=u),h.length>0&&(s.materials=h),m.length>0&&(s.textures=m),f.length>0&&(s.images=f),o.length>0&&(s.shapes=o)),s.object=t,s;function a(e){var t,s,n=[];for(s in e)t=e[s],delete t.metadata,n.push(t);return n}},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(var s,n=0;n<e.children.length;n++)s=e.children[n],this.add(s.clone());return this}});function Scene(){Object3D.call(this),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.environment!==null&&(t.object.environment=this.environment.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t},dispose:function(){this.dispatchEvent({type:"dispose"})}}),_points=[new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3,new Vector3],_vector$1=new Vector3,_box=new Box3,_v0=new Vector3,_v1$2=new Vector3,_v2=new Vector3,_f0=new Vector3,_f1=new Vector3,_f2=new Vector3,_center=new Vector3,_extents=new Vector3,_triangleNormal=new Vector3,_testAxis=new Vector3;function Box3(e,t){this.min=e!==void 0?e:new Vector3(+(1/0),+(1/0),+(1/0)),this.max=t!==void 0?t:new Vector3(-(1/0),-(1/0),-(1/0))}Object.assign(Box3.prototype,{isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){i=+(1/0),a=+(1/0),r=+(1/0),c=-(1/0),l=-(1/0),d=-(1/0);for(var n,s,o,i,a,r,c,l,d,t=0,u=e.length;t<u;t+=3)n=e[t],s=e[t+1],o=e[t+2],n<i&&(i=n),s<a&&(a=s),o<r&&(r=o),n>c&&(c=n),s>l&&(l=s),o>d&&(d=o);return this.min.set(i,a,r),this.max.set(c,l,d),this},setFromBufferAttribute:function(e){i=+(1/0),a=+(1/0),r=+(1/0),c=-(1/0),l=-(1/0),d=-(1/0);for(var n,s,o,i,a,r,c,l,d,t=0,u=e.count;t<u;t++)n=e.getX(t),s=e.getY(t),o=e.getZ(t),n<i&&(i=n),s<a&&(a=s),o<r&&(r=o),n>c&&(c=n),s>l&&(l=s),o>d&&(d=o);return this.min.set(i,a,r),this.max.set(c,l,d),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var n=_vector$1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},setFromObject:function(e){return this.makeEmpty(),this.expandByObject(e)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+(1/0),this.max.x=this.max.y=this.max.z=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new Vector3),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},expandByObject:function(e){e.updateWorldMatrix(!1,!1),t=e.geometry,t!==void 0&&(t.boundingBox===null&&t.computeBoundingBox(),_box.copy(t.boundingBox),_box.applyMatrix4(e.matrixWorld),this.expandByPoint(_box.min),this.expandByPoint(_box.max)),n=e.children;for(var t,n,s=0,o=n.length;s<o;s++)this.expandByObject(n[s]);return this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new Vector3),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(e){return this.clampPoint(e.center,_vector$1),_vector$1.distanceToSquared(e.center)<=e.radius*e.radius},intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant},intersectsTriangle:function(e){if(this.isEmpty())return!1;this.getCenter(_center),_extents.subVectors(this.max,_center),_v0.subVectors(e.a,_center),_v1$2.subVectors(e.b,_center),_v2.subVectors(e.c,_center),_f0.subVectors(_v1$2,_v0),_f1.subVectors(_v2,_v1$2),_f2.subVectors(_v0,_v2);var t=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];return!!satForAxes(t,_v0,_v1$2,_v2,_extents)&&(t=[1,0,0,0,1,0,0,0,1],!!satForAxes(t,_v0,_v1$2,_v2,_extents)&&(_triangleNormal.crossVectors(_f0,_f1),t=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z],satForAxes(t,_v0,_v1$2,_v2,_extents)))},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new Vector3),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=_vector$1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){return e===void 0&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=this.getSize(_vector$1).length()*.5,e},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(e){return this.isEmpty()?this:(_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(_points),this)},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}});function satForAxes(e,t,n,s,o){for(i=0,l=e.length-3;i<=l;i+=3){_testAxis.fromArray(e,i);var i,l,d=o.x*Math.abs(_testAxis.x)+o.y*Math.abs(_testAxis.y)+o.z*Math.abs(_testAxis.z),a=t.dot(_testAxis),r=n.dot(_testAxis),c=s.dot(_testAxis);if(Math.max(-Math.max(a,r,c),Math.min(a,r,c))>d)return!1}return!0}_box$1=new Box3;function Sphere(e,t){this.center=e!==void 0?e:new Vector3,this.radius=t!==void 0?t:0}Object.assign(Sphere.prototype,{set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(e,t){n=this.center,t!==void 0?n.copy(t):_box$1.setFromPoints(e).getCenter(n),s=0;for(var n,s,o=0,i=e.length;o<i;o++)s=Math.max(s,n.distanceToSquared(e[o]));return this.radius=Math.sqrt(s),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e);return t===void 0&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new Vector3),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t},getBoundingBox:function(e){return e===void 0&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new Box3),e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}}),_vector$2=new Vector3,_segCenter=new Vector3,_segDir=new Vector3,_diff=new Vector3,_edge1=new Vector3,_edge2=new Vector3,_normal=new Vector3;function Ray(e,t){this.origin=e!==void 0?e:new Vector3,this.direction=t!==void 0?t:new Vector3(0,0,-1)}Object.assign(Ray.prototype,{set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return t===void 0&&(console.warn("THREE.Ray: .at() target is now required"),t=new Vector3),t.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(e){return this.origin.copy(this.at(e,_vector$2)),this},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new Vector3),t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(e){var t=_vector$2.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(_vector$2.copy(this.direction).multiplyScalar(t).add(this.origin),_vector$2.distanceToSquared(e))},distanceSqToSegment:function(e,t,n,s){_segCenter.copy(e).add(t).multiplyScalar(.5),_segDir.copy(t).sub(e).normalize(),_diff.copy(this.origin).sub(_segCenter);var o,i,d,h,f,a=e.distanceTo(t)*.5,r=-this.direction.dot(_segDir),l=_diff.dot(this.direction),c=-_diff.dot(_segDir),u=_diff.lengthSq(),m=Math.abs(1-r*r);return m>0?(i=r*c-l,o=r*l-c,h=a*m,i>=0?o>=-h?o<=h?(f=1/m,i*=f,o*=f,d=i*(i+r*o+2*l)+o*(r*i+o+2*c)+u):(o=a,i=Math.max(0,-(r*o+l)),d=-i*i+o*(o+2*c)+u):(o=-a,i=Math.max(0,-(r*o+l)),d=-i*i+o*(o+2*c)+u):o<=-h?(i=Math.max(0,-(-r*a+l)),o=i>0?-a:Math.min(Math.max(-a,-c),a),d=-i*i+o*(o+2*c)+u):o<=h?(i=0,o=Math.min(Math.max(-a,-c),a),d=o*(o+2*c)+u):(i=Math.max(0,-(r*a+l)),o=i>0?a:Math.min(Math.max(-a,-c),a),d=-i*i+o*(o+2*c)+u)):(o=r>0?-a:a,i=Math.max(0,-(r*o+l)),d=-i*i+o*(o+2*c)+u),n&&n.copy(this.direction).multiplyScalar(i).add(this.origin),s&&s.copy(_segDir).multiplyScalar(o).add(_segCenter),d},intersectSphere:function(e,t){_vector$2.subVectors(e.center,this.origin);var s,o,i,n=_vector$2.dot(this.direction),a=_vector$2.dot(_vector$2)-n*n,r=e.radius*e.radius;return a>r?null:(o=Math.sqrt(r-a),s=n-o,i=n+o,s<0&&i<0?null:s<0?this.at(i,t):this.at(s,t))},intersectsSphere:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius},distanceToPlane:function(e){var t,n=e.normal.dot(this.direction);return n===0?e.distanceToPoint(this.origin)===0?0:null:(t=-(this.origin.dot(e.normal)+e.constant)/n,t>=0?t:null)},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return n===null?null:this.at(n,t)},intersectsPlane:function(e){var n,t=e.distanceToPoint(this.origin);return t===0||(n=e.normal.dot(this.direction),n*t<0)},intersectBox:function(e,t){var n,s,i,a,r,c,l=1/this.direction.x,d=1/this.direction.y,u=1/this.direction.z,o=this.origin;return l>=0?(n=(e.min.x-o.x)*l,s=(e.max.x-o.x)*l):(n=(e.max.x-o.x)*l,s=(e.min.x-o.x)*l),d>=0?(i=(e.min.y-o.y)*d,a=(e.max.y-o.y)*d):(i=(e.max.y-o.y)*d,a=(e.min.y-o.y)*d),n>a||i>s?null:((i>n||n!==n)&&(n=i),(a<s||s!==s)&&(s=a),u>=0?(r=(e.min.z-o.z)*u,c=(e.max.z-o.z)*u):(r=(e.max.z-o.z)*u,c=(e.min.z-o.z)*u),n>c||r>s?null:((r>n||n!==n)&&(n=r),(c<s||s!==s)&&(s=c),s<0?null:this.at(n>=0?n:s,t)))},intersectsBox:function(e){return this.intersectBox(e,_vector$2)!==null},intersectTriangle:function(e,t,n,s,o){_edge1.subVectors(t,e),_edge2.subVectors(n,e),_normal.crossVectors(_edge1,_edge2);var a,r,c,l,i=this.direction.dot(_normal);if(i>0){if(s)return null;a=1}else if(i<0)a=-1,i=-i;else return null;return _diff.subVectors(this.origin,e),r=a*this.direction.dot(_edge2.crossVectors(_diff,_edge2)),r<0?null:(c=a*this.direction.dot(_edge1.cross(_diff)),c<0?null:r+c>i?null:(l=-a*_diff.dot(_normal),l<0?null:this.at(l/i,o)))},applyMatrix4:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}}),_vector1=new Vector3,_vector2=new Vector3,_normalMatrix=new Matrix3;function Plane(e,t){this.normal=e!==void 0?e:new Vector3(1,0,0),this.constant=t!==void 0?t:0}Object.assign(Plane.prototype,{isPlane:!0,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,n){var s=_vector1.subVectors(n,t).cross(_vector2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return t===void 0&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new Vector3),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)},intersectLine:function(e,t){t===void 0&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new Vector3);var n,s=e.delta(_vector1),o=this.normal.dot(s);return o===0?this.distanceToPoint(e.start)===0?t.copy(e.start):void 0:(n=-(e.start.dot(this.normal)+this.constant)/o,n<0||n>1?void 0:t.copy(s).multiplyScalar(n).add(e.start))},intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return e===void 0&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new Vector3),e.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(e,t){var n=t||_normalMatrix.getNormalMatrix(e),s=this.coplanarPoint(_vector1).applyMatrix4(e),o=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(o),this},translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}}),_v0$1=new Vector3,_v1$3=new Vector3,_v2$1=new Vector3,_v3=new Vector3,_vab=new Vector3,_vac=new Vector3,_vbc=new Vector3,_vap=new Vector3,_vbp=new Vector3,_vcp=new Vector3;function Triangle(e,t,n){this.a=e!==void 0?e:new Vector3,this.b=t!==void 0?t:new Vector3,this.c=n!==void 0?n:new Vector3}Object.assign(Triangle,{getNormal:function(e,t,n,s){s===void 0&&(console.warn("THREE.Triangle: .getNormal() target is now required"),s=new Vector3),s.subVectors(n,t),_v0$1.subVectors(e,t),s.cross(_v0$1);var o=s.lengthSq();return o>0?s.multiplyScalar(1/Math.sqrt(o)):s.set(0,0,0)},getBarycoord:function(e,t,n,s,o){_v0$1.subVectors(s,t),_v1$3.subVectors(n,t),_v2$1.subVectors(e,t);var a,r,c,l=_v0$1.dot(_v0$1),i=_v0$1.dot(_v1$3),d=_v0$1.dot(_v2$1),u=_v1$3.dot(_v1$3),h=_v1$3.dot(_v2$1),m=l*u-i*i;return o===void 0&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),o=new Vector3),m===0?o.set(-2,-1,-1):(a=1/m,r=(u*d-i*h)*a,c=(l*h-i*d)*a,o.set(1-r-c,c,r))},containsPoint:function(e,t,n,s){return Triangle.getBarycoord(e,t,n,s,_v3),_v3.x>=0&&_v3.y>=0&&_v3.x+_v3.y<=1},getUV:function(e,t,n,s,o,i,a,r){return this.getBarycoord(e,t,n,s,_v3),r.set(0,0),r.addScaledVector(o,_v3.x),r.addScaledVector(i,_v3.y),r.addScaledVector(a,_v3.z),r},isFrontFacing:function(e,t,n,s){return _v0$1.subVectors(n,t),_v1$3.subVectors(e,t),_v0$1.cross(_v1$3).dot(s)<0}}),Object.assign(Triangle.prototype,{set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},getArea:function(){return _v0$1.subVectors(this.c,this.b),_v1$3.subVectors(this.a,this.b),_v0$1.cross(_v1$3).length()*.5},getMidpoint:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new Vector3),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},getNormal:function(e){return Triangle.getNormal(this.a,this.b,this.c,e)},getPlane:function(e){return e===void 0&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new Plane),e.setFromCoplanarPoints(this.a,this.b,this.c)},getBarycoord:function(e,t){return Triangle.getBarycoord(e,this.a,this.b,this.c,t)},getUV:function(e,t,n,s,o){return Triangle.getUV(e,this.a,this.b,this.c,t,n,s,o)},containsPoint:function(e){return Triangle.containsPoint(e,this.a,this.b,this.c)},isFrontFacing:function(e){return Triangle.isFrontFacing(this.a,this.b,this.c,e)},intersectsBox:function(e){return e.intersectsTriangle(this)},closestPointToPoint:function(e,t){t===void 0&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new Vector3);var n,s,i,a,r,c,l,u,h,f,p,g,o=this.a,d=this.b,m=this.c;return _vab.subVectors(d,o),_vac.subVectors(m,o),_vap.subVectors(e,o),i=_vab.dot(_vap),a=_vac.dot(_vap),i<=0&&a<=0?t.copy(o):(_vbp.subVectors(e,d),n=_vab.dot(_vbp),r=_vac.dot(_vbp),n>=0&&r<=n?t.copy(d):(h=i*r-n*a,h<=0&&i>=0&&n<=0?(u=i/(i-n),t.copy(o).addScaledVector(_vab,u)):(_vcp.subVectors(e,m),c=_vab.dot(_vcp),s=_vac.dot(_vcp),s>=0&&c<=s?t.copy(m):(f=c*a-i*s,f<=0&&a>=0&&s<=0?(l=a/(a-s),t.copy(o).addScaledVector(_vac,l)):(p=n*s-c*r,p<=0&&r-n>=0&&c-s>=0?(_vbc.subVectors(m,d),l=(r-n)/(r-n+(c-s)),t.copy(d).addScaledVector(_vbc,l)):(g=1/(p+f+h),u=f*g,l=h*g,t.copy(o).addScaledVector(_vab,u).addScaledVector(_vac,l)))))))},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}),_colorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},_hslA={h:0,s:0,l:0},_hslB={h:0,s:0,l:0};function Color(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}function hue2rgb(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}function SRGBToLinear(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function LinearToSRGB(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}Object.assign(Color.prototype,{isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(e,t,n){if(e=MathUtils.euclideanModulo(e,1),t=MathUtils.clamp(t,0,1),n=MathUtils.clamp(n,0,1),t===0)this.r=this.g=this.b=n;else{var s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=hue2rgb(o,s,e+1/3),this.g=hue2rgb(o,s,e),this.b=hue2rgb(o,s,e-1/3)}return this},setStyle:function(e){function o(t){if(t===void 0)return;parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}if(s=/^((?:rgb|hsl)a?)\(\s*([^)]*)\)/.exec(e)){var t,n,s,a,r,c,l,d=s[1],i=s[2];switch(d){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,o(t[5]),this;if(t=/^(\d+)%\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,o(t[5]),this;break;case"hsl":case"hsla":if(t=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(i))return r=parseFloat(t[1])/360,c=parseInt(t[2],10)/100,l=parseInt(t[3],10)/100,o(t[5]),this.setHSL(r,c,l);break}}else if(s=/^#([A-Fa-f0-9]+)$/.exec(e)){if(n=s[1],a=n.length,a===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,this;if(a===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this},setColorName:function(e){var t=_colorKeywords[e];return t!==void 0?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){t===void 0&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(e){return this.copyGammaToLinear(this,e),this},convertLinearToGamma:function(e){return this.copyLinearToGamma(this,e),this},copySRGBToLinear:function(e){return this.r=SRGBToLinear(e.r),this.g=SRGBToLinear(e.g),this.b=SRGBToLinear(e.b),this},copyLinearToSRGB:function(e){return this.r=LinearToSRGB(e.r),this.g=LinearToSRGB(e.g),this.b=LinearToSRGB(e.b),this},convertSRGBToLinear:function(){return this.copySRGBToLinear(this),this},convertLinearToSRGB:function(){return this.copyLinearToSRGB(this),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e===void 0&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var o,i,c,a=this.r,t=this.g,n=this.b,s=Math.max(a,t,n),r=Math.min(a,t,n),l=(r+s)/2;if(r===s)o=0,c=0;else{switch(i=s-r,c=l<=.5?i/(s+r):i/(2-s-r),s){case a:o=(t-n)/i+(t<n?6:0);break;case t:o=(n-a)/i+2;break;case n:o=(a-t)/i+4;break}o/=6}return e.h=o,e.s=c,e.l=l,e},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){return this.getHSL(_hslA),_hslA.h+=e,_hslA.s+=t,_hslA.l+=n,this.setHSL(_hslA.h,_hslA.s,_hslA.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},lerpHSL:function(e,t){this.getHSL(_hslA),e.getHSL(_hslB);var n=MathUtils.lerp(_hslA.h,_hslB.h,t),s=MathUtils.lerp(_hslA.s,_hslB.s,t),o=MathUtils.lerp(_hslA.l,_hslB.l,t);return this.setHSL(n,s,o),this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}}),Color.NAMES=_colorKeywords;function Face3(e,t,n,s,o,i){this.a=e,this.b=t,this.c=n,this.normal=s&&s.isVector3?s:new Vector3,this.vertexNormals=Array.isArray(s)?s:[],this.color=o&&o.isColor?o:new Color,this.vertexColors=Array.isArray(o)?o:[],this.materialIndex=i!==void 0?i:0}Object.assign(Face3.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}}),materialId=0;function Material(){Object.defineProperty(this,"id",{value:materialId++}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=NormalBlending,this.side=FrontSide,this.flatShading=!1,this.vertexTangents=!1,this.vertexColors=NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=SrcAlphaFactor,this.blendDst=OneMinusSrcAlphaFactor,this.blendEquation=AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=AlwaysStencilFunc,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=KeepStencilOp,this.stencilZFail=KeepStencilOp,this.stencilZPass=KeepStencilOp,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:!0,onBeforeCompile:function(){},setValues:function(e){if(e===void 0)return;for(s in e){var t,s,n=e[s];if(n===void 0){console.warn("THREE.Material: '"+s+"' parameter is undefined.");continue}if(s==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===FlatShading;continue}if(t=this[s],t===void 0){console.warn("THREE."+this.type+": '"+s+"' is not a property of this material.");continue}t&&t.isColor?t.set(n):t&&t.isVector3&&n&&n.isVector3?t.copy(n):this[s]=n}},toJSON:function(e){var t,n,s,o=e===void 0||typeof e=="string";o&&(e={textures:{},images:{}}),t={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}},t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),this.roughness!==void 0&&(t.roughness=this.roughness),this.metalness!==void 0&&(t.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(t.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),this.shininess!==void 0&&(t.shininess=this.shininess),this.clearcoat!==void 0&&(t.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(e).uuid),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(e).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(e).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(e).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(e).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(e).uuid,t.reflectivity=this.reflectivity,t.refractionRatio=this.refractionRatio,this.combine!==void 0&&(t.combine=this.combine),this.envMapIntensity!==void 0&&(t.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(t.size=this.size),this.sizeAttenuation!==void 0&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==NormalBlending&&(t.blending=this.blending),this.flatShading===!0&&(t.flatShading=this.flatShading),this.side!==FrontSide&&(t.side=this.side),this.vertexColors!==NoColors&&(t.vertexColors=this.vertexColors),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation&&this.rotation!==0&&(t.rotation=this.rotation),this.polygonOffset===!0&&(t.polygonOffset=!0),this.polygonOffsetFactor!==0&&(t.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&this.linewidth!==1&&(t.linewidth=this.linewidth),this.dashSize!==void 0&&(t.dashSize=this.dashSize),this.gapSize!==void 0&&(t.gapSize=this.gapSize),this.scale!==void 0&&(t.scale=this.scale),this.dithering===!0&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(t.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(t.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(t.wireframeLinejoin=this.wireframeLinejoin),this.morphTargets===!0&&(t.morphTargets=!0),this.morphNormals===!0&&(t.morphNormals=!0),this.skinning===!0&&(t.skinning=!0),this.visible===!1&&(t.visible=!1),this.toneMapped===!1&&(t.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(t.userData=this.userData);function i(e){var t,s,n=[];for(s in e)t=e[s],delete t.metadata,n.push(t);return n}return o&&(n=i(e.textures),s=i(e.images),n.length>0&&(t.textures=n),s.length>0&&(t.images=s)),t},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t,o,n=e.clippingPlanes,s=null;if(n!==null){o=n.length,s=new Array(o);for(t=0;t!==o;++t)s[t]=n[t].clone()}return this.clippingPlanes=s,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Material.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}});function MeshBasicMaterial(e){Material.call(this),this.type="MeshBasicMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}MeshBasicMaterial.prototype=Object.create(Material.prototype),MeshBasicMaterial.prototype.constructor=MeshBasicMaterial,MeshBasicMaterial.prototype.isMeshBasicMaterial=!0,MeshBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},_vector$3=new Vector3;function BufferAttribute(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(BufferAttribute.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}}),Object.assign(BufferAttribute.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var s=0,o=this.itemSize;s<o;s++)this.array[e+s]=t.array[n+s];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t,s=this.array,o=0,n=0,i=e.length;n<i;n++)t=e[n],t===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",n),t=new Color),s[o++]=t.r,s[o++]=t.g,s[o++]=t.b;return this},copyVector2sArray:function(e){for(var t,s=this.array,o=0,n=0,i=e.length;n<i;n++)t=e[n],t===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",n),t=new Vector2),s[o++]=t.x,s[o++]=t.y;return this},copyVector3sArray:function(e){for(var t,s=this.array,o=0,n=0,i=e.length;n<i;n++)t=e[n],t===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",n),t=new Vector3),s[o++]=t.x,s[o++]=t.y,s[o++]=t.z;return this},copyVector4sArray:function(e){for(var t,n=this.array,s=0,o=0,i=e.length;o<i;o++)t=e[o],t===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",o),t=new Vector4),n[s++]=t.x,n[s++]=t.y,n[s++]=t.z,n[s++]=t.w;return this},applyMatrix3:function(e){for(var t=0,n=this.count;t<n;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix3(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyMatrix4:function(e){for(var t=0,n=this.count;t<n;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyMatrix4(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},applyNormalMatrix:function(e){for(var t=0,n=this.count;t<n;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.applyNormalMatrix(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},transformDirection:function(e){for(var t=0,n=this.count;t<n;t++)_vector$3.x=this.getX(t),_vector$3.y=this.getY(t),_vector$3.z=this.getZ(t),_vector$3.transformDirection(e),this.setXYZ(t,_vector$3.x,_vector$3.y,_vector$3.z);return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this},setXYZW:function(e,t,n,s,o){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=o,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}});function Int8BufferAttribute(e,t,n){BufferAttribute.call(this,new Int8Array(e),t,n)}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(e,t,n){BufferAttribute.call(this,new Uint8Array(e),t,n)}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(e,t,n){BufferAttribute.call(this,new Uint8ClampedArray(e),t,n)}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(e,t,n){BufferAttribute.call(this,new Int16Array(e),t,n)}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(e,t,n){BufferAttribute.call(this,new Uint16Array(e),t,n)}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(e,t,n){BufferAttribute.call(this,new Int32Array(e),t,n)}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(e,t,n){BufferAttribute.call(this,new Uint32Array(e),t,n)}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float32BufferAttribute(e,t,n){BufferAttribute.call(this,new Float32Array(e),t,n)}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(e,t,n){BufferAttribute.call(this,new Float64Array(e),t,n)}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype),Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;function DirectGeometry(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(DirectGeometry.prototype,{computeGroups:function(e){for(var t,i,s=[],o=void 0,a=e.faces,n=0;n<a.length;n++)i=a[n],i.materialIndex!==o&&(o=i.materialIndex,t!==void 0&&(t.count=n*3-t.start,s.push(t)),t={start:n*3,materialIndex:o});t!==void 0&&(t.count=n*3-t.start,s.push(t)),this.groups=s},fromGeometry:function(e){var t,n,s,o,r,c,l,d,u,h,m,f,p,g,v,b,w,O,_=e.faces,i=e.vertices,a=e.faceVertexUvs,C=a[0]&&a[0].length>0,x=a[1]&&a[1].length>0,y=e.morphTargets,j=y.length;if(j>0){v=[];for(t=0;t<j;t++)v[t]={name:y[t].name,data:[]};this.morphTargets.position=v}if(f=e.morphNormals,m=f.length,m>0){b=[];for(t=0;t<m;t++)b[t]={name:f[t].name,data:[]};this.morphTargets.normal=b}r=e.skinIndices,d=e.skinWeights,O=r.length===i.length,w=d.length===i.length,i.length>0&&_.length===0&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(t=0;t<_.length;t++){n=_[t],this.vertices.push(i[n.a],i[n.b],i[n.c]),l=n.vertexNormals,l.length===3?this.normals.push(l[0],l[1],l[2]):(u=n.normal,this.normals.push(u,u,u)),c=n.vertexColors,c.length===3?this.colors.push(c[0],c[1],c[2]):(h=n.color,this.colors.push(h,h,h)),C===!0&&(o=a[0][t],o!==void 0?this.uvs.push(o[0],o[1],o[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new Vector2,new Vector2,new Vector2))),x===!0&&(o=a[1][t],o!==void 0?this.uvs2.push(o[0],o[1],o[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new Vector2,new Vector2,new Vector2)));for(s=0;s<j;s++)g=y[s].vertices,v[s].data.push(g[n.a],g[n.b],g[n.c]);for(s=0;s<m;s++)p=f[s].vertexNormals[t],b[s].data.push(p.a,p.b,p.c);O&&this.skinIndices.push(r[n.a],r[n.b],r[n.c]),w&&this.skinWeights.push(d[n.a],d[n.b],d[n.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this}});function arrayMax(e){if(e.length===0)return-(1/0);t=e[0];for(var t,n=1,s=e.length;n<s;++n)e[n]>t&&(t=e[n]);return t}_bufferGeometryId=1,_m1$2=new Matrix4,_obj=new Object3D,_offset=new Vector3,_box$2=new Box3,_boxMorphTargets=new Box3,_vector$4=new Vector3;function BufferGeometry(){Object.defineProperty(this,"id",{value:_bufferGeometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){Array.isArray(e)?this.index=new(arrayMax(e)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(e,1):this.index=e},getAttribute:function(e){return this.attributes[e]},setAttribute:function(e,t){return this.attributes[e]=t,this},deleteAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix4:function(e){var t,n,o,s=this.attributes.position;return s!==void 0&&(s.applyMatrix4(e),s.needsUpdate=!0),t=this.attributes.normal,t!==void 0&&(o=(new Matrix3).getNormalMatrix(e),t.applyNormalMatrix(o),t.needsUpdate=!0),n=this.attributes.tangent,n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(e){return _m1$2.makeRotationX(e),this.applyMatrix4(_m1$2),this},rotateY:function(e){return _m1$2.makeRotationY(e),this.applyMatrix4(_m1$2),this},rotateZ:function(e){return _m1$2.makeRotationZ(e),this.applyMatrix4(_m1$2),this},translate:function(e,t,n){return _m1$2.makeTranslation(e,t,n),this.applyMatrix4(_m1$2),this},scale:function(e,t,n){return _m1$2.makeScale(e,t,n),this.applyMatrix4(_m1$2),this},lookAt:function(e){return _obj.lookAt(e),_obj.updateMatrix(),this.applyMatrix4(_obj.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset).negate(),this.translate(_offset.x,_offset.y,_offset.z),this},setFromObject:function(e){var n,s,o,t=e.geometry;return e.isPoints||e.isLine?(n=new Float32BufferAttribute(t.vertices.length*3,3),s=new Float32BufferAttribute(t.colors.length*3,3),this.setAttribute("position",n.copyVector3sArray(t.vertices)),this.setAttribute("color",s.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length&&(o=new Float32BufferAttribute(t.lineDistances.length,1),this.setAttribute("lineDistance",o.copyArray(t.lineDistances))),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())):e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t),this},setFromPoints:function(e){n=[];for(var t,n,s=0,o=e.length;s<o;s++)t=e[s],n.push(t.x,t.y,t.z||0);return this.setAttribute("position",new Float32BufferAttribute(n,3)),this},updateFromObject:function(e){var n,s,t=e.geometry;if(e.isMesh){if(s=t.__directGeometry,t.elementsNeedUpdate===!0&&(s=void 0,t.elementsNeedUpdate=!1),s===void 0)return this.fromGeometry(t);s.verticesNeedUpdate=t.verticesNeedUpdate,s.normalsNeedUpdate=t.normalsNeedUpdate,s.colorsNeedUpdate=t.colorsNeedUpdate,s.uvsNeedUpdate=t.uvsNeedUpdate,s.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=s}return t.verticesNeedUpdate===!0&&(n=this.attributes.position,n!==void 0&&(n.copyVector3sArray(t.vertices),n.needsUpdate=!0),t.verticesNeedUpdate=!1),t.normalsNeedUpdate===!0&&(n=this.attributes.normal,n!==void 0&&(n.copyVector3sArray(t.normals),n.needsUpdate=!0),t.normalsNeedUpdate=!1),t.colorsNeedUpdate===!0&&(n=this.attributes.color,n!==void 0&&(n.copyColorsArray(t.colors),n.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(n=this.attributes.uv,n!==void 0&&(n.copyVector2sArray(t.uvs),n.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(n=this.attributes.lineDistance,n!==void 0&&(n.copyArray(t.lineDistances),n.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){l=new Float32Array(e.vertices.length*3),this.setAttribute("position",new BufferAttribute(l,3).copyVector3sArray(e.vertices)),e.normals.length>0&&(u=new Float32Array(e.normals.length*3),this.setAttribute("normal",new BufferAttribute(u,3).copyVector3sArray(e.normals))),e.colors.length>0&&(d=new Float32Array(e.colors.length*3),this.setAttribute("color",new BufferAttribute(d,3).copyColorsArray(e.colors))),e.uvs.length>0&&(a=new Float32Array(e.uvs.length*2),this.setAttribute("uv",new BufferAttribute(a,2).copyVector2sArray(e.uvs))),e.uvs2.length>0&&(c=new Float32Array(e.uvs2.length*2),this.setAttribute("uv2",new BufferAttribute(c,2).copyVector2sArray(e.uvs2))),this.groups=e.groups;for(r in e.morphTargets){n=[],i=e.morphTargets[r];for(var t,n,s,i,a,r,c,l,d,u,h,m,o=0,f=i.length;o<f;o++)t=i[o],s=new Float32BufferAttribute(t.data.length*3,3),s.name=t.name,n.push(s.copyVector3sArray(t.data));this.morphAttributes[r]=n}return e.skinIndices.length>0&&(h=new Float32BufferAttribute(e.skinIndices.length*4,4),this.setAttribute("skinIndex",h.copyVector4sArray(e.skinIndices))),e.skinWeights.length>0&&(m=new Float32BufferAttribute(e.skinWeights.length*4,4),this.setAttribute("skinWeight",m.copyVector4sArray(e.skinWeights))),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){if(this.boundingBox===null&&(this.boundingBox=new Box3),t=this.attributes.position,e=this.morphAttributes.position,t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(var e,t,s,n=0,o=e.length;n<o;n++)s=e[n],_box$2.setFromBufferAttribute(s),this.morphTargetsRelative?(_vector$4.addVectors(this.boundingBox.min,_box$2.min),this.boundingBox.expandByPoint(_vector$4),_vector$4.addVectors(this.boundingBox.max,_box$2.max),this.boundingBox.expandByPoint(_vector$4)):(this.boundingBox.expandByPoint(_box$2.min),this.boundingBox.expandByPoint(_box$2.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){if(this.boundingSphere===null&&(this.boundingSphere=new Sphere),n=this.attributes.position,t=this.morphAttributes.position,n){if(r=this.boundingSphere.center,_box$2.setFromBufferAttribute(n),t)for(var t,n,s,i,a,r,c,l,e=0,o=t.length;e<o;e++)i=t[e],_boxMorphTargets.setFromBufferAttribute(i),this.morphTargetsRelative?(_vector$4.addVectors(_box$2.min,_boxMorphTargets.min),_box$2.expandByPoint(_vector$4),_vector$4.addVectors(_box$2.max,_boxMorphTargets.max),_box$2.expandByPoint(_vector$4)):(_box$2.expandByPoint(_boxMorphTargets.min),_box$2.expandByPoint(_boxMorphTargets.max));_box$2.getCenter(r),s=0;for(e=0,o=n.count;e<o;e++)_vector$4.fromBufferAttribute(n,e),s=Math.max(s,r.distanceToSquared(_vector$4));if(t)for(e=0,o=t.length;e<o;e++){i=t[e],c=this.morphTargetsRelative;for(a=0,l=i.count;a<l;a++)_vector$4.fromBufferAttribute(i,a),c&&(_offset.fromBufferAttribute(n,a),_vector$4.add(_offset)),s=Math.max(s,r.distanceToSquared(_vector$4))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){if(d=this.index,o=this.attributes,o.position){if(s=o.position.array,o.normal===void 0)this.setAttribute("normal",new BufferAttribute(new Float32Array(s.length),3));else{p=o.normal.array;for(e=0,a=p.length;e<a;e++)p[e]=0}var e,s,o,a,r,c,l,d,f,p,n=o.normal.array,u=new Vector3,i=new Vector3,h=new Vector3,t=new Vector3,m=new Vector3;if(d){f=d.array;for(e=0,a=d.count;e<a;e+=3)l=f[e+0]*3,r=f[e+1]*3,c=f[e+2]*3,u.fromArray(s,l),i.fromArray(s,r),h.fromArray(s,c),t.subVectors(h,i),m.subVectors(u,i),t.cross(m),n[l]+=t.x,n[l+1]+=t.y,n[l+2]+=t.z,n[r]+=t.x,n[r+1]+=t.y,n[r+2]+=t.z,n[c]+=t.x,n[c+1]+=t.y,n[c+2]+=t.z}else for(e=0,a=s.length;e<a;e+=9)u.fromArray(s,e),i.fromArray(s,e+3),h.fromArray(s,e+6),t.subVectors(h,i),m.subVectors(u,i),t.cross(m),n[e]=t.x,n[e+1]=t.y,n[e+2]=t.z,n[e+3]=t.x,n[e+4]=t.y,n[e+5]=t.z,n[e+6]=t.x,n[e+7]=t.y,n[e+8]=t.z;this.normalizeNormals(),o.normal.needsUpdate=!0}},merge:function(e,t){if(!e||!e.isBufferGeometry){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.")),n=this.attributes;for(s in n){if(e.attributes[s]===void 0)continue;l=n[s],o=l.array,i=e.attributes[s],a=i.array,r=i.itemSize*t,d=Math.min(a.length,o.length-r);for(var n,s,o,i,a,r,l,d,c=0,u=r;c<d;c++,u++)o[u]=a[c]}return this},normalizeNormals:function(){e=this.attributes.normal;for(var e,t=0,n=e.count;t<n;t++)_vector$4.x=e.getX(t),_vector$4.y=e.getY(t),_vector$4.z=e.getZ(t),_vector$4.normalize(),e.setXYZ(t,_vector$4.x,_vector$4.y,_vector$4.z)},toNonIndexed:function(){function h(e,t){for(var o,i=e.array,n=e.itemSize,a=new i.constructor(t.length*n),r=0,c=0,s=0,l=t.length;s<l;s++){r=t[s]*n;for(o=0;o<n;o++)a[c++]=i[r++]}return new BufferAttribute(a,n)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;t=new BufferGeometry,u=this.index.array,a=this.attributes;for(n in a)i=a[n],s=h(i,u),t.setAttribute(n,s);r=this.morphAttributes;for(n in r){c=[],l=r[n];for(var t,n,s,o,i,a,r,c,l,d,u,m,e=0,f=l.length;e<f;e++)i=l[e],s=h(i,u),c.push(s);t.morphAttributes[n]=c}t.morphTargetsRelative=this.morphTargetsRelative,d=this.groups;for(e=0,m=d.length;e<m;e++)o=d[e],t.addGroup(o.start,o.count,o.materialIndex);return t},toJSON:function(){if(e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}},e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){i=this.parameters;for(t in i)i[t]!==void 0&&(e[t]=i[t]);return e}e.data={attributes:{}},o=this.index,o!==null&&(e.data.index={type:o.array.constructor.name,array:Array.prototype.slice.call(o.array)}),c=this.attributes;for(t in c)n=c[t],s=n.toJSON(),n.name!==""&&(s.name=n.name),e.data.attributes[t]=s;l={},d=!1;for(t in this.morphAttributes){u=this.morphAttributes[t],a=[];for(var e,t,n,s,o,i,a,r,c,l,d,u,m,h=0,f=u.length;h<f;h++)n=u[h],s=n.toJSON(),n.name!==""&&(s.name=n.name),a.push(s);a.length>0&&(l[t]=a,d=!0)}return d&&(e.data.morphAttributes=l,e.data.morphTargetsRelative=this.morphTargetsRelative),m=this.groups,m.length>0&&(e.data.groups=JSON.parse(JSON.stringify(m))),r=this.boundingSphere,r!==null&&(e.data.boundingSphere={center:r.center.toArray(),radius:r.radius}),e},clone:function(){return(new BufferGeometry).copy(this)},copy:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name;var t,n,s,o,i,a,r,c,l,d,u,h,m=e.index;m!==null&&this.setIndex(m.clone()),l=e.attributes;for(n in l)h=l[n],this.setAttribute(n,h.clone());a=e.morphAttributes;for(n in a){r=[],c=a[n];for(t=0,s=c.length;t<s;t++)r.push(c[t].clone());this.morphAttributes[n]=r}this.morphTargetsRelative=e.morphTargetsRelative,i=e.groups;for(t=0,s=i.length;t<s;t++)o=i[t],this.addGroup(o.start,o.count,o.materialIndex);return d=e.boundingBox,d!==null&&(this.boundingBox=d.clone()),u=e.boundingSphere,u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),_inverseMatrix=new Matrix4,_ray=new Ray,_sphere=new Sphere,_vA=new Vector3,_vB=new Vector3,_vC=new Vector3,_tempA=new Vector3,_tempB=new Vector3,_tempC=new Vector3,_morphA=new Vector3,_morphB=new Vector3,_morphC=new Vector3,_uvA=new Vector2,_uvB=new Vector2,_uvC=new Vector2,_intersectionPoint=new Vector3,_intersectionPointWorld=new Vector3;function Mesh(e,t){Object3D.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new BufferGeometry,this.material=t!==void 0?t:new MeshBasicMaterial,this.updateMorphTargets()}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this},updateMorphTargets:function(){var e,t,s,o,i,a,r,n=this.geometry;if(n.isBufferGeometry){if(s=n.morphAttributes,o=Object.keys(s),o.length>0&&(t=s[o[0]],t!==void 0)){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(e=0,a=t.length;e<a;e++)r=t[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}else i=n.morphTargets,i!==void 0&&i.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")},raycast:function(e,t){if(o=this.geometry,c=this.material,N=this.matrixWorld,c===void 0)return;if(o.boundingSphere===null&&o.computeBoundingSphere(),_sphere.copy(o.boundingSphere),_sphere.applyMatrix4(N),e.ray.intersectsSphere(_sphere)===!1)return;if(_inverseMatrix.getInverse(N),_ray.copy(e.ray).applyMatrix4(_inverseMatrix),o.boundingBox!==null&&_ray.intersectsBox(o.boundingBox)===!1)return;if(o.isBufferGeometry){if(l=o.index,g=o.attributes.position,w=o.morphAttributes.position,O=o.morphTargetsRelative,_=o.attributes.uv,y=o.attributes.uv2,j=o.groups,a=o.drawRange,l!==null)if(Array.isArray(c))for(s=0,m=j.length;s<m;s++){r=j[s],k=c[r.materialIndex],h=Math.max(r.start,a.start),f=Math.min(r.start+r.count,a.start+a.count);for(i=h,x=f;i<x;i+=3)u=l.getX(i),d=l.getX(i+1),p=l.getX(i+2),n=checkBufferGeometryIntersection(this,k,e,_ray,g,w,O,_,y,u,d,p),n&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=r.materialIndex,t.push(n))}else{h=Math.max(0,a.start),f=Math.min(l.count,a.start+a.count);for(s=h,m=f;s<m;s+=3)u=l.getX(s),d=l.getX(s+1),p=l.getX(s+2),n=checkBufferGeometryIntersection(this,c,e,_ray,g,w,O,_,y,u,d,p),n&&(n.faceIndex=Math.floor(s/3),t.push(n))}else if(g!==void 0)if(Array.isArray(c))for(s=0,m=j.length;s<m;s++){r=j[s],k=c[r.materialIndex],h=Math.max(r.start,a.start),f=Math.min(r.start+r.count,a.start+a.count);for(i=h,x=f;i<x;i+=3)u=i,d=i+1,p=i+2,n=checkBufferGeometryIntersection(this,k,e,_ray,g,w,O,_,y,u,d,p),n&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=r.materialIndex,t.push(n))}else{h=Math.max(0,a.start),f=Math.min(g.count,a.start+a.count);for(s=h,m=f;s<m;s+=3)u=s,d=s+1,p=s+2,n=checkBufferGeometryIntersection(this,c,e,_ray,g,w,O,_,y,u,d,p),n&&(n.faceIndex=Math.floor(s/3),t.push(n))}}else if(o.isGeometry){L=Array.isArray(c),C=o.vertices,z=o.faces,D=o.faceVertexUvs[0],D.length>0&&(E=D);for(var n,s,o,i,a,r,c,l,d,u,h,m,f,p,g,v,j,y,_,w,O,x,C,E,k,A,S,M,F,T,z,D,N,L,b=0,R=z.length;b<R;b++){if(v=z[b],S=L?c[v.materialIndex]:c,S===void 0)continue;T=C[v.a],M=C[v.b],F=C[v.c],n=checkIntersection(this,S,e,_ray,T,M,F,_intersectionPoint),n&&(E&&E[b]&&(A=E[b],_uvA.copy(A[0]),_uvB.copy(A[1]),_uvC.copy(A[2]),n.uv=Triangle.getUV(_intersectionPoint,T,M,F,_uvA,_uvB,_uvC,new Vector2)),n.face=v,n.faceIndex=b,t.push(n))}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function checkIntersection(e,t,n,s,o,i,a,r){if(t.side===BackSide?c=s.intersectTriangle(a,i,o,!0,r):c=s.intersectTriangle(o,i,a,t.side!==DoubleSide,r),c===null)return null;_intersectionPointWorld.copy(r),_intersectionPointWorld.applyMatrix4(e.matrixWorld);var c,l=n.ray.origin.distanceTo(_intersectionPointWorld);return l<n.near||l>n.far?null:{distance:l,point:_intersectionPointWorld.clone(),object:e}}function checkBufferGeometryIntersection(e,t,n,s,o,i,a,r,c,l,d,u){if(_vA.fromBufferAttribute(o,l),_vB.fromBufferAttribute(o,d),_vC.fromBufferAttribute(o,u),g=e.morphTargetInfluences,t.morphTargets&&i&&g){_morphA.set(0,0,0),_morphB.set(0,0,0),_morphC.set(0,0,0);for(var h,m,p,g,v,f=0,b=i.length;f<b;f++){if(h=g[f],p=i[f],h===0)continue;_tempA.fromBufferAttribute(p,l),_tempB.fromBufferAttribute(p,d),_tempC.fromBufferAttribute(p,u),a?(_morphA.addScaledVector(_tempA,h),_morphB.addScaledVector(_tempB,h),_morphC.addScaledVector(_tempC,h)):(_morphA.addScaledVector(_tempA.sub(_vA),h),_morphB.addScaledVector(_tempB.sub(_vB),h),_morphC.addScaledVector(_tempC.sub(_vC),h))}_vA.add(_morphA),_vB.add(_morphB),_vC.add(_morphC)}return m=checkIntersection(e,t,n,s,_vA,_vB,_vC,_intersectionPoint),m&&(r&&(_uvA.fromBufferAttribute(r,l),_uvB.fromBufferAttribute(r,d),_uvC.fromBufferAttribute(r,u),m.uv=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),c&&(_uvA.fromBufferAttribute(c,l),_uvB.fromBufferAttribute(c,d),_uvC.fromBufferAttribute(c,u),m.uv2=Triangle.getUV(_intersectionPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2)),v=new Face3(l,d,u),Triangle.getNormal(_vA,_vB,_vC,v.normal),m.face=v),m}_geometryId=0,_m1$3=new Matrix4,_obj$1=new Object3D,_offset$1=new Vector3;function Geometry(){Object.defineProperty(this,"id",{value:_geometryId+=2}),this.uuid=MathUtils.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:!0,applyMatrix4:function(e){o=(new Matrix3).getNormalMatrix(e);for(var n,s,o,a,r,t=0,i=this.vertices.length;t<i;t++)a=this.vertices[t],a.applyMatrix4(e);for(t=0,i=this.faces.length;t<i;t++){n=this.faces[t],n.normal.applyMatrix3(o).normalize();for(s=0,r=n.vertexNormals.length;s<r;s++)n.vertexNormals[s].applyMatrix3(o).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(e){return _m1$3.makeRotationX(e),this.applyMatrix4(_m1$3),this},rotateY:function(e){return _m1$3.makeRotationY(e),this.applyMatrix4(_m1$3),this},rotateZ:function(e){return _m1$3.makeRotationZ(e),this.applyMatrix4(_m1$3),this},translate:function(e,t,n){return _m1$3.makeTranslation(e,t,n),this.applyMatrix4(_m1$3),this},scale:function(e,t,n){return _m1$3.makeScale(e,t,n),this.applyMatrix4(_m1$3),this},lookAt:function(e){return _obj$1.lookAt(e),_obj$1.updateMatrix(),this.applyMatrix4(_obj$1.matrix),this},fromBufferGeometry:function(e){if(o=this,s=e.index!==null?e.index.array:void 0,n=e.attributes,n.position===void 0)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;m=n.position.array,r=n.normal!==void 0?n.normal.array:void 0,d=n.color!==void 0?n.color.array:void 0,c=n.uv!==void 0?n.uv.array:void 0,a=n.uv2!==void 0?n.uv2.array:void 0,a!==void 0&&(this.faceVertexUvs[1]=[]);for(t=0;t<m.length;t+=3)o.vertices.push((new Vector3).fromArray(m,t)),d!==void 0&&o.colors.push((new Color).fromArray(d,t));function u(e,t,n,s){var i=d===void 0?[]:[o.colors[e].clone(),o.colors[t].clone(),o.colors[n].clone()],l=r===void 0?[]:[(new Vector3).fromArray(r,e*3),(new Vector3).fromArray(r,t*3),(new Vector3).fromArray(r,n*3)],u=new Face3(e,t,n,l,i,s);o.faces.push(u),c!==void 0&&o.faceVertexUvs[0].push([(new Vector2).fromArray(c,e*2),(new Vector2).fromArray(c,t*2),(new Vector2).fromArray(c,n*2)]),a!==void 0&&o.faceVertexUvs[1].push([(new Vector2).fromArray(a,e*2),(new Vector2).fromArray(a,t*2),(new Vector2).fromArray(a,n*2)])}if(h=e.groups,h.length>0)for(t=0;t<h.length;t++){l=h[t],f=l.start,p=l.count;for(var t,n,s,o,a,r,c,l,d,h,m,f,p,i=f,g=f+p;i<g;i+=3)s!==void 0?u(s[i],s[i+1],s[i+2],l.materialIndex):u(i,i+1,i+2,l.materialIndex)}else if(s!==void 0)for(t=0;t<s.length;t+=3)u(s[t],s[t+1],s[t+2]);else for(t=0;t<m.length/3;t+=3)u(t,t+1,t+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_offset$1).negate(),this.translate(_offset$1.x,_offset$1.y,_offset$1.z),this},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,n=this.boundingSphere.radius,e=n===0?1:1/n,s=new Matrix4;return s.set(e,0,0,-e*t.x,0,e,0,-e*t.y,0,0,e,-e*t.z,0,0,0,1),this.applyMatrix4(s),this},computeFaceNormals:function(){for(var e,s,i,a,t=new Vector3,o=new Vector3,n=0,r=this.faces.length;n<r;n++)e=this.faces[n],i=this.vertices[e.a],s=this.vertices[e.b],a=this.vertices[e.c],t.subVectors(a,s),o.subVectors(i,s),t.cross(o),t.normalize(),e.normal.copy(t)},computeVertexNormals:function(e){e===void 0&&(e=!0),n=new Array(this.vertices.length);for(o=0,c=this.vertices.length;o<c;o++)n[o]=new Vector3;if(e){var t,n,s,o,i,a,c,l,d,u,r=new Vector3,h=new Vector3;for(s=0,a=this.faces.length;s<a;s++)t=this.faces[s],d=this.vertices[t.a],l=this.vertices[t.b],u=this.vertices[t.c],r.subVectors(u,l),h.subVectors(d,l),r.cross(h),n[t.a].add(r),n[t.b].add(r),n[t.c].add(r)}else{this.computeFaceNormals();for(s=0,a=this.faces.length;s<a;s++)t=this.faces[s],n[t.a].add(t.normal),n[t.b].add(t.normal),n[t.c].add(t.normal)}for(o=0,c=this.vertices.length;o<c;o++)n[o].normalize();for(s=0,a=this.faces.length;s<a;s++)t=this.faces[s],i=t.vertexNormals,i.length===3?(i[0].copy(n[t.a]),i[1].copy(n[t.b]),i[2].copy(n[t.c])):(i[0]=n[t.a].clone(),i[1]=n[t.b].clone(),i[2]=n[t.c].clone());this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(n=0,s=this.faces.length;n<s;n++){e=this.faces[n];var e,n,s,t=e.vertexNormals;t.length===3?(t[0].copy(e.normal),t[1].copy(e.normal),t[2].copy(e.normal)):(t[0]=e.normal.clone(),t[1]=e.normal.clone(),t[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(n=0,s=this.faces.length;n<s;n++){e=this.faces[n],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(t=0,a=e.vertexNormals.length;t<a;t++)e.__originalVertexNormals[t]?e.__originalVertexNormals[t].copy(e.vertexNormals[t]):e.__originalVertexNormals[t]=e.vertexNormals[t].clone()}var e,t,n,s,o,i,a,c,l,d,r=new Geometry;r.faces=this.faces;for(t=0,a=this.morphTargets.length;t<a;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[],l=this.morphNormals[t].faceNormals,d=this.morphNormals[t].vertexNormals;for(n=0,s=this.faces.length;n<s;n++)i=new Vector3,o={a:new Vector3,b:new Vector3,c:new Vector3},l.push(i),d.push(o)}c=this.morphNormals[t],r.vertices=this.morphTargets[t].vertices,r.computeFaceNormals(),r.computeVertexNormals();for(n=0,s=this.faces.length;n<s;n++)e=this.faces[n],i=c.faceNormals[n],o=c.vertexNormals[n],i.copy(e.normal),o.a.copy(e.vertexNormals[0]),o.b.copy(e.vertexNormals[1]),o.c.copy(e.vertexNormals[2])}for(n=0,s=this.faces.length;n<s;n++)e=this.faces[n],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(!e||!e.isGeometry){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var s,o,r,c,l,d,u,h,m,f,v,w,g=this.vertices.length,E=this.vertices,_=e.vertices,C=this.faces,x=e.faces,k=this.colors,O=e.colors;n===void 0&&(n=0),t!==void 0&&(l=(new Matrix3).getNormalMatrix(t));for(s=0,r=_.length;s<r;s++)w=_[s],u=w.clone(),t!==void 0&&u.applyMatrix4(t),E.push(u);for(s=0,r=O.length;s<r;s++)k.push(O[s].clone());for(s=0,r=x.length;s<r;s++){var p,b,i=x[s],j=i.vertexNormals,y=i.vertexColors,a=new Face3(i.a+g,i.b+g,i.c+g);a.normal.copy(i.normal),l!==void 0&&a.normal.applyMatrix3(l).normalize();for(o=0,c=j.length;o<c;o++)p=j[o].clone(),l!==void 0&&p.applyMatrix3(l).normalize(),a.vertexNormals.push(p);a.color.copy(i.color);for(o=0,c=y.length;o<c;o++)b=y[o],a.vertexColors.push(b.clone());a.materialIndex=i.materialIndex+n,C.push(a)}for(s=0,r=e.faceVertexUvs.length;s<r;s++){f=e.faceVertexUvs[s],this.faceVertexUvs[s]===void 0&&(this.faceVertexUvs[s]=[]);for(o=0,c=f.length;o<c;o++){m=f[o],h=[];for(d=0,v=m.length;d<v;d++)h.push(m[d].clone());this.faceVertexUvs[s].push(h)}}},mergeMesh:function(e){if(!e||!e.isMesh){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e,t,s,o,i,a,r,c,h,m,f,p,u={},l=[],n=[],g=4,d=Math.pow(10,g);for(e=0,o=this.vertices.length;e<o;e++)a=this.vertices[e],i=Math.round(a.x*d)+"_"+Math.round(a.y*d)+"_"+Math.round(a.z*d),u[i]===void 0?(u[i]=e,l.push(this.vertices[e]),n[e]=l.length-1):n[e]=n[u[i]];c=[];for(e=0,o=this.faces.length;e<o;e++){t=this.faces[e],t.a=n[t.a],t.b=n[t.b],t.c=n[t.c],h=[t.a,t.b,t.c];for(s=0;s<3;s++)if(h[s]===h[(s+1)%3]){c.push(e);break}}for(e=c.length-1;e>=0;e--){m=c[e],this.faces.splice(m,1);for(r=0,f=this.faceVertexUvs.length;r<f;r++)this.faceVertexUvs[r].splice(m,1)}return p=this.vertices.length-l.length,this.vertices=l,p},setFromPoints:function(e){this.vertices=[];for(var t,n=0,s=e.length;n<s;n++)t=e[n],this.vertices.push(new Vector3(t.x,t.y,t.z||0));return this},sortFacesByMaterialIndex:function(){for(var t,n,i,a,r,s=this.faces,o=s.length,e=0;e<o;e++)s[e]._id=e;function c(e,t){return e.materialIndex-t.materialIndex}s.sort(c),i=this.faceVertexUvs[0],a=this.faceVertexUvs[1],i&&i.length===o&&(t=[]),a&&a.length===o&&(n=[]);for(e=0;e<o;e++)r=s[e]._id,t&&t.push(i[r]),n&&n.push(a[r]);t&&(this.faceVertexUvs[0]=t),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){var e,t,s,o,a,r,c,l,d,u,h,p,g,v,b,j,y,_,w,O,x,C,k,A,n={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.parameters!==void 0){p=this.parameters;for(_ in p)p[_]!==void 0&&(n[_]=p[_]);return n}C=[];for(s=0;s<this.vertices.length;s++)g=this.vertices[s],C.push(g.x,g.y,g.z);o=[],u=[],c={},l=[],d={},a=[],r={};for(s=0;s<this.faces.length;s++)t=this.faces[s],A=!0,k=!1,j=this.faceVertexUvs[0][s]!==void 0,x=t.normal.length()>0,O=t.vertexNormals.length>0,w=t.color.r!==1||t.color.g!==1||t.color.b!==1,y=t.vertexColors.length>0,e=0,e=i(e,0,0),e=i(e,1,A),e=i(e,2,k),e=i(e,3,j),e=i(e,4,x),e=i(e,5,O),e=i(e,6,w),e=i(e,7,y),o.push(e),o.push(t.a,t.b,t.c),o.push(t.materialIndex),j&&(h=this.faceVertexUvs[0][s],o.push(E(h[0]),E(h[1]),E(h[2]))),x&&o.push(f(t.normal)),O&&(b=t.vertexNormals,o.push(f(b[0]),f(b[1]),f(b[2]))),w&&o.push(m(t.color)),y&&(v=t.vertexColors,o.push(m(v[0]),m(v[1]),m(v[2])));function i(e,t,n){return n?e|1<<t:e&~(1<<t)}function f(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return c[t]!==void 0?c[t]:(c[t]=u.length/3,u.push(e.x,e.y,e.z),c[t])}function m(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return d[t]!==void 0?d[t]:(d[t]=l.length,l.push(e.getHex()),d[t])}function E(e){var t=e.x.toString()+e.y.toString();return r[t]!==void 0?r[t]:(r[t]=a.length/2,a.push(e.x,e.y),r[t])}return n.data={},n.data.vertices=C,n.data.normals=u,l.length>0&&(n.data.colors=l),a.length>0&&(n.data.uvs=[a]),n.data.faces=o,n},clone:function(){return(new Geometry).copy(this)},copy:function(e){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=e.name,h=e.vertices;for(t=0,s=h.length;t<s;t++)this.vertices.push(h[t].clone());p=e.colors;for(t=0,s=p.length;t<s;t++)this.colors.push(p[t].clone());f=e.faces;for(t=0,s=f.length;t<s;t++)this.faces.push(f[t].clone());for(t=0,s=e.faceVertexUvs.length;t<s;t++){m=e.faceVertexUvs[t],this.faceVertexUvs[t]===void 0&&(this.faceVertexUvs[t]=[]);for(n=0,o=m.length;n<o;n++){var t,n,s,o,i,a,r,c,l,d,u,h,m,f,p,g,v,b,j,y,_,x,O=m[n],w=[];for(d=0,x=O.length;d<x;d++)_=O[d],w.push(_.clone());this.faceVertexUvs[t].push(w)}}i=e.morphTargets;for(t=0,s=i.length;t<s;t++){if(r={},r.name=i[t].name,i[t].vertices!==void 0){r.vertices=[];for(n=0,o=i[t].vertices.length;n<o;n++)r.vertices.push(i[t].vertices[n].clone())}if(i[t].normals!==void 0){r.normals=[];for(n=0,o=i[t].normals.length;n<o;n++)r.normals.push(i[t].normals[n].clone())}this.morphTargets.push(r)}a=e.morphNormals;for(t=0,s=a.length;t<s;t++){if(c={},a[t].vertexNormals!==void 0){c.vertexNormals=[];for(n=0,o=a[t].vertexNormals.length;n<o;n++)u=a[t].vertexNormals[n],l={},l.a=u.a.clone(),l.b=u.b.clone(),l.c=u.c.clone(),c.vertexNormals.push(l)}if(a[t].faceNormals!==void 0){c.faceNormals=[];for(n=0,o=a[t].faceNormals.length;n<o;n++)c.faceNormals.push(a[t].faceNormals[n].clone())}this.morphNormals.push(c)}g=e.skinWeights;for(t=0,s=g.length;t<s;t++)this.skinWeights.push(g[t].clone());v=e.skinIndices;for(t=0,s=v.length;t<s;t++)this.skinIndices.push(v[t].clone());b=e.lineDistances;for(t=0,s=b.length;t<s;t++)this.lineDistances.push(b[t]);return j=e.boundingBox,j!==null&&(this.boundingBox=j.clone()),y=e.boundingSphere,y!==null&&(this.boundingSphere=y.clone()),this.elementsNeedUpdate=e.elementsNeedUpdate,this.verticesNeedUpdate=e.verticesNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.lineDistancesNeedUpdate=e.lineDistancesNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});class BoxGeometry extends Geometry{constructor(e,t,n,s,o,i){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:o,depthSegments:i},this.fromBufferGeometry(new BoxBufferGeometry(e,t,n,s,o,i)),this.mergeVertices()}}class BoxBufferGeometry extends BufferGeometry{constructor(e,t,n,s,o,i){super(),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:o,depthSegments:i};var a,c,l,d,u,h,m=this;e=e||1,t=t||1,n=n||1,s=Math.floor(s)||1,o=Math.floor(o)||1,i=Math.floor(i)||1,c=[],d=[],u=[],l=[],a=0,h=0,r("z","y","x",-1,-1,n,t,e,i,o,0),r("z","y","x",1,-1,n,t,-e,i,o,1),r("x","z","y",1,1,e,n,t,s,i,2),r("x","z","y",1,-1,e,n,-t,s,i,3),r("x","y","z",1,-1,e,t,n,s,o,4),r("x","y","z",-1,-1,e,t,-n,s,o,5),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(d,3)),this.setAttribute("normal",new Float32BufferAttribute(u,3)),this.setAttribute("uv",new Float32BufferAttribute(l,2));function r(e,t,n,s,o,i,r,f,p,g,v){var j,y,O,x,C,k,A,S,z=i/p,N=r/g,D=i/2,T=r/2,F=f/2,_=p+1,M=g+1,E=0,w=0,b=new Vector3;for(j=0;j<M;j++){C=j*N-T;for(y=0;y<_;y++)k=y*z-D,b[e]=k*s,b[t]=C*o,b[n]=F,d.push(b.x,b.y,b.z),b[e]=0,b[t]=0,b[n]=f>0?1:-1,u.push(b.x,b.y,b.z),l.push(y/p),l.push(1-j/g),E+=1}for(j=0;j<g;j++)for(y=0;y<p;y++)A=a+y+_*j,x=a+y+_*(j+1),S=a+(y+1)+_*(j+1),O=a+(y+1)+_*j,c.push(A,x,O),c.push(x,S,O),w+=6;m.addGroup(h,w,v),h+=w,a+=E}}}function cloneUniforms(e){var t,n,o,s={};for(n in e){s[n]={};for(o in e[n])t=e[n][o],t&&(t.isColor||t.isMatrix3||t.isMatrix4||t.isVector2||t.isVector3||t.isVector4||t.isTexture)?s[n][o]=t.clone():Array.isArray(t)?s[n][o]=t.slice():s[n][o]=t}return s}function mergeUniforms(e){for(var n,o,s={},t=0;t<e.length;t++){n=cloneUniforms(e[t]);for(o in n)s[o]=n[o]}return s}UniformsUtils={clone:cloneUniforms,merge:mergeUniforms},default_vertex=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,default_fragment=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;function ShaderMaterial(e){Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=default_vertex,this.fragmentShader=default_fragment,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}ShaderMaterial.prototype=Object.create(Material.prototype),ShaderMaterial.prototype.constructor=ShaderMaterial,ShaderMaterial.prototype.isShaderMaterial=!0,ShaderMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=cloneUniforms(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},ShaderMaterial.prototype.toJSON=function(e){var t,s,o,i,a,n=Material.prototype.toJSON.call(this,e);n.uniforms={};for(s in this.uniforms)i=this.uniforms[s],t=i.value,t&&t.isTexture?n.uniforms[s]={type:"t",value:t.toJSON(e).uuid}:t&&t.isColor?n.uniforms[s]={type:"c",value:t.getHex()}:t&&t.isVector2?n.uniforms[s]={type:"v2",value:t.toArray()}:t&&t.isVector3?n.uniforms[s]={type:"v3",value:t.toArray()}:t&&t.isVector4?n.uniforms[s]={type:"v4",value:t.toArray()}:t&&t.isMatrix3?n.uniforms[s]={type:"m3",value:t.toArray()}:t&&t.isMatrix4?n.uniforms[s]={type:"m4",value:t.toArray()}:n.uniforms[s]={value:t};Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,o={};for(a in this.extensions)this.extensions[a]===!0&&(o[a]=!0);return Object.keys(o).length>0&&(n.extensions=o),n};function Camera(){Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Matrix4,this.projectionMatrix=new Matrix4,this.projectionMatrixInverse=new Matrix4}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:!0,copy:function(e,t){return Object3D.prototype.copy.call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this},getWorldDirection:function(e){e===void 0&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new Vector3),this.updateMatrixWorld(!0);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e),this.matrixWorldInverse.getInverse(this.matrixWorld)},updateWorldMatrix:function(e,t){Object3D.prototype.updateWorldMatrix.call(this,e,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}});function PerspectiveCamera(e,t,n,s){Camera.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=s!==void 0?s:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=MathUtils.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(MathUtils.DEG2RAD*.5*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return MathUtils.RAD2DEG*2*Math.atan(Math.tan(MathUtils.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,s,o,i){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=o,this.view.height=i,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var a,r,c,i=this.near,t=i*Math.tan(MathUtils.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,o=-.5*s,e=this.view;this.view!==null&&this.view.enabled&&(a=e.fullWidth,r=e.fullHeight,o+=e.offsetX*s/a,t-=e.offsetY*n/r,s*=e.width/a,n*=e.height/r),c=this.filmOffset,c!==0&&(o+=i*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+s,t,t-n,i,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),fov=90,aspect=1;function CubeCamera(e,t,n,s){Object3D.call(this),this.type="CubeCamera";var o,i,a,r,c,l=new PerspectiveCamera(fov,aspect,e,t);l.up.set(0,-1,0),l.lookAt(new Vector3(1,0,0)),this.add(l),o=new PerspectiveCamera(fov,aspect,e,t),o.up.set(0,-1,0),o.lookAt(new Vector3(-1,0,0)),this.add(o),i=new PerspectiveCamera(fov,aspect,e,t),i.up.set(0,0,1),i.lookAt(new Vector3(0,1,0)),this.add(i),a=new PerspectiveCamera(fov,aspect,e,t),a.up.set(0,0,-1),a.lookAt(new Vector3(0,-1,0)),this.add(a),r=new PerspectiveCamera(fov,aspect,e,t),r.up.set(0,-1,0),r.lookAt(new Vector3(0,0,1)),this.add(r),c=new PerspectiveCamera(fov,aspect,e,t),c.up.set(0,-1,0),c.lookAt(new Vector3(0,0,-1)),this.add(c),s=s||{format:RGBFormat,magFilter:LinearFilter,minFilter:LinearFilter},this.renderTarget=new WebGLCubeRenderTarget(n,s),this.renderTarget.texture.name="CubeCamera",this.update=function(e,t){this.parent===null&&this.updateMatrixWorld();var s=e.getRenderTarget(),n=this.renderTarget,d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,l),e.setRenderTarget(n,1),e.render(t,o),e.setRenderTarget(n,2),e.render(t,i),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,r),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(s)},this.clear=function(e,t,n,s){for(var i=e.getRenderTarget(),a=this.renderTarget,o=0;o<6;o++)e.setRenderTarget(a,o),e.clear(t,n,s);e.setRenderTarget(i)}}CubeCamera.prototype=Object.create(Object3D.prototype),CubeCamera.prototype.constructor=CubeCamera;function WebGLCubeRenderTarget(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),WebGLRenderTarget.call(this,e,e,t)}WebGLCubeRenderTarget.prototype=Object.create(WebGLRenderTarget.prototype),WebGLCubeRenderTarget.prototype.constructor=WebGLCubeRenderTarget,WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=!0,WebGLCubeRenderTarget.prototype.fromEquirectangularTexture=function(e,t){this.texture.type=t.type,this.texture.format=t.format,this.texture.encoding=t.encoding;var n,s,i=new Scene,o={uniforms:{tEquirect:{value:null}},vertexShader:["varying vec3 vWorldDirection;","vec3 transformDirection( in vec3 dir, in mat4 matrix ) {","	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );","}","void main() {","	vWorldDirection = transformDirection( position, modelMatrix );","	#include <begin_vertex>","	#include <project_vertex>","}"].join(`
`),fragmentShader:["uniform sampler2D tEquirect;","varying vec3 vWorldDirection;","#define RECIPROCAL_PI 0.31830988618","#define RECIPROCAL_PI2 0.15915494","void main() {","	vec3 direction = normalize( vWorldDirection );","	vec2 sampleUV;","	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;","	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","	gl_FragColor = texture2D( tEquirect, sampleUV );","}"].join(`
`)},a=new ShaderMaterial({type:"CubemapFromEquirect",uniforms:cloneUniforms(o.uniforms),vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,side:BackSide,blending:NoBlending});return a.uniforms.tEquirect.value=t,n=new Mesh(new BoxBufferGeometry(5,5,5),a),i.add(n),s=new CubeCamera(1,10,1),s.renderTarget=this,s.renderTarget.texture.name="CubeCameraTexture",s.update(e,i),n.geometry.dispose(),n.material.dispose(),this};function DataTexture(e,t,n,s,o,i,a,r,c,l,d,u){Texture.call(this,null,i,a,r,c,l,s,o,d,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=c!==void 0?c:NearestFilter,this.minFilter=l!==void 0?l:NearestFilter,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}DataTexture.prototype=Object.create(Texture.prototype),DataTexture.prototype.constructor=DataTexture,DataTexture.prototype.isDataTexture=!0,_sphere$1=new Sphere,_vector$5=new Vector3;function Frustum(e,t,n,s,o,i){this.planes=[e!==void 0?e:new Plane,t!==void 0?t:new Plane,n!==void 0?n:new Plane,s!==void 0?s:new Plane,o!==void 0?o:new Plane,i!==void 0?i:new Plane]}Object.assign(Frustum.prototype,{set:function(e,t,n,s,o,i){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(s),a[4].copy(o),a[5].copy(i),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var n=this.planes,t=0;t<6;t++)n[t].copy(e.planes[t]);return this},setFromProjectionMatrix:function(e){var n=this.planes,t=e.elements,b=t[0],f=t[1],d=t[2],a=t[3],l=t[4],c=t[5],r=t[6],i=t[7],u=t[8],h=t[9],m=t[10],o=t[11],p=t[12],g=t[13],v=t[14],s=t[15];return n[0].setComponents(a-b,i-l,o-u,s-p).normalize(),n[1].setComponents(a+b,i+l,o+u,s+p).normalize(),n[2].setComponents(a+f,i+c,o+h,s+g).normalize(),n[3].setComponents(a-f,i-c,o-h,s-g).normalize(),n[4].setComponents(a-d,i-r,o-m,s-v).normalize(),n[5].setComponents(a+d,i+r,o+m,s+v).normalize(),this},intersectsObject:function(e){var t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),_sphere$1.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSprite:function(e){return _sphere$1.center.set(0,0,0),_sphere$1.radius=.7071067811865476,_sphere$1.applyMatrix4(e.matrixWorld),this.intersectsSphere(_sphere$1)},intersectsSphere:function(e){for(var n,s=this.planes,o=e.center,i=-e.radius,t=0;t<6;t++)if(n=s[t].distanceToPoint(o),n<i)return!1;return!0},intersectsBox:function(e){for(var t,s=this.planes,n=0;n<6;n++)if(t=s[n],_vector$5.x=t.normal.x>0?e.max.x:e.min.x,_vector$5.y=t.normal.y>0?e.max.y:e.min.y,_vector$5.z=t.normal.z>0?e.max.z:e.min.z,t.distanceToPoint(_vector$5)<0)return!1;return!0},containsPoint:function(e){for(var n=this.planes,t=0;t<6;t++)if(n[t].distanceToPoint(e)<0)return!1;return!0}}),UniformsLib={common:{diffuse:{value:new Color(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Matrix3},uv2Transform:{value:new Matrix3},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Color(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}},sprite:{diffuse:{value:new Color(15658734)},opacity:{value:1},center:{value:new Vector2(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Matrix3}}};function WebGLAnimation(){var t=null,e=!1,n=null;function s(o,i){if(e===!1)return;n(o,i),t.requestAnimationFrame(s)}return{start:function(){if(e===!0)return;if(n===null)return;t.requestAnimationFrame(s),e=!0},stop:function(){e=!1},setAnimationLoop:function(e){n=e},setContext:function(e){t=e}}}function WebGLAttributes(e,t){var s=t.isWebGL2,n=new WeakMap;function o(t,n){var o,s=t.array,a=t.usage,i=e.createBuffer();return e.bindBuffer(n,i),e.bufferData(n,s,a),t.onUploadCallback(),o=5126,s instanceof Float32Array?o=5126:s instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):s instanceof Uint16Array?o=5123:s instanceof Int16Array?o=5122:s instanceof Uint32Array?o=5125:s instanceof Int32Array?o=5124:s instanceof Int8Array?o=5120:s instanceof Uint8Array&&(o=5121),{buffer:i,type:o,bytesPerElement:s.BYTES_PER_ELEMENT,version:t.version}}function i(t,n,o){var a=n.array,i=n.updateRange;e.bindBuffer(o,t),i.count===-1?e.bufferSubData(o,0,a):(s?e.bufferSubData(o,i.offset*a.BYTES_PER_ELEMENT,a,i.offset,i.count):e.bufferSubData(o,i.offset*a.BYTES_PER_ELEMENT,a.subarray(i.offset,i.offset+i.count)),i.count=-1)}function a(e){return e.isInterleavedBufferAttribute&&(e=e.data),n.get(e)}function r(t){t.isInterleavedBufferAttribute&&(t=t.data);var s=n.get(t);s&&(e.deleteBuffer(s.buffer),n.delete(t))}function c(e,t){e.isInterleavedBufferAttribute&&(e=e.data);var s=n.get(e);s===void 0?n.set(e,o(e,t)):s.version<e.version&&(i(s.buffer,e,t),s.version=e.version)}return{get:a,remove:r,update:c}}function PlaneGeometry(e,t,n,s){Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s},this.fromBufferGeometry(new PlaneBufferGeometry(e,t,n,s)),this.mergeVertices()}PlaneGeometry.prototype=Object.create(Geometry.prototype),PlaneGeometry.prototype.constructor=PlaneGeometry;function PlaneBufferGeometry(e,t,n,s){BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s},e=e||1,t=t||1;var o,i,l,d,m,g,v,b,_=e/2,O=t/2,r=Math.floor(n)||1,c=Math.floor(s)||1,a=r+1,w=c+1,y=e/r,j=t/c,h=[],f=[],p=[],u=[];for(o=0;o<w;o++){g=o*j-O;for(i=0;i<a;i++)m=i*y-_,f.push(m,-g,0),p.push(0,0,1),u.push(i/r),u.push(1-o/c)}for(o=0;o<c;o++)for(i=0;i<r;i++)v=i+a*o,d=i+a*(o+1),b=i+1+a*(o+1),l=i+1+a*o,h.push(v,d,l),h.push(d,b,l);this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(f,3)),this.setAttribute("normal",new Float32BufferAttribute(p,3)),this.setAttribute("uv",new Float32BufferAttribute(u,2))}PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry,alphamap_fragment=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,alphamap_pars_fragment=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,alphatest_fragment=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif`,aomap_fragment=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif`,aomap_pars_fragment=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,begin_vertex="vec3 transformed = vec3( position );",beginnormal_vertex=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,bsdfs=`vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	return vec2( -1.04, 1.04 ) * a004 + r.zw;
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
#else
	if( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
		return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
	}
	return 1.0;
#endif
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
vec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {
	float fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );
	vec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;
	return Fr * fresnel + F0;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + viewDir );
	float dotNL = saturate( dot( normal, incidentLight.direction ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS  = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
vec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	return specularColor * brdf.x + brdf.y;
}
void BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	vec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );
	vec2 brdf = integrateSpecularBRDF( dotNV, roughness );
	vec3 FssEss = F * brdf.x + brdf.y;
	float Ess = brdf.x + brdf.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
#if defined( USE_SHEEN )
float D_Charlie(float roughness, float NoH) {
	float invAlpha  = 1.0 / roughness;
	float cos2h = NoH * NoH;
	float sin2h = max(1.0 - cos2h, 0.0078125);	return (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);
}
float V_Neubelt(float NoV, float NoL) {
	return saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));
}
vec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 H = normalize( V + L );
	float dotNH = saturate( dot( N, H ) );
	return specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );
}
#endif`,bumpmap_pars_fragment=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		fDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,clipping_planes_fragment=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	#endif
#endif`,clipping_planes_pars_fragment=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,clipping_planes_pars_vertex=`#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
	varying vec3 vViewPosition;
#endif`,clipping_planes_vertex=`#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )
	vViewPosition = - mvPosition.xyz;
#endif`,color_fragment=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,color_pars_fragment=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,color_pars_vertex=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,color_vertex=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,common=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
  return m[ 2 ][ 3 ] == - 1.0;
}`,cube_uv_reflection_fragment=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_maxMipLevel 8.0
#define cubeUV_minMipLevel 4.0
#define cubeUV_maxTileSize 256.0
#define cubeUV_minTileSize 16.0
float getFace(vec3 direction) {
    vec3 absDirection = abs(direction);
    float face = -1.0;
    if (absDirection.x > absDirection.z) {
      if (absDirection.x > absDirection.y)
        face = direction.x > 0.0 ? 0.0 : 3.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    } else {
      if (absDirection.z > absDirection.y)
        face = direction.z > 0.0 ? 2.0 : 5.0;
      else
        face = direction.y > 0.0 ? 1.0 : 4.0;
    }
    return face;
}
vec2 getUV(vec3 direction, float face) {
    vec2 uv;
    if (face == 0.0) {
      uv = vec2(-direction.z, direction.y) / abs(direction.x);
    } else if (face == 1.0) {
      uv = vec2(direction.x, -direction.z) / abs(direction.y);
    } else if (face == 2.0) {
      uv = direction.xy / abs(direction.z);
    } else if (face == 3.0) {
      uv = vec2(direction.z, direction.y) / abs(direction.x);
    } else if (face == 4.0) {
      uv = direction.xz / abs(direction.y);
    } else {
      uv = vec2(-direction.x, direction.y) / abs(direction.z);
    }
    return 0.5 * (uv + 1.0);
}
vec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {
  float face = getFace(direction);
  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);
  mipInt = max(mipInt, cubeUV_minMipLevel);
  float faceSize = exp2(mipInt);
  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);
  vec2 uv = getUV(direction, face) * (faceSize - 1.0);
  vec2 f = fract(uv);
  uv += 0.5 - f;
  if (face > 2.0) {
    uv.y += faceSize;
    face -= 3.0;
  }
  uv.x += face * faceSize;
  if(mipInt < cubeUV_maxMipLevel){
    uv.y += 2.0 * cubeUV_maxTileSize;
  }
  uv.y += filterInt * 2.0 * cubeUV_minTileSize;
  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);
  uv *= texelSize;
  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x += texelSize;
  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.y += texelSize;
  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  uv.x -= texelSize;
  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
  vec3 tm = mix(tl, tr, f.x);
  vec3 bm = mix(bl, br, f.x);
  return mix(tm, bm, f.y);
}
#define r0 1.0
#define v0 0.339
#define m0 -2.0
#define r1 0.8
#define v1 0.276
#define m1 -1.0
#define r4 0.4
#define v4 0.046
#define m4 2.0
#define r5 0.305
#define v5 0.016
#define m5 3.0
#define r6 0.21
#define v6 0.0038
#define m6 4.0
float roughnessToMip(float roughness) {
  float mip = 0.0;
  if (roughness >= r1) {
    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;
  } else if (roughness >= r4) {
    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;
  } else if (roughness >= r5) {
    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;
  } else if (roughness >= r6) {
    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;
  } else {
    mip = -2.0 * log2(1.16 * roughness);  }
  return mip;
}
vec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {
  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);
  float mipF = fract(mip);
  float mipInt = floor(mip);
  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);
  if (mipF == 0.0) {
    return vec4(color0, 1.0);
  } else {
    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);
    return vec4(mix(color0, color1, mipF), 1.0);
  }
}
#endif`,defaultnormal_vertex=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	transformedNormal = mat3( instanceMatrix ) * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,displacementmap_pars_vertex=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,displacementmap_vertex=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,emissivemap_fragment=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,emissivemap_pars_fragment=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,encodings_fragment="gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment=`
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
	return vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );
}
vec4 sRGBToLinear( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 RGBEToLinear( in vec4 value ) {
	return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
	float maxComponent = max( max( value.r, value.g ), value.b );
	float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
	return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * value.a * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float M = clamp( maxRGB / maxRange, 0.0, 1.0 );
	M = ceil( M * 255.0 ) / 255.0;
	return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
	return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
	float maxRGB = max( value.r, max( value.g, value.b ) );
	float D = max( maxRange / maxRGB, 1.0 );
	D = clamp( floor( D ) / 255.0, 0.0, 1.0 );
	return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
	vec3 Xp_Y_XYZp = cLogLuvM * value.rgb;
	Xp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );
	vec4 vResult;
	vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
	float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
	vResult.w = fract( Le );
	vResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;
	return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
	float Le = value.z * 255.0 + value.w;
	vec3 Xp_Y_XYZp;
	Xp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );
	Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
	Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
	vec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;
	return vec4( max( vRGB, 0.0 ), 1.0 );
}`,envmap_fragment=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		}  else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		reflectVec = normalize( reflectVec );
		sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
		sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		reflectVec = normalize( reflectVec );
		vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifndef ENVMAP_TYPE_CUBE_UV
		envColor = envMapTexelToLinear( envColor );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,envmap_common_pars_fragment=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform int maxMipLevel;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,envmap_pars_fragment=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,envmap_pars_vertex=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,envmap_vertex=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) { 
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,fog_vertex=`#ifdef USE_FOG
	fogDepth = -mvPosition.z;
#endif`,fog_pars_vertex=`#ifdef USE_FOG
	varying float fogDepth;
#endif`,fog_fragment=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, fogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fog_pars_fragment=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float fogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,gradientmap_pars_fragment=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return texture2D( gradientMap, coord ).rgb;
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,lightmap_fragment=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel= texture2D( lightMap, vUv2 );
	reflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
#endif`,lightmap_pars_fragment=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,lights_lambert_vertex=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif`,lights_pars_begin=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {
	vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
		float shadowCameraNear;
		float shadowCameraFar;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif`,envmap_physical_pars_fragment=`#if defined( USE_ENVMAP )
	#ifdef ENVMAP_MODE_REFRACTION
		uniform float refractionRatio;
	#endif
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float sigma = PI * roughness * roughness / ( 1.0 + roughness );
		float desiredMIPLevel = maxMIPLevelScalar + log2( sigma );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
		  vec3 reflectVec = reflect( -viewDir, normal );
		  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
		#else
		  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif`,lights_toon_fragment=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_toon_pars_fragment=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct ToonMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,lights_phong_fragment=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,lights_phong_pars_fragment=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,lights_physical_fragment=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;
material.specularRoughness = min( material.specularRoughness, 1.0 );
#ifdef REFLECTIVITY
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#endif
#ifdef CLEARCOAT
	material.clearcoat = saturate( clearcoat );	material.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheen;
#endif`,lights_physical_pars_fragment=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
#ifdef CLEARCOAT
	float clearcoat;
	float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	vec3 sheenColor;
#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearcoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.specularRoughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifdef CLEARCOAT
		float ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = ccDotNL * directLight.color;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			ccIrradiance *= PI;
		#endif
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
		reflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
	#else
		float clearcoatDHR = 0.0;
	#endif
	#ifdef USE_SHEEN
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(
			material.specularRoughness,
			directLight.direction,
			geometry,
			material.sheenColor
		);
	#else
		reflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);
	#endif
	reflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef CLEARCOAT
		float ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		reflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );
		float ccDotNL = ccDotNV;
		float clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );
	#else
		float clearcoatDHR = 0.0;
	#endif
	float clearcoatInv = 1.0 - clearcoatDHR;
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	BRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,lights_fragment_begin=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,lights_fragment_maps=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );
	#ifdef CLEARCOAT
		clearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );
	#endif
#endif`,lights_fragment_end=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,logdepthbuf_fragment=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,logdepthbuf_pars_fragment=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,logdepthbuf_pars_vertex=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,logdepthbuf_vertex=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,map_fragment=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif`,map_pars_fragment=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,map_particle_fragment=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, uv );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,map_particle_pars_fragment=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,metalnessmap_fragment=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,metalnessmap_pars_fragment=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,morphnormal_vertex=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
	objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
	objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
	objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
#endif`,morphtarget_pars_vertex=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,morphtarget_vertex=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	transformed += morphTarget0 * morphTargetInfluences[ 0 ];
	transformed += morphTarget1 * morphTargetInfluences[ 1 ];
	transformed += morphTarget2 * morphTargetInfluences[ 2 ];
	transformed += morphTarget3 * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += morphTarget4 * morphTargetInfluences[ 4 ];
	transformed += morphTarget5 * morphTargetInfluences[ 5 ];
	transformed += morphTarget6 * morphTargetInfluences[ 6 ];
	transformed += morphTarget7 * morphTargetInfluences[ 7 ];
	#endif
#endif`,normal_fragment_begin=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
			bitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,normal_fragment_maps=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( -vViewPosition, normal, mapN );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif`,normalmap_pars_fragment=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		float scale = sign( st1.t * st0.s - st0.t * st1.s );
		vec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );
		vec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );
		vec3 N = normalize( surf_norm );
		mat3 tsn = mat3( S, T, N );
		mapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		return normalize( tsn * mapN );
	}
#endif`,clearcoat_normal_fragment_begin=`#ifdef CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,clearcoat_normal_fragment_maps=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );
	#endif
#endif`,clearcoat_normalmap_pars_fragment=`#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,packing=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,premultiplied_alpha_fragment=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,project_vertex=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,dithering_fragment=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,dithering_pars_fragment=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,roughnessmap_fragment=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,roughnessmap_pars_fragment=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,shadowmap_pars_fragment=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,shadowmap_pars_vertex=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,shadowmap_vertex=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif`,shadowmask_pars_fragment=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLight directionalLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLight spotLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLight pointLight;
	#pragma unroll_loop
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}`,skinbase_vertex=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,skinning_pars_vertex=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,skinning_vertex=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,skinnormal_vertex=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,specularmap_fragment=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,specularmap_pars_fragment=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,tonemapping_fragment=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,tonemapping_pars_fragment=`#ifndef saturate
#define saturate(a) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );
}`,uv_pars_fragment=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,uv_pars_vertex=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,uv_vertex=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,uv2_pars_fragment=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,uv2_pars_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,uv2_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,worldpos_vertex=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,background_frag=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,background_vert=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,cube_frag=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cube_vert=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,depth_frag=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}`,depth_vert=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}`,distanceRGBA_frag=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,distanceRGBA_vert=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,equirect_frag=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV;
	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	vec4 texColor = texture2D( tEquirect, sampleUV );
	gl_FragColor = mapTexelToLinear( texColor );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,equirect_vert=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,linedashed_frag=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,linedashed_vert=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,meshbasic_frag=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
	
		vec4 lightMapTexel= texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshmatcap_frag=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
		matcapColor = matcapTexelToLinear( matcapColor );
	#else
		vec4 matcapColor = vec4( 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshmatcap_vert=`#define MATCAP
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#ifndef FLAT_SHADED
		vNormal = normalize( transformedNormal );
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshtoon_frag=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert=`#define TOON
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphong_vert=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphysical_frag=`#define STANDARD
#ifdef PHYSICAL
	#define REFLECTIVITY
	#define CLEARCOAT
	#define TRANSPARENCY
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef TRANSPARENCY
	uniform float transparency;
#endif
#ifdef REFLECTIVITY
	uniform float reflectivity;
#endif
#ifdef CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheen;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#ifdef TRANSPARENCY
		diffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );
	#endif
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert=`#define STANDARD
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,normal_frag=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
}`,normal_vert=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,points_frag=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,points_vert=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,shadow_frag=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,shadow_vert=`#include <fog_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sprite_frag=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sprite_vert=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ShaderChunk={alphamap_fragment,alphamap_pars_fragment,alphatest_fragment,aomap_fragment,aomap_pars_fragment,begin_vertex,beginnormal_vertex,bsdfs,bumpmap_pars_fragment,clipping_planes_fragment,clipping_planes_pars_fragment,clipping_planes_pars_vertex,clipping_planes_vertex,color_fragment,color_pars_fragment,color_pars_vertex,color_vertex,common,cube_uv_reflection_fragment,defaultnormal_vertex,displacementmap_pars_vertex,displacementmap_vertex,emissivemap_fragment,emissivemap_pars_fragment,encodings_fragment,encodings_pars_fragment,envmap_fragment,envmap_common_pars_fragment,envmap_pars_fragment,envmap_pars_vertex,envmap_physical_pars_fragment,envmap_vertex,fog_vertex,fog_pars_vertex,fog_fragment,fog_pars_fragment,gradientmap_pars_fragment,lightmap_fragment,lightmap_pars_fragment,lights_lambert_vertex,lights_pars_begin,lights_toon_fragment,lights_toon_pars_fragment,lights_phong_fragment,lights_phong_pars_fragment,lights_physical_fragment,lights_physical_pars_fragment,lights_fragment_begin,lights_fragment_maps,lights_fragment_end,logdepthbuf_fragment,logdepthbuf_pars_fragment,logdepthbuf_pars_vertex,logdepthbuf_vertex,map_fragment,map_pars_fragment,map_particle_fragment,map_particle_pars_fragment,metalnessmap_fragment,metalnessmap_pars_fragment,morphnormal_vertex,morphtarget_pars_vertex,morphtarget_vertex,normal_fragment_begin,normal_fragment_maps,normalmap_pars_fragment,clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps,clearcoat_normalmap_pars_fragment,packing,premultiplied_alpha_fragment,project_vertex,dithering_fragment,dithering_pars_fragment,roughnessmap_fragment,roughnessmap_pars_fragment,shadowmap_pars_fragment,shadowmap_pars_vertex,shadowmap_vertex,shadowmask_pars_fragment,skinbase_vertex,skinning_pars_vertex,skinning_vertex,skinnormal_vertex,specularmap_fragment,specularmap_pars_fragment,tonemapping_fragment,tonemapping_pars_fragment,uv_pars_fragment,uv_pars_vertex,uv_vertex,uv2_pars_fragment,uv2_pars_vertex,uv2_vertex,worldpos_vertex,background_frag,background_vert,cube_frag,cube_vert,depth_frag,depth_vert,distanceRGBA_frag,distanceRGBA_vert,equirect_frag,equirect_vert,linedashed_frag,linedashed_vert,meshbasic_frag,meshbasic_vert,meshlambert_frag,meshlambert_vert,meshmatcap_frag,meshmatcap_vert,meshtoon_frag,meshtoon_vert,meshphong_frag,meshphong_vert,meshphysical_frag,meshphysical_vert,normal_frag,normal_vert,points_frag,points_vert,shadow_frag,shadow_vert,sprite_frag,sprite_vert},ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0)},specular:{value:new Color(1118481)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0)},opacity:{value:1}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}},ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{transparency:{value:0},clearcoat:{value:0},clearcoatRoughness:{value:0},sheen:{value:new Color(0)},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(e,t,n,s){var o,i,r=new Color(0),a=0,c=null,l=0,d=null;function h(t,s,h,m){var p,f=s.background,g=e.xr,v=g.getSession&&g.getSession();v&&v.environmentBlendMode==="additive"&&(f=null),f===null?u(r,a):f&&f.isColor&&(u(f,1),m=!0),(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),f&&(f.isCubeTexture||f.isWebGLCubeRenderTarget||f.mapping===CubeUVReflectionMapping)?(o===void 0&&(o=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:"BackgroundCubeMaterial",uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:!1,depthWrite:!1,fog:!1})),o.geometry.deleteAttribute("normal"),o.geometry.deleteAttribute("uv"),o.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(o.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(o)),p=f.isWebGLCubeRenderTarget?f.texture:f,o.material.uniforms.envMap.value=p,o.material.uniforms.flipEnvMap.value=p.isCubeTexture?-1:1,(c!==f||l!==p.version||d!==e.toneMapping)&&(o.material.needsUpdate=!0,c=f,l=p.version,d=e.toneMapping),t.unshift(o,o.geometry,o.material,0,0,null)):f&&f.isTexture&&(i===void 0&&(i=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:"BackgroundMaterial",uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:!1,depthWrite:!1,fog:!1})),i.geometry.deleteAttribute("normal"),Object.defineProperty(i.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(i)),i.material.uniforms.t2D.value=f,f.matrixAutoUpdate===!0&&f.updateMatrix(),i.material.uniforms.uvTransform.value.copy(f.matrix),(c!==f||l!==f.version||d!==e.toneMapping)&&(i.material.needsUpdate=!0,c=f,l=f.version,d=e.toneMapping),t.unshift(i,i.geometry,i.material,0,0,null))}function u(e,n){t.buffers.color.setClear(e.r,e.g,e.b,n,s)}return{getClearColor:function(){return r},setClearColor:function(e,t){r.set(e),a=t!==void 0?t:1,u(r,a)},getClearAlpha:function(){return a},setClearAlpha:function(e){a=e,u(r,a)},render:h}}function WebGLBufferRenderer(e,t,n,s){var o,i=s.isWebGL2;function a(e){o=e}function r(t,s){e.drawArrays(o,t,s),n.update(s,o)}function c(s,a,r,c){if(c===0)return;var l,d;if(i)l=e,d="drawArraysInstanced";else if(l=t.get("ANGLE_instanced_arrays"),d="drawArraysInstancedANGLE",l===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}l[d](o,a,r,c),n.update(r,o,c)}this.setMode=a,this.render=r,this.renderInstances=c}function WebGLCapabilities(e,t,n){function _(){if(o!==void 0)return o;var n=t.get("EXT_texture_filter_anisotropic");return n!==null?o=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):o=0,o}function b(t){if(t==="highp"){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return t==="mediump"&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var o,i,r,l,d,u,h,m,f,p,g,v,j,y,a=typeof WebGL2RenderingContext!="undefined"&&e instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&e instanceof WebGL2ComputeRenderingContext,s=n.precision!==void 0?n.precision:"highp",c=b(s);return c!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",c,"instead."),s=c),v=n.logarithmicDepthBuffer===!0,d=e.getParameter(34930),i=e.getParameter(35660),u=e.getParameter(3379),h=e.getParameter(34076),m=e.getParameter(34921),f=e.getParameter(36347),p=e.getParameter(36348),g=e.getParameter(36349),l=i>0,r=a||!!t.get("OES_texture_float"),j=l&&r,y=a?e.getParameter(36183):0,{isWebGL2:a,getMaxAnisotropy:_,getMaxPrecision:b,precision:s,logarithmicDepthBuffer:v,maxTextures:d,maxVertexTextures:i,maxTextureSize:u,maxCubemapSize:h,maxAttributes:m,maxVertexUniforms:f,maxVaryings:p,maxFragmentUniforms:g,vertexTextures:l,floatFragmentTextures:r,floatVertexTextures:j,maxSamples:y}}function WebGLClipping(){var i=this,s=null,t=0,a=!1,n=!1,r=new Plane,c=new Matrix3,e={value:null,needsUpdate:!1};this.uniform=e,this.numPlanes=0,this.numIntersection=0,this.init=function(e,n,i){var r=e.length!==0||n||t!==0||a;return a=n,s=o(e,i,0),t=e.length,r},this.beginShadows=function(){n=!0,o(null)},this.endShadows=function(){n=!1,l()},this.setState=function(i,r,c,d,u,h){if(!a||i===null||i.length===0||n&&!c)n?o(null):l();else{var m,p=n?0:t,g=p*4,f=u.clippingState||null;e.value=f,f=o(i,d,g,h);for(m=0;m!==g;++m)f[m]=s[m];u.clippingState=f,this.numIntersection=r?this.numPlanes:0,this.numPlanes+=p}};function l(){e.value!==s&&(e.value=s,e.needsUpdate=t>0),i.numPlanes=t,i.numIntersection=0}function o(t,n,s,o){var d,u,h,m,l=t!==null?t.length:0,a=null;if(l!==0){if(a=e.value,o!==!0||a===null){h=s+l*4,m=n.matrixWorldInverse,c.getNormalMatrix(m),(a===null||a.length<h)&&(a=new Float32Array(h));for(d=0,u=s;d!==l;++d,u+=4)r.copy(t[d]).applyMatrix4(m,c),r.normal.toArray(a,u),a[u+3]=r.constant}e.value=a,e.needsUpdate=!0}return i.numPlanes=l,a}}function WebGLExtensions(e){var t={};return{get:function(n){if(t[n]!==void 0)return t[n];var s;switch(n){case"WEBGL_depth_texture":s=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=e.getExtension(n)}return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=s,s}}}function WebGLGeometries(e,t,n){var o=new WeakMap,s=new WeakMap;function i(e){var c,l,r=e.target,a=o.get(r);a.index!==null&&t.remove(a.index);for(l in a.attributes)t.remove(a.attributes[l]);r.removeEventListener("dispose",i),o.delete(r),c=s.get(a),c&&(t.remove(c),s.delete(a)),n.memory.geometries--}function r(e,t){var s=o.get(t);return s||(t.addEventListener("dispose",i),t.isBufferGeometry?s=t:t.isGeometry&&(t._bufferGeometry===void 0&&(t._bufferGeometry=(new BufferGeometry).setFromObject(e)),s=t._bufferGeometry),o.set(t,s),n.memory.geometries++,s)}function c(e){n=e.index,s=e.attributes,n!==null&&t.update(n,34963);for(o in s)t.update(s[o],34962);i=e.morphAttributes;for(o in i){a=i[o];for(var n,s,o,i,a,r=0,c=a.length;r<c;r++)t.update(a[r],34962)}}function a(e){if(c=[],l=e.index,h=e.attributes.position,d=0,l!==null){o=l.array,d=l.version;for(var o,i,a,r,c,l,d,u,h,f,n=0,m=o.length;n<m;n+=3)i=o[n+0],a=o[n+1],r=o[n+2],c.push(i,a,a,r,r,i)}else{o=h.array,d=h.version;for(n=0,m=o.length/3-1;n<m;n+=3)i=n+0,a=n+1,r=n+2,c.push(i,a,a,r,r,i)}u=new(arrayMax(c)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(c,1),u.version=d,t.update(u,34963),f=s.get(e),f&&t.remove(f),s.set(e,u)}function l(e){var t,n=s.get(e);return n?(t=e.index,t!==null&&n.version<t.version&&a(e)):a(e),s.get(e)}return{get:r,update:c,getWireframeAttribute:l}}function WebGLIndexedBufferRenderer(e,t,n,s){var o,i,a,r=s.isWebGL2;function c(e){o=e}function l(e){i=e.type,a=e.bytesPerElement}function d(t,s){e.drawElements(o,s,i,t*a),n.update(s,o)}function u(s,c,l,d){if(d===0)return;var u,h;if(r)u=e,h="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",u===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}u[h](o,l,i,c*a,d),n.update(l,o,d)}this.setMode=c,this.setIndex=l,this.render=d,this.renderInstances=u}function WebGLInfo(){var n={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function s(e,n,s){switch(s=s||1,t.calls++,n){case 4:t.triangles+=s*(e/3);break;case 1:t.lines+=s*(e/2);break;case 3:t.lines+=s*(e-1);break;case 2:t.lines+=s*e;break;case 0:t.points+=s*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n);break}}function o(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:n,render:t,programs:null,autoReset:!0,reset:o,update:s}}function absNumericalSort(e,t){return Math.abs(t[1])-Math.abs(e[1])}function WebGLMorphtargets(e){var n={},t=new Float32Array(8);function s(s,o,i,a){var r,c,d,u,h,p,g,v,m=s.morphTargetInfluences,f=m===void 0?0:m.length,l=n[o.id];if(l===void 0){l=[];for(r=0;r<f;r++)l[r]=[r,0];n[o.id]=l}d=i.morphTargets&&o.morphAttributes.position,u=i.morphNormals&&o.morphAttributes.normal;for(r=0;r<f;r++)c=l[r],c[1]!==0&&(d&&o.deleteAttribute("morphTarget"+r),u&&o.deleteAttribute("morphNormal"+r));for(r=0;r<f;r++)c=l[r],c[0]=r,c[1]=m[r];l.sort(absNumericalSort),p=0;for(r=0;r<8;r++){if(c=l[r],c&&(g=c[0],h=c[1],h)){d&&o.setAttribute("morphTarget"+r,d[g]),u&&o.setAttribute("morphNormal"+r,u[g]),t[r]=h,p+=h;continue}t[r]=0}v=o.morphTargetsRelative?1:1-p,a.getUniforms().setValue(e,"morphTargetBaseInfluence",v),a.getUniforms().setValue(e,"morphTargetInfluences",t)}return{update:s}}function WebGLObjects(e,t,n,s){var o={};function i(e){var a=s.render.frame,r=e.geometry,i=t.get(e,r);return o[i.id]!==a&&(r.isGeometry&&i.updateFromObject(e),t.update(i),o[i.id]=a),e.isInstancedMesh&&n.update(e.instanceMatrix,34962),i}function a(){o={}}return{update:i,dispose:a}}function CubeTexture(e,t,n,s,o,i,a,r,c,l){e=e!==void 0?e:[],t=t!==void 0?t:CubeReflectionMapping,a=a!==void 0?a:RGBFormat,Texture.call(this,e,t,n,s,o,i,a,r,c,l),this.flipY=!1}CubeTexture.prototype=Object.create(Texture.prototype),CubeTexture.prototype.constructor=CubeTexture,CubeTexture.prototype.isCubeTexture=!0,Object.defineProperty(CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});function DataTexture2DArray(e,t,n,s){Texture.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:s||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}DataTexture2DArray.prototype=Object.create(Texture.prototype),DataTexture2DArray.prototype.constructor=DataTexture2DArray,DataTexture2DArray.prototype.isDataTexture2DArray=!0;function DataTexture3D(e,t,n,s){Texture.call(this,null),this.image={data:e||null,width:t||1,height:n||1,depth:s||1},this.magFilter=NearestFilter,this.minFilter=NearestFilter,this.wrapR=ClampToEdgeWrapping,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}DataTexture3D.prototype=Object.create(Texture.prototype),DataTexture3D.prototype.constructor=DataTexture3D,DataTexture3D.prototype.isDataTexture3D=!0,emptyTexture=new Texture,emptyTexture2dArray=new DataTexture2DArray,emptyTexture3d=new DataTexture3D,emptyCubeTexture=new CubeTexture,arrayCacheF32=[],arrayCacheI32=[],mat4array=new Float32Array(16),mat3array=new Float32Array(9),mat2array=new Float32Array(4);function flatten(e,t,n){if(o=e[0],o<=0||o>0)return e;var o,i,r,a=t*n,s=arrayCacheF32[a];if(s===void 0&&(s=new Float32Array(a),arrayCacheF32[a]=s),t!==0){o.toArray(s,0);for(i=1,r=0;i!==t;++i)r+=n,e[i].toArray(s,r)}return s}function arraysEqual(e,t){if(e.length!==t.length)return!1;for(var n=0,s=e.length;n<s;n++)if(e[n]!==t[n])return!1;return!0}function copyArray(e,t){for(var n=0,s=t.length;n<s;n++)e[n]=t[n]}function allocTexUnits(e,t){var s,n=arrayCacheI32[t];n===void 0&&(n=new Int32Array(t),arrayCacheI32[t]=n);for(s=0;s!==t;++s)n[s]=e.allocateTextureUnit();return n}function setValueV1f(e,t){var n=this.cache;if(n[0]===t)return;e.uniform1f(this.addr,t),n[0]=t}function setValueV2f(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(arraysEqual(n,t))return;e.uniform2fv(this.addr,t),copyArray(n,t)}}function setValueV3f(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(arraysEqual(n,t))return;e.uniform3fv(this.addr,t),copyArray(n,t)}}function setValueV4f(e,t){var n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(arraysEqual(n,t))return;e.uniform4fv(this.addr,t),copyArray(n,t)}}function setValueM2(e,t){var n=this.cache,s=t.elements;if(s===void 0){if(arraysEqual(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),copyArray(n,t)}else{if(arraysEqual(n,s))return;mat2array.set(s),e.uniformMatrix2fv(this.addr,!1,mat2array),copyArray(n,s)}}function setValueM3(e,t){var n=this.cache,s=t.elements;if(s===void 0){if(arraysEqual(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),copyArray(n,t)}else{if(arraysEqual(n,s))return;mat3array.set(s),e.uniformMatrix3fv(this.addr,!1,mat3array),copyArray(n,s)}}function setValueM4(e,t){var n=this.cache,s=t.elements;if(s===void 0){if(arraysEqual(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),copyArray(n,t)}else{if(arraysEqual(n,s))return;mat4array.set(s),e.uniformMatrix4fv(this.addr,!1,mat4array),copyArray(n,s)}}function setValueT1(e,t,n){var o=this.cache,s=n.allocateTextureUnit();o[0]!==s&&(e.uniform1i(this.addr,s),o[0]=s),n.safeSetTexture2D(t||emptyTexture,s)}function setValueT2DArray1(e,t,n){var o=this.cache,s=n.allocateTextureUnit();o[0]!==s&&(e.uniform1i(this.addr,s),o[0]=s),n.setTexture2DArray(t||emptyTexture2dArray,s)}function setValueT3D1(e,t,n){var o=this.cache,s=n.allocateTextureUnit();o[0]!==s&&(e.uniform1i(this.addr,s),o[0]=s),n.setTexture3D(t||emptyTexture3d,s)}function setValueT6(e,t,n){var o=this.cache,s=n.allocateTextureUnit();o[0]!==s&&(e.uniform1i(this.addr,s),o[0]=s),n.safeSetTextureCube(t||emptyCubeTexture,s)}function setValueV1i(e,t){var n=this.cache;if(n[0]===t)return;e.uniform1i(this.addr,t),n[0]=t}function setValueV2i(e,t){var n=this.cache;if(arraysEqual(n,t))return;e.uniform2iv(this.addr,t),copyArray(n,t)}function setValueV3i(e,t){var n=this.cache;if(arraysEqual(n,t))return;e.uniform3iv(this.addr,t),copyArray(n,t)}function setValueV4i(e,t){var n=this.cache;if(arraysEqual(n,t))return;e.uniform4iv(this.addr,t),copyArray(n,t)}function setValueV1ui(e,t){var n=this.cache;if(n[0]===t)return;e.uniform1ui(this.addr,t),n[0]=t}function getSingularSetter(e){switch(e){case 5126:return setValueV1f;case 35664:return setValueV2f;case 35665:return setValueV3f;case 35666:return setValueV4f;case 35674:return setValueM2;case 35675:return setValueM3;case 35676:return setValueM4;case 5124:case 35670:return setValueV1i;case 35667:case 35671:return setValueV2i;case 35668:case 35672:return setValueV3i;case 35669:case 35673:return setValueV4i;case 5125:return setValueV1ui;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1;case 35679:case 36299:case 36307:return setValueT3D1;case 35680:case 36300:case 36308:case 36293:return setValueT6;case 36289:case 36303:case 36311:case 36292:return setValueT2DArray1}}function setValueV1fArray(e,t){e.uniform1fv(this.addr,t)}function setValueV1iArray(e,t){e.uniform1iv(this.addr,t)}function setValueV2iArray(e,t){e.uniform2iv(this.addr,t)}function setValueV3iArray(e,t){e.uniform3iv(this.addr,t)}function setValueV4iArray(e,t){e.uniform4iv(this.addr,t)}function setValueV2fArray(e,t){var n=flatten(t,this.size,2);e.uniform2fv(this.addr,n)}function setValueV3fArray(e,t){var n=flatten(t,this.size,3);e.uniform3fv(this.addr,n)}function setValueV4fArray(e,t){var n=flatten(t,this.size,4);e.uniform4fv(this.addr,n)}function setValueM2Array(e,t){var n=flatten(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function setValueM3Array(e,t){var n=flatten(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function setValueM4Array(e,t){var n=flatten(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function setValueT1Array(e,t,n){var s,o=t.length,i=allocTexUnits(n,o);e.uniform1iv(this.addr,i);for(s=0;s!==o;++s)n.safeSetTexture2D(t[s]||emptyTexture,i[s])}function setValueT6Array(e,t,n){var s,o=t.length,i=allocTexUnits(n,o);e.uniform1iv(this.addr,i);for(s=0;s!==o;++s)n.safeSetTextureCube(t[s]||emptyCubeTexture,i[s])}function getPureArraySetter(e){switch(e){case 5126:return setValueV1fArray;case 35664:return setValueV2fArray;case 35665:return setValueV3fArray;case 35666:return setValueV4fArray;case 35674:return setValueM2Array;case 35675:return setValueM3Array;case 35676:return setValueM4Array;case 5124:case 35670:return setValueV1iArray;case 35667:case 35671:return setValueV2iArray;case 35668:case 35672:return setValueV3iArray;case 35669:case 35673:return setValueV4iArray;case 35678:case 36198:case 36298:case 36306:case 35682:return setValueT1Array;case 35680:case 36300:case 36308:case 36293:return setValueT6Array}}function SingleUniform(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=getSingularSetter(t.type)}function PureArrayUniform(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=getPureArraySetter(t.type)}PureArrayUniform.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),copyArray(t,e)};function StructuredUniform(e){this.id=e,this.seq=[],this.map={}}StructuredUniform.prototype.setValue=function(e,t,n){s=this.seq;for(var s,i,o=0,a=s.length;o!==a;++o)i=s[o],i.setValue(e,t[i.id],n)},RePathPart=/([\w\d_]+)(\])?(\[|\.)?/g;function addUniform(e,t){e.seq.push(t),e.map[t.id]=t}function parseUniform(e,t,n){for(i=e.name,c=i.length,RePathPart.lastIndex=0;!0;){var o,i,c,l,a=RePathPart.exec(i),d=RePathPart.lastIndex,s=a[1],u=a[2]==="]",r=a[3];if(u&&(s=s|0),r===void 0||r==="["&&d+2===c){addUniform(n,r===void 0?new SingleUniform(s,e,t):new PureArrayUniform(s,e,t));break}l=n.map,o=l[s],o===void 0&&(o=new StructuredUniform(s),addUniform(n,o)),n=o}}function WebGLUniforms(e,t){this.seq=[],this.map={},s=e.getProgramParameter(t,35718);for(n=0;n<s;++n){var n,s,o=e.getActiveUniform(t,n),i=e.getUniformLocation(t,o.name);parseUniform(o,i,this)}}WebGLUniforms.prototype.setValue=function(e,t,n,s){var o=this.map[t];o!==void 0&&o.setValue(e,n,s)},WebGLUniforms.prototype.setOptional=function(e,t,n){var s=t[n];s!==void 0&&this.setValue(e,n,s)},WebGLUniforms.upload=function(e,t,n,s){for(var i,a,o=0,r=t.length;o!==r;++o)i=t[o],a=n[i.id],a.needsUpdate!==!1&&i.setValue(e,a.value,s)},WebGLUniforms.seqWithValue=function(e,t){n=[];for(var n,o,s=0,i=e.length;s!==i;++s)o=e[s],o.id in t&&n.push(o);return n};function WebGLShader(e,t,n){var s=e.createShader(t);return e.shaderSource(s,n),e.compileShader(s),s}programIdCount=0;function addLineNumbers(e){for(var n=e.split(`
`),t=0;t<n.length;t++)n[t]=t+1+": "+n[t];return n.join(`
`)}function getEncodingComponents(e){switch(e){case LinearEncoding:return["Linear","( value )"];case sRGBEncoding:return["sRGB","( value )"];case RGBEEncoding:return["RGBE","( value )"];case RGBM7Encoding:return["RGBM","( value, 7.0 )"];case RGBM16Encoding:return["RGBM","( value, 16.0 )"];case RGBDEncoding:return["RGBD","( value, 256.0 )"];case GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case LogLuvEncoding:return["LogLuv","( value )"];default:throw new Error("unsupported encoding: "+e)}}function getShaderErrors(e,t,n){var o,i=e.getShaderParameter(t,35713),s=e.getShaderInfoLog(t).trim();return i&&s===""?"":(o=e.getShaderSource(t),"THREE.WebGLShader: gl.getShaderInfoLog() "+n+`
`+s+addLineNumbers(o))}function getTexelDecodingFunction(e,t){var n=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function getTexelEncodingFunction(e,t){var n=getEncodingComponents(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function getToneMappingFunction(e,t){var n;switch(t){case LinearToneMapping:n="Linear";break;case ReinhardToneMapping:n="Reinhard";break;case Uncharted2ToneMapping:n="Uncharted2";break;case CineonToneMapping:n="OptimizedCineon";break;case ACESFilmicToneMapping:n="ACESFilmic";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function generateExtensions(e){var t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(filterEmptyLine).join(`
`)}function generateDefines(e){var t,s,n=[];for(s in e){if(t=e[s],t===!1)continue;n.push("#define "+s+" "+t)}return n.join(`
`)}function fetchAttributeLocations(e,t){for(var s,i,o={},a=e.getProgramParameter(t,35721),n=0;n<a;n++)i=e.getActiveAttrib(t,n),s=i.name,o[s]=e.getAttribLocation(t,s);return o}function filterEmptyLine(e){return e!==""}function replaceLightNums(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function replaceClippingPlaneNums(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}includePattern=/^[ \t]*#include +<([\w\d./]+)>/gm;function resolveIncludes(e){return e.replace(includePattern,includeReplacer)}function includeReplacer(e,t){var n=ShaderChunk[t];if(n===void 0)throw new Error("Can not resolve #include <"+t+">");return resolveIncludes(n)}loopPattern=/#pragma unroll_loop[\s]+?for \( int i = (\d+); i < (\d+); i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function unrollLoops(e){return e.replace(loopPattern,loopReplacer)}function loopReplacer(e,t,n,s){for(var i="",o=parseInt(t);o<parseInt(n);o++)i+=s.replace(/\[ i \]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return i}function generatePrecision(e){var t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function generateShadowMapTypeDefine(e){var t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===PCFShadowMap?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===PCFSoftShadowMap?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===VSMShadowMap&&(t="SHADOWMAP_TYPE_VSM"),t}function generateEnvMapTypeDefine(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:t="ENVMAP_TYPE_CUBE";break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:t="ENVMAP_TYPE_CUBE_UV";break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:t="ENVMAP_TYPE_EQUIREC";break;case SphericalReflectionMapping:t="ENVMAP_TYPE_SPHERE";break}return t}function generateEnvMapModeDefine(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case CubeRefractionMapping:case EquirectangularRefractionMapping:t="ENVMAP_MODE_REFRACTION";break}return t}function generateEnvMapBlendingDefine(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case MixOperation:t="ENVMAP_BLENDING_MIX";break;case AddOperation:t="ENVMAP_BLENDING_ADD";break}return t}function WebGLProgram(e,t,n){var r,c,d,u,h,m,f,g,v,b,j,y,_,w,C,k,A,s=e.getContext(),M=n.defines,i=n.vertexShader,a=n.fragmentShader,O=generateShadowMapTypeDefine(n),F=generateEnvMapTypeDefine(n),x=generateEnvMapModeDefine(n),T=generateEnvMapBlendingDefine(n),S=e.gammaFactor>0?e.gammaFactor:1,E=n.isWebGL2?"":generateExtensions(n),p=generateDefines(M),o=s.createProgram(),l=n.numMultiviewViews;return n.isRawShaderMaterial?(c=[p].filter(filterEmptyLine).join(`
`),c.length>0&&(c+=`
`),r=[E,p].filter(filterEmptyLine).join(`
`),r.length>0&&(r+=`
`)):(c=[generatePrecision(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+S,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+x:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+O:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING"," attribute mat4 instanceMatrix;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(filterEmptyLine).join(`
`),r=[E,generatePrecision(n),"#define SHADER_NAME "+n.shaderName,p,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+S,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+F:"",n.envMap?"#define "+x:"",n.envMap?"#define "+T:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+O:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==NoToneMapping?"#define TONE_MAPPING":"",n.toneMapping!==NoToneMapping?ShaderChunk.tonemapping_pars_fragment:"",n.toneMapping!==NoToneMapping?getToneMappingFunction("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.outputEncoding||n.mapEncoding||n.matcapEncoding||n.envMapEncoding||n.emissiveMapEncoding||n.lightMapEncoding?ShaderChunk.encodings_pars_fragment:"",n.mapEncoding?getTexelDecodingFunction("mapTexelToLinear",n.mapEncoding):"",n.matcapEncoding?getTexelDecodingFunction("matcapTexelToLinear",n.matcapEncoding):"",n.envMapEncoding?getTexelDecodingFunction("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMapEncoding?getTexelDecodingFunction("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMapEncoding?getTexelDecodingFunction("lightMapTexelToLinear",n.lightMapEncoding):"",n.outputEncoding?getTexelEncodingFunction("linearToOutputTexel",n.outputEncoding):"",n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(filterEmptyLine).join(`
`)),i=resolveIncludes(i),i=replaceLightNums(i,n),i=replaceClippingPlaneNums(i,n),a=resolveIncludes(a),a=replaceLightNums(a,n),a=replaceClippingPlaneNums(a,n),i=unrollLoops(i),a=unrollLoops(a),n.isWebGL2&&!n.isRawShaderMaterial&&(f=!1,m=/^\s*#version\s+300\s+es\s*\n/,n.isShaderMaterial&&i.match(m)!==null&&a.match(m)!==null&&(f=!0,i=i.replace(m,""),a=a.replace(m,"")),c=[`#version 300 es
`,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+c,r=[`#version 300 es
`,"#define varying in",f?"":"out highp vec4 pc_fragColor;",f?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+r,l>0&&(c=c.replace(`#version 300 es
`,[`#version 300 es
`,"#extension GL_OVR_multiview2 : require","layout(num_views = "+l+") in;","#define VIEW_ID gl_ViewID_OVR"].join(`
`)),c=c.replace(["uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;"].join(`
`),["uniform mat4 modelViewMatrices["+l+"];","uniform mat4 projectionMatrices["+l+"];","uniform mat4 viewMatrices["+l+"];","uniform mat3 normalMatrices["+l+"];","#define modelViewMatrix modelViewMatrices[VIEW_ID]","#define projectionMatrix projectionMatrices[VIEW_ID]","#define viewMatrix viewMatrices[VIEW_ID]","#define normalMatrix normalMatrices[VIEW_ID]"].join(`
`)),r=r.replace(`#version 300 es
`,[`#version 300 es
`,"#extension GL_OVR_multiview2 : require","#define VIEW_ID gl_ViewID_OVR"].join(`
`)),r=r.replace("uniform mat4 viewMatrix;",["uniform mat4 viewMatrices["+l+"];","#define viewMatrix viewMatrices[VIEW_ID]"].join(`
`)))),C=c+i,w=r+a,u=WebGLShader(s,35633,C),d=WebGLShader(s,35632,w),s.attachShader(o,u),s.attachShader(o,d),n.index0AttributeName!==void 0?s.bindAttribLocation(o,0,n.index0AttributeName):n.morphTargets===!0&&s.bindAttribLocation(o,0,"position"),s.linkProgram(o),e.debug.checkShaderErrors&&(h=s.getProgramInfoLog(o).trim(),v=s.getShaderInfoLog(u).trim(),_=s.getShaderInfoLog(d).trim(),y=!0,g=!0,s.getProgramParameter(o,35714)===!1?(y=!1,k=getShaderErrors(s,u,"vertex"),A=getShaderErrors(s,d,"fragment"),console.error("THREE.WebGLProgram: shader error: ",s.getError(),"35715",s.getProgramParameter(o,35715),"gl.getProgramInfoLog",h,k,A)):h!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",h):(v===""||_==="")&&(g=!1),g&&(this.diagnostics={runnable:y,programLog:h,vertexShader:{log:v,prefix:c},fragmentShader:{log:_,prefix:r}})),s.deleteShader(u),s.deleteShader(d),this.getUniforms=function(){return j===void 0&&(j=new WebGLUniforms(s,o)),j},this.getAttributes=function(){return b===void 0&&(b=fetchAttributeLocations(s,o)),b},this.destroy=function(){s.deleteProgram(o),this.program=void 0},this.name=n.shaderName,this.id=programIdCount++,this.cacheKey=t,this.usedTimes=1,this.program=o,this.vertexShader=u,this.fragmentShader=d,this.numMultiviewViews=l,this}function WebGLPrograms(e,t,n){var s=[],i=n.isWebGL2,l=n.logarithmicDepthBuffer,r=n.floatVertexTextures,a=n.precision,d=n.maxVertexUniforms,u=n.vertexTextures,h={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},c=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","numMultiviewViews","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen"];function m(e,t){if(t){var n,s=ShaderLib[t];n={name:e.type,uniforms:UniformsUtils.clone(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader}}else n={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};return n}function f(e){var t,s,o,i=e.skeleton,n=i.bones;return r?1024:(s=d,o=Math.floor((s-20)/4),t=Math.min(o,n.length),t<n.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+n.length+" bones. This GPU supports "+t+"."),0):t)}function o(e){var t;return e?e.isTexture?t=e.encoding:e.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=LinearEncoding,t}this.getParameters=function(s,c,d,p,g,v,b){var y,_,C,E,w=p.fog,k=s.isMeshStandardMaterial?p.environment:null,j=s.envMap||k,O=h[s.type],x=b.isSkinnedMesh?f(b):0;return s.precision!==null&&(a=n.getMaxPrecision(s.precision),a!==s.precision&&console.warn("THREE.WebGLProgram.getParameters:",s.precision,"not supported, using",a,"instead.")),y=m(s,O),s.onBeforeCompile(y,e),_=e.getRenderTarget(),C=_&&_.isWebGLMultiviewRenderTarget?_.numViews:0,E={isWebGL2:i,shaderID:O,shaderName:y.name,uniforms:y.uniforms,vertexShader:y.vertexShader,fragmentShader:y.fragmentShader,defines:s.defines,isRawShaderMaterial:s.isRawShaderMaterial,isShaderMaterial:s.isShaderMaterial,precision:a,instancing:b.isInstancedMesh===!0,supportsVertexTextures:u,numMultiviewViews:C,outputEncoding:_!==null?o(_.texture):e.outputEncoding,map:!!s.map,mapEncoding:o(s.map),matcap:!!s.matcap,matcapEncoding:o(s.matcap),envMap:!!j,envMapMode:j&&j.mapping,envMapEncoding:o(j),envMapCubeUV:!!j&&(j.mapping===CubeUVReflectionMapping||j.mapping===CubeUVRefractionMapping),lightMap:!!s.lightMap,lightMapEncoding:o(s.lightMap),aoMap:!!s.aoMap,emissiveMap:!!s.emissiveMap,emissiveMapEncoding:o(s.emissiveMap),bumpMap:!!s.bumpMap,normalMap:!!s.normalMap,objectSpaceNormalMap:s.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:s.normalMapType===TangentSpaceNormalMap,clearcoatNormalMap:!!s.clearcoatNormalMap,displacementMap:!!s.displacementMap,roughnessMap:!!s.roughnessMap,metalnessMap:!!s.metalnessMap,specularMap:!!s.specularMap,alphaMap:!!s.alphaMap,gradientMap:!!s.gradientMap,sheen:!!s.sheen,combine:s.combine,vertexTangents:s.normalMap&&s.vertexTangents,vertexColors:s.vertexColors,vertexUvs:!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatNormalMap||!!s.displacementMap,uvsVertexOnly:!(!!s.map||!!s.bumpMap||!!s.normalMap||!!s.specularMap||!!s.alphaMap||!!s.emissiveMap||!!s.roughnessMap||!!s.metalnessMap||!!s.clearcoatNormalMap)&&!!s.displacementMap,fog:!!w,useFog:s.fog,fogExp2:w&&w.isFogExp2,flatShading:s.flatShading,sizeAttenuation:s.sizeAttenuation,logarithmicDepthBuffer:l,skinning:s.skinning&&x>0,maxBones:x,useVertexTexture:r,morphTargets:s.morphTargets,morphNormals:s.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:c.directional.length,numPointLights:c.point.length,numSpotLights:c.spot.length,numRectAreaLights:c.rectArea.length,numHemiLights:c.hemi.length,numDirLightShadows:c.directionalShadowMap.length,numPointLightShadows:c.pointShadowMap.length,numSpotLightShadows:c.spotShadowMap.length,numClippingPlanes:g,numClipIntersection:v,dithering:s.dithering,shadowMapEnabled:e.shadowMap.enabled&&d.length>0,shadowMapType:e.shadowMap.type,toneMapping:s.toneMapped?e.toneMapping:NoToneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:s.premultipliedAlpha,alphaTest:s.alphaTest,doubleSided:s.side===DoubleSide,flipSided:s.side===BackSide,depthPacking:s.depthPacking!==void 0&&s.depthPacking,index0AttributeName:s.index0AttributeName,extensionDerivatives:s.extensions&&s.extensions.derivatives,extensionFragDepth:s.extensions&&s.extensions.frawbuffers,extensionDrawbuffers:s.extensions&&s.extensions.drawbuffers,extensionShaderTextureLOD:s.extensions&&s.extensions.shaderTextureLOD,rendererExtensionFragDepth:i||t.get("EXT_frag_depth")!==null,rendererExtensionDrawBuffers:i||t.get("WEBGL_draw_buffers")!==null,rendererExtensionShaderTextureLod:i||t.get("EXT_shader_texture_lod")!==null,onBeforeCompile:s.onBeforeCompile},E},this.getProgramCacheKey=function(t){var s,o,n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),t.defines!==void 0)for(o in t.defines)n.push(o),n.push(t.defines[o]);if(t.isRawShaderMaterial===void 0){for(s=0;s<c.length;s++)n.push(t[c[s]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.onBeforeCompile.toString()),n.join()},this.acquireProgram=function(t,n){for(var o,a,i=0,r=s.length;i<r;i++)if(a=s[i],a.cacheKey===n){o=a,++o.usedTimes;break}return o===void 0&&(o=new WebGLProgram(e,n,t),s.push(o)),o},this.releaseProgram=function(e){if(--e.usedTimes===0){var t=s.indexOf(e);s[t]=s[s.length-1],s.pop(),e.destroy()}},this.programs=s}function WebGLProperties(){var e=new WeakMap;function t(t){var n=e.get(t);return n===void 0&&(n={},e.set(t,n)),n}function n(t){e.delete(t)}function s(t,n,s){e.get(t)[n]=s}function o(){e=new WeakMap}return{get:t,remove:n,update:s,dispose:o}}function painterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function reversePainterSortStable(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function WebGLRenderList(){var s=[],n=0,e=[],t=[],o={id:-1};function a(){n=0,e.length=0,t.length=0}function i(e,t,i,a,r,c){var l=s[n];return l===void 0?(l={id:e.id,object:e,geometry:t,material:i,program:i.program||o,groupOrder:a,renderOrder:e.renderOrder,z:r,group:c},s[n]=l):(l.id=e.id,l.object=e,l.geometry=t,l.material=i,l.program=i.program||o,l.groupOrder=a,l.renderOrder=e.renderOrder,l.z=r,l.group=c),n++,l}function r(n,s,o,a,r,c){var l=i(n,s,o,a,r,c);(o.transparent===!0?t:e).push(l)}function c(n,s,o,a,r,c){var l=i(n,s,o,a,r,c);(o.transparent===!0?t:e).unshift(l)}function l(n,s){e.length>1&&e.sort(n||painterSortStable),t.length>1&&t.sort(s||reversePainterSortStable)}return{opaque:e,transparent:t,init:a,push:r,unshift:c,sort:l}}function WebGLRenderLists(){var e=new WeakMap;function t(n){var s=n.target;s.removeEventListener("dispose",t),e.delete(s)}function n(n,s){var o,i=e.get(n);return i===void 0?(o=new WebGLRenderList,e.set(n,new WeakMap),e.get(n).set(s,o),n.addEventListener("dispose",t)):(o=i.get(s),o===void 0&&(o=new WebGLRenderList,i.set(s,o))),o}function s(){e=new WeakMap}return{get:n,dispose:s}}function UniformsCache(){var e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new Vector3,color:new Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"SpotLight":n={position:new Vector3,direction:new Vector3,color:new Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2};break;case"PointLight":n={position:new Vector3,color:new Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new Vector3,skyColor:new Color,groundColor:new Color};break;case"RectAreaLight":n={color:new Color,position:new Vector3,halfWidth:new Vector3,halfHeight:new Vector3};break}return e[t.id]=n,n}}}nextVersion=0;function shadowCastingLightsFirst(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function WebGLLights(){for(var n,s,o,t=new UniformsCache,e={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},i=0;i<9;i++)e.probe.push(new Vector3);n=new Vector3,o=new Matrix4,s=new Matrix4;function a(i,a,r){for(var c,l,d,u,h,m,f,p,g,b,j,y,_,w,O,x,C,k,A,E=0,M=0,S=0,v=0;v<9;v++)e.probe[v].set(0,0,0);f=0,p=0,g=0,O=0,w=0,y=0,b=0,j=0,m=r.matrixWorldInverse,i.sort(shadowCastingLightsFirst);for(v=0,k=i.length;v<k;v++)if(l=i[v],_=l.color,h=l.intensity,A=l.distance,C=l.shadow&&l.shadow.map?l.shadow.map.texture:null,l.isAmbientLight)E+=_.r*h,M+=_.g*h,S+=_.b*h;else if(l.isLightProbe)for(x=0;x<9;x++)e.probe[x].addScaledVector(l.sh.coefficients[x],h);else l.isDirectionalLight?(c=t.get(l),c.color.copy(l.color).multiplyScalar(l.intensity),c.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),c.direction.sub(n),c.direction.transformDirection(m),c.shadow=l.castShadow,l.castShadow&&(u=l.shadow,c.shadowBias=u.bias,c.shadowRadius=u.radius,c.shadowMapSize=u.mapSize,e.directionalShadowMap[f]=C,e.directionalShadowMatrix[f]=l.shadow.matrix,y++),e.directional[f]=c,f++):l.isSpotLight?(c=t.get(l),c.position.setFromMatrixPosition(l.matrixWorld),c.position.applyMatrix4(m),c.color.copy(_).multiplyScalar(h),c.distance=A,c.direction.setFromMatrixPosition(l.matrixWorld),n.setFromMatrixPosition(l.target.matrixWorld),c.direction.sub(n),c.direction.transformDirection(m),c.coneCos=Math.cos(l.angle),c.penumbraCos=Math.cos(l.angle*(1-l.penumbra)),c.decay=l.decay,c.shadow=l.castShadow,l.castShadow&&(u=l.shadow,c.shadowBias=u.bias,c.shadowRadius=u.radius,c.shadowMapSize=u.mapSize,e.spotShadowMap[g]=C,e.spotShadowMatrix[g]=l.shadow.matrix,j++),e.spot[g]=c,g++):l.isRectAreaLight?(c=t.get(l),c.color.copy(_).multiplyScalar(h),c.position.setFromMatrixPosition(l.matrixWorld),c.position.applyMatrix4(m),s.identity(),o.copy(l.matrixWorld),o.premultiply(m),s.extractRotation(o),c.halfWidth.set(l.width*.5,0,0),c.halfHeight.set(0,l.height*.5,0),c.halfWidth.applyMatrix4(s),c.halfHeight.applyMatrix4(s),e.rectArea[O]=c,O++):l.isPointLight?(c=t.get(l),c.position.setFromMatrixPosition(l.matrixWorld),c.position.applyMatrix4(m),c.color.copy(l.color).multiplyScalar(l.intensity),c.distance=l.distance,c.decay=l.decay,c.shadow=l.castShadow,l.castShadow&&(u=l.shadow,c.shadowBias=u.bias,c.shadowRadius=u.radius,c.shadowMapSize=u.mapSize,c.shadowCameraNear=u.camera.near,c.shadowCameraFar=u.camera.far,e.pointShadowMap[p]=C,e.pointShadowMatrix[p]=l.shadow.matrix,b++),e.point[p]=c,p++):l.isHemisphereLight&&(c=t.get(l),c.direction.setFromMatrixPosition(l.matrixWorld),c.direction.transformDirection(m),c.direction.normalize(),c.skyColor.copy(l.color).multiplyScalar(h),c.groundColor.copy(l.groundColor).multiplyScalar(h),e.hemi[w]=c,w++);e.ambient[0]=E,e.ambient[1]=M,e.ambient[2]=S,d=e.hash,(d.directionalLength!==f||d.pointLength!==p||d.spotLength!==g||d.rectAreaLength!==O||d.hemiLength!==w||d.numDirectionalShadows!==y||d.numPointShadows!==b||d.numSpotShadows!==j)&&(e.directional.length=f,e.spot.length=g,e.rectArea.length=O,e.point.length=p,e.hemi.length=w,e.directionalShadowMap.length=y,e.pointShadowMap.length=b,e.spotShadowMap.length=j,e.directionalShadowMatrix.length=y,e.pointShadowMatrix.length=b,e.spotShadowMatrix.length=j,d.directionalLength=f,d.pointLength=p,d.spotLength=g,d.rectAreaLength=O,d.hemiLength=w,d.numDirectionalShadows=y,d.numPointShadows=b,d.numSpotShadows=j,e.version=nextVersion++)}return{setup:a,state:e}}function WebGLRenderState(){var s,n=new WebGLLights,e=[],t=[];function o(){e.length=0,t.length=0}function i(t){e.push(t)}function a(e){t.push(e)}function r(s){n.setup(e,t,s)}return s={lightsArray:e,shadowsArray:t,lights:n},{init:o,state:s,setupLights:r,pushLight:i,pushShadow:a}}function WebGLRenderStates(){var e=new WeakMap;function t(n){var s=n.target;s.removeEventListener("dispose",t),e.delete(s)}function n(n,s){var o;return e.has(n)===!1?(o=new WebGLRenderState,e.set(n,new WeakMap),e.get(n).set(s,o),n.addEventListener("dispose",t)):e.get(n).has(s)===!1?(o=new WebGLRenderState,e.get(n).set(s,o)):o=e.get(n).get(s),o}function s(){e=new WeakMap}return{get:n,dispose:s}}function MeshDepthMaterial(e){Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}MeshDepthMaterial.prototype=Object.create(Material.prototype),MeshDepthMaterial.prototype.constructor=MeshDepthMaterial,MeshDepthMaterial.prototype.isMeshDepthMaterial=!0,MeshDepthMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function MeshDistanceMaterial(e){Material.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new Vector3,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}MeshDistanceMaterial.prototype=Object.create(Material.prototype),MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial,MeshDistanceMaterial.prototype.isMeshDistanceMaterial=!0,MeshDistanceMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this},vsm_frag=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
  float mean = 0.0;
  float squared_mean = 0.0;
	float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );
  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {
    #ifdef HORIZONAL_PASS
      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );
      mean += distribution.x;
      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
    #else
      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );
      mean += depth;
      squared_mean += depth * depth;
    #endif
  }
  mean = mean * HALF_SAMPLE_RATE;
  squared_mean = squared_mean * HALF_SAMPLE_RATE;
  float std_dev = sqrt( squared_mean - mean * mean );
  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`,vsm_vert=`void main() {
	gl_Position = vec4( position, 1.0 );
}`;function WebGLShadowMap(e,t,n){var a,c,l,p=new Frustum,s=new Vector2,o=new Vector2,f=new Vector4,m=[],u=[],h={},v={0:BackSide,1:FrontSide,2:DoubleSide},i=new ShaderMaterial({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2},radius:{value:4}},vertexShader:vsm_vert,fragmentShader:vsm_frag}),r=i.clone();r.defines.HORIZONAL_PASS=1,l=new BufferGeometry,l.setAttribute("position",new BufferAttribute(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3)),c=new Mesh(l,i),a=this,this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=PCFShadowMap,this.render=function(t,i,r){if(a.enabled===!1)return;if(a.autoUpdate===!1&&a.needsUpdate===!1)return;if(t.length===0)return;j=e.getRenderTarget(),w=e.getActiveCubeFace(),_=e.getActiveMipmapLevel(),d=e.state,d.setBlending(NoBlending),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(var c,l,d,u,h,m,v,j,_,w,O,b=0,x=t.length;b<x;b++){if(l=t[b],c=l.shadow,c===void 0){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}s.copy(c.mapSize),u=c.getFrameExtents(),s.multiply(u),o.copy(c.mapSize),(s.x>n||s.y>n)&&(console.warn("THREE.WebGLShadowMap:",l,"has shadow exceeding max texture size, reducing"),s.x>n&&(o.x=Math.floor(n/u.x),s.x=o.x*u.x,c.mapSize.x=o.x),s.y>n&&(o.y=Math.floor(n/u.y),s.y=o.y*u.y,c.mapSize.y=o.y)),c.map===null&&!c.isPointLightShadow&&this.type===VSMShadowMap&&(h={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat},c.map=new WebGLRenderTarget(s.x,s.y,h),c.map.texture.name=l.name+".shadowMap",c.mapPass=new WebGLRenderTarget(s.x,s.y,h),c.camera.updateProjectionMatrix()),c.map===null&&(h={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat},c.map=new WebGLRenderTarget(s.x,s.y,h),c.map.texture.name=l.name+".shadowMap",c.camera.updateProjectionMatrix()),e.setRenderTarget(c.map),e.clear(),O=c.getViewportCount();for(m=0;m<O;m++)v=c.getViewport(m),f.set(o.x*v.x,o.y*v.y,o.x*v.z,o.y*v.w),d.viewport(f),c.updateMatrices(l,m),p=c.getFrustum(),g(i,r,c.camera,l,this.type);!c.isPointLightShadow&&this.type===VSMShadowMap&&y(c,r)}a.needsUpdate=!1,e.setRenderTarget(j,w,_)};function y(n,s){var o=t.update(c);i.uniforms.shadow_pass.value=n.map.texture,i.uniforms.resolution.value=n.mapSize,i.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(s,null,o,i,c,null),r.uniforms.shadow_pass.value=n.mapPass.texture,r.uniforms.resolution.value=n.mapSize,r.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(s,null,o,r,c,null)}function j(e,t,n){var o=e<<0|t<<1|n<<2,s=m[o];return s===void 0&&(s=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:e,skinning:t}),m[o]=s),s}function b(e,t,n){var o=e<<0|t<<1|n<<2,s=u[o];return s===void 0&&(s=new MeshDistanceMaterial({morphTargets:e,skinning:t}),u[o]=s),s}function d(t,n,s,o,i,a){if(c=t.geometry,r=null,f=j,u=t.customDepthMaterial,s.isPointLight===!0&&(f=b,u=t.customDistanceMaterial),u===void 0?(m=!1,n.morphTargets===!0&&(c.isBufferGeometry===!0?m=c.morphAttributes&&c.morphAttributes.position&&c.morphAttributes.position.length>0:c.isGeometry===!0&&(m=c.morphTargets&&c.morphTargets.length>0)),p=!1,t.isSkinnedMesh===!0&&(n.skinning===!0?p=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",t)),g=t.isInstancedMesh===!0,r=f(m,p,g)):r=u,e.localClippingEnabled&&n.clipShadows===!0&&n.clippingPlanes.length!==0){var r,c,d,u,m,f,p,g,y=r.uuid,_=n.uuid,l=h[y];l===void 0&&(l={},h[y]=l),d=l[_],d===void 0&&(d=r.clone(),l[_]=d),r=d}return r.visible=n.visible,r.wireframe=n.wireframe,a===VSMShadowMap?r.side=n.shadowSide!==null?n.shadowSide:n.side:r.side=n.shadowSide!==null?n.shadowSide:v[n.side],r.clipShadows=n.clipShadows,r.clippingPlanes=n.clippingPlanes,r.clipIntersection=n.clipIntersection,r.wireframeLinewidth=n.wireframeLinewidth,r.linewidth=n.linewidth,s.isPointLight===!0&&r.isMeshDistanceMaterial===!0&&(r.referencePosition.setFromMatrixPosition(s.matrixWorld),r.nearDistance=o,r.farDistance=i),r}function g(n,s,o,i,a){if(n.visible===!1)return;if(j=n.layers.test(s.layers),j&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&a===VSMShadowMap)&&(!n.frustumCulled||p.intersectsObject(n)))if(n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld),c=t.update(n),r=n.material,Array.isArray(r)){m=c.groups;for(var r,c,l,u,h,m,v,b,j,y,f=0,_=m.length;f<_;f++)v=m[f],l=r[v.materialIndex],l&&l.visible&&(u=d(n,l,i,o.near,o.far,a),e.renderBufferDirect(o,null,c,u,n,v))}else r.visible&&(u=d(n,r,i,o.near,o.far,a),e.renderBufferDirect(o,null,c,u,n,null));b=n.children;for(h=0,y=b.length;h<y;h++)g(b[h],s,o,i,a)}}function WebGLState(e,t,n){var o,a,r,c,l,d,u,h,m,f,p,g,v,b,j,y,_,w,O,x,C,E,k,A,S,M,F,T,D,L,P,H,I,B,q,N=n.isWebGL2;function Z(){var t=!1,n=new Vector4,s=null,o=new Vector4(0,0,0,0);return{setMask:function(n){s!==n&&!t&&(e.colorMask(n,n,n,n),s=n)},setLocked:function(e){t=e},setClear:function(t,s,i,a,r){r===!0&&(t*=a,s*=a,i*=a),n.set(t,s,i,a),o.equals(n)===!1&&(e.clearColor(t,s,i,a),o.copy(n))},reset:function(){t=!1,s=null,o.set(-1,0,0,0)}}}function te(){var t=!1,n=null,o=null,a=null;return{setTest:function(e){e?s(2929):i(2929)},setMask:function(s){n!==s&&!t&&(e.depthMask(s),n=s)},setFunc:function(t){if(o!==t){if(t)switch(t){case NeverDepth:e.depthFunc(512);break;case AlwaysDepth:e.depthFunc(519);break;case LessDepth:e.depthFunc(513);break;case LessEqualDepth:e.depthFunc(515);break;case EqualDepth:e.depthFunc(514);break;case GreaterEqualDepth:e.depthFunc(518);break;case GreaterDepth:e.depthFunc(516);break;case NotEqualDepth:e.depthFunc(517);break;default:e.depthFunc(515)}else e.depthFunc(515);o=t}},setLocked:function(e){t=e},setClear:function(t){a!==t&&(e.clearDepth(t),a=t)},reset:function(){t=!1,n=null,o=null,a=null}}}function G(){var t=!1,n=null,o=null,a=null,r=null,c=null,l=null,d=null,u=null;return{setTest:function(e){t||(e?s(2960):i(2960))},setMask:function(s){n!==s&&!t&&(e.stencilMask(s),n=s)},setFunc:function(t,n,s){(o!==t||a!==n||r!==s)&&(e.stencilFunc(t,n,s),o=t,a=n,r=s)},setOp:function(t,n,s){(c!==t||l!==n||d!==s)&&(e.stencilOp(t,n,s),c=t,l=n,d=s)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,o=null,a=null,r=null,c=null,l=null,d=null,u=null}}}j=new Z,r=new te,c=new G,T=e.getParameter(34921),p=new Uint8Array(T),o=new Uint8Array(T),P=new Uint8Array(T),d={},M=null,g=null,v=null,b=null,k=null,_=null,y=null,w=null,O=null,x=!1,C=null,E=null,I=null,B=null,H=null,q=e.getParameter(35661),F=!1,u=0,m=e.getParameter(7938),m.indexOf("WebGL")!==-1?(u=parseFloat(/^WebGL ([0-9])/.exec(m)[1]),F=u>=1):m.indexOf("OpenGL ES")!==-1&&(u=parseFloat(/^OpenGL ES ([0-9])/.exec(m)[1]),F=u>=2),a=null,f={},L=new Vector4,D=new Vector4;function $(t,n,s){var o,a=new Uint8Array(4),i=e.createTexture();e.bindTexture(t,i),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(o=0;o<s;o++)e.texImage2D(n+o,0,6408,1,1,0,6408,5121,a);return i}S={},S[3553]=$(3553,3553,1),S[34067]=$(34067,34069,6),j.setClear(0,0,0,1),r.setClear(1),c.setClear(0),s(2929),r.setFunc(LessEqualDepth),R(!1),K(CullFaceBack),s(2884),z(NoBlending);function se(){for(var e=0,t=p.length;e<t;e++)p[e]=0}function Y(e){V(e,0)}function V(n,s){if(p[n]=1,o[n]===0&&(e.enableVertexAttribArray(n),o[n]=1),P[n]!==s){var i=N?e:t.get("ANGLE_instanced_arrays");i[N?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,s),P[n]=s}}function X(){for(var t=0,n=o.length;t!==n;++t)o[t]!==p[t]&&(e.disableVertexAttribArray(t),o[t]=0)}function s(t){d[t]!==!0&&(e.enable(t),d[t]=!0)}function i(t){d[t]!==!1&&(e.disable(t),d[t]=!1)}function J(t){return M!==t&&(e.useProgram(t),M=t,!0)}l={[AddEquation]:32774,[SubtractEquation]:32778,[ReverseSubtractEquation]:32779},N?(l[MinEquation]=32775,l[MaxEquation]=32776):(A=t.get("EXT_blend_minmax"),A!==null&&(l[MinEquation]=A.MIN_EXT,l[MaxEquation]=A.MAX_EXT)),h={[ZeroFactor]:0,[OneFactor]:1,[SrcColorFactor]:768,[SrcAlphaFactor]:770,[SrcAlphaSaturateFactor]:776,[DstColorFactor]:774,[DstAlphaFactor]:772,[OneMinusSrcColorFactor]:769,[OneMinusSrcAlphaFactor]:771,[OneMinusDstColorFactor]:775,[OneMinusDstAlphaFactor]:773};function z(t,n,o,a,r,c,d,u){if(t===NoBlending){g&&(i(3042),g=!1);return}if(g||(s(3042),g=!0),t!==CustomBlending){if(t!==v||u!==x){if((b!==AddEquation||y!==AddEquation)&&(e.blendEquation(32774),b=AddEquation,y=AddEquation),u)switch(t){case NormalBlending:e.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:e.blendFunc(1,1);break;case SubtractiveBlending:e.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}else switch(t){case NormalBlending:e.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:e.blendFunc(770,1);break;case SubtractiveBlending:e.blendFunc(0,769);break;case MultiplyBlending:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t);break}k=null,_=null,w=null,O=null,v=t,x=u}return}r=r||n,c=c||o,d=d||a,(n!==b||r!==y)&&(e.blendEquationSeparate(l[n],l[r]),b=n,y=r),(o!==k||a!==_||c!==w||d!==O)&&(e.blendFuncSeparate(h[o],h[a],h[c],h[d]),k=o,_=a,w=c,O=d),v=t,x=null}function Q(e,t){e.side===DoubleSide?i(2884):s(2884);var o,n=e.side===BackSide;t&&(n=!n),R(n),e.blending===NormalBlending&&e.transparent===!1?z(NoBlending):z(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),r.setFunc(e.depthFunc),r.setTest(e.depthTest),r.setMask(e.depthWrite),j.setMask(e.colorWrite),o=e.stencilWrite,c.setTest(o),o&&(c.setMask(e.stencilWriteMask),c.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),c.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),U(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function R(t){C!==t&&(t?e.frontFace(2304):e.frontFace(2305),C=t)}function K(t){t!==CullFaceNone?(s(2884),t!==E&&(t===CullFaceBack?e.cullFace(1029):t===CullFaceFront?e.cullFace(1028):e.cullFace(1032))):i(2884),E=t}function ee(t){t!==I&&(F&&e.lineWidth(t),I=t)}function U(t,n,o){t?(s(32823),(B!==n||H!==o)&&(e.polygonOffset(n,o),B=n,H=o)):i(32823)}function ne(e){e?s(3089):i(3089)}function W(t){t===void 0&&(t=33984+q-1),a!==t&&(e.activeTexture(t),a=t)}function oe(t,n){a===null&&W();var s=f[a];s===void 0&&(s={type:void 0,texture:void 0},f[a]=s),(s.type!==t||s.texture!==n)&&(e.bindTexture(t,n||S[t]),s.type=t,s.texture=n)}function ie(){var t=f[a];t!==void 0&&t.type!==void 0&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)}function ae(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function re(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function ce(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}}function le(t){L.equals(t)===!1&&(e.scissor(t.x,t.y,t.z,t.w),L.copy(t))}function de(t){D.equals(t)===!1&&(e.viewport(t.x,t.y,t.z,t.w),D.copy(t))}function ue(){for(var t=0;t<o.length;t++)o[t]===1&&(e.disableVertexAttribArray(t),o[t]=0);d={},a=null,f={},M=null,v=null,C=null,E=null,j.reset(),r.reset(),c.reset()}return{buffers:{color:j,depth:r,stencil:c},initAttributes:se,enableAttribute:Y,enableAttributeAndDivisor:V,disableUnusedAttributes:X,enable:s,disable:i,useProgram:J,setBlending:z,setMaterial:Q,setFlipSided:R,setCullFace:K,setLineWidth:ee,setPolygonOffset:U,setScissorTest:ne,activeTexture:W,bindTexture:oe,unbindTexture:ie,compressedTexImage2D:ae,texImage2D:re,texImage3D:ce,scissor:le,viewport:de,reset:ue}}function WebGLTextures(e,t,n,s,o,i,a){var m,f,b,y,w,O,r=o.isWebGL2,F=o.maxTextures,X=o.maxCubemapSize,G=o.maxTextureSize,q=o.maxSamples,_=new WeakMap,M=!1;try{M=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function T(e,t){return M?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function C(e,t,n,s){var o,i,a,c,l,r=1;return(e.width>s||e.height>s)&&(r=s/Math.max(e.width,e.height)),r<1||t===!0?typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap?(c=t?MathUtils.floorPowerOfTwo:Math.floor,o=c(r*e.width),i=c(r*e.height),y===void 0&&(y=T(o,i)),a=n?T(o,i):y,a.width=o,a.height=i,l=a.getContext("2d"),l.drawImage(e,0,0,o,i),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+o+"x"+i+")."),a):("data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e):e}function c(e){return MathUtils.isPowerOfTwo(e.width)&&MathUtils.isPowerOfTwo(e.height)}function N(e){return!r&&(e.wrapS!==ClampToEdgeWrapping||e.wrapT!==ClampToEdgeWrapping||e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter)}function u(e,t){return e.generateMipmaps&&t&&e.minFilter!==NearestFilter&&e.minFilter!==LinearFilter}function d(t,n,o,i){e.generateMipmap(t);var a=s.get(n);a.__maxMipLevel=Math.log(Math.max(o,i))*Math.LOG2E}function l(n,s,o){if(r===!1)return s;if(n!==null){if(e[n]!==void 0)return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var i=s;return s===6403&&(o===5126&&(i=33326),o===5131&&(i=33325),o===5121&&(i=33321)),s===6407&&(o===5126&&(i=34837),o===5131&&(i=34843),o===5121&&(i=32849)),s===6408&&(o===5126&&(i=34836),o===5131&&(i=34842),o===5121&&(i=32856)),i===33325||i===33326||i===34842||i===34836?t.get("EXT_color_buffer_float"):(i===34843||i===34837)&&console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."),i}function A(e){return e===NearestFilter||e===NearestMipmapNearestFilter||e===NearestMipmapLinearFilter?9728:9729}function k(e){var t=e.target;t.removeEventListener("dispose",k),B(t),t.isVideoTexture&&_.delete(t),a.memory.textures--}function x(e){var t=e.target;t.removeEventListener("dispose",x),I(t),a.memory.textures--}function B(t){var n=s.get(t);if(n.__webglInit===void 0)return;e.deleteTexture(n.__webglTexture),s.remove(t)}function I(t){if(n=s.get(t),i=s.get(t.texture),!t)return;if(i.__webglTexture!==void 0&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(o=0;o<6;o++)e.deleteFramebuffer(n.__webglFramebuffer[o]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[o]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);if(t.isWebGLMultiviewRenderTarget){e.deleteTexture(n.__webglColorTexture),e.deleteTexture(n.__webglDepthStencilTexture),a.memory.textures-=2;for(var n,i,o=0,r=n.__webglViewFramebuffers.length;o<r;o++)e.deleteFramebuffer(n.__webglViewFramebuffers[o])}s.remove(t.texture),s.remove(t)}f=0;function H(){f=0}function P(){var e=f;return e>=F&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+F),f+=1,e}function j(e,t){var i,o=s.get(e);if(e.isVideoTexture&&Y(e),e.version>0&&o.__version!==e.version)if(i=e.image,i===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else if(i.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{g(o,e,t);return}n.activeTexture(33984+t),n.bindTexture(3553,o.__webglTexture)}function R(e,t){var o=s.get(e);if(e.version>0&&o.__version!==e.version){g(o,e,t);return}n.activeTexture(33984+t),n.bindTexture(35866,o.__webglTexture)}function L(e,t){var o=s.get(e);if(e.version>0&&o.__version!==e.version){g(o,e,t);return}n.activeTexture(33984+t),n.bindTexture(32879,o.__webglTexture)}function z(t,o){if(t.image.length!==6)return;if(v=s.get(t),t.version>0&&v.__version!==t.version){S(v,t),n.activeTexture(33984+o),n.bindTexture(34067,v.__webglTexture),e.pixelStorei(37440,t.flipY),x=t&&(t.isCompressedTexture||t.image[0].isCompressedTexture),_=t.image[0]&&t.image[0].isDataTexture,g=[];for(a=0;a<6;a++)!x&&!_?g[a]=C(t.image[a],!1,!0,X):g[a]=_?t.image[a].image:t.image[a];var a,m,f,p,g,v,_,w,x,O=g[0],E=c(O)||r,b=i.convert(t.format),y=i.convert(t.type),j=l(t.internalFormat,b,y);if(h(34067,t,E),x){for(a=0;a<6;a++){p=g[a].mipmaps;for(m=0;m<p.length;m++)f=p[m],t.format!==RGBAFormat&&t.format!==RGBFormat?b!==null?n.compressedTexImage2D(34069+a,m,j,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+a,m,j,f.width,f.height,0,b,y,f.data)}v.__maxMipLevel=p.length-1}else{p=t.mipmaps;for(a=0;a<6;a++)if(_){n.texImage2D(34069+a,0,j,g[a].width,g[a].height,0,b,y,g[a].data);for(m=0;m<p.length;m++)f=p[m],w=f.image[a].image,n.texImage2D(34069+a,m+1,j,w.width,w.height,0,b,y,w.data)}else{n.texImage2D(34069+a,0,j,b,y,g[a]);for(m=0;m<p.length;m++)f=p[m],n.texImage2D(34069+a,m+1,j,b,y,f.image[a])}v.__maxMipLevel=p.length}u(t,E)&&d(34067,t,O.width,O.height),v.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(33984+o),n.bindTexture(34067,v.__webglTexture)}function D(e,t){n.activeTexture(33984+t),n.bindTexture(34067,s.get(e).__webglTexture)}m={[RepeatWrapping]:10497,[ClampToEdgeWrapping]:33071,[MirroredRepeatWrapping]:33648},b={[NearestFilter]:9728,[NearestMipmapNearestFilter]:9984,[NearestMipmapLinearFilter]:9986,[LinearFilter]:9729,[LinearMipmapNearestFilter]:9985,[LinearMipmapLinearFilter]:9987};function h(n,i,a){a?(e.texParameteri(n,10242,m[i.wrapS]),e.texParameteri(n,10243,m[i.wrapT]),(n===32879||n===35866)&&e.texParameteri(n,32882,m[i.wrapR]),e.texParameteri(n,10240,b[i.magFilter]),e.texParameteri(n,10241,b[i.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),(n===32879||n===35866)&&e.texParameteri(n,32882,33071),(i.wrapS!==ClampToEdgeWrapping||i.wrapT!==ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,A(i.magFilter)),e.texParameteri(n,10241,A(i.minFilter)),i.minFilter!==NearestFilter&&i.minFilter!==LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));var c=t.get("EXT_texture_filter_anisotropic");if(c){if(i.type===FloatType&&t.get("OES_texture_float_linear")===null)return;if(i.type===HalfFloatType&&(r||t.get("OES_texture_half_float_linear"))===null)return;(i.anisotropy>1||s.get(i).__currentAnisotropy)&&(e.texParameterf(n,c.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(i.anisotropy,o.getMaxAnisotropy())),s.get(i).__currentAnisotropy=i.anisotropy)}}function S(t,n){t.__webglInit===void 0&&(t.__webglInit=!0,n.addEventListener("dispose",k),t.__webglTexture=e.createTexture(),a.memory.textures++)}function g(t,s,o){j=3553,s.isDataTexture2DArray&&(j=35866),s.isDataTexture3D&&(j=32879),S(t,s),n.activeTexture(33984+o),n.bindTexture(j,t.__webglTexture),e.pixelStorei(37440,s.flipY),e.pixelStorei(37441,s.premultiplyAlpha),e.pixelStorei(3317,s.unpackAlignment);var m,p,g,j,y,w=N(s)&&c(s.image)===!1,a=C(s.image,w,!1,G),_=c(a)||r,b=i.convert(s.format),v=i.convert(s.type),f=l(s.internalFormat,b,v);if(h(j,s,_),g=s.mipmaps,s.isDepthTexture){if(f=6402,s.type===FloatType){if(r===!1)throw new Error("Float Depth Texture only supported in WebGL2.0");f=36012}else r&&(f=33189);s.format===DepthFormat&&f===6402&&s.type!==UnsignedShortType&&s.type!==UnsignedIntType&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),s.type=UnsignedShortType,v=i.convert(s.type)),s.format===DepthStencilFormat&&(f=34041,s.type!==UnsignedInt248Type&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),s.type=UnsignedInt248Type,v=i.convert(s.type))),n.texImage2D(3553,0,f,a.width,a.height,0,b,v,null)}else if(s.isDataTexture)if(g.length>0&&_){for(m=0,y=g.length;m<y;m++)p=g[m],n.texImage2D(3553,m,f,p.width,p.height,0,b,v,p.data);s.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,f,a.width,a.height,0,b,v,a.data),t.__maxMipLevel=0;else if(s.isCompressedTexture){for(m=0,y=g.length;m<y;m++)p=g[m],s.format!==RGBAFormat&&s.format!==RGBFormat?b!==null?n.compressedTexImage2D(3553,m,f,p.width,p.height,0,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,m,f,p.width,p.height,0,b,v,p.data);t.__maxMipLevel=g.length-1}else if(s.isDataTexture2DArray)n.texImage3D(35866,0,f,a.width,a.height,a.depth,0,b,v,a.data),t.__maxMipLevel=0;else if(s.isDataTexture3D)n.texImage3D(32879,0,f,a.width,a.height,a.depth,0,b,v,a.data),t.__maxMipLevel=0;else if(g.length>0&&_){for(m=0,y=g.length;m<y;m++)p=g[m],n.texImage2D(3553,m,f,b,v,p);s.generateMipmaps=!1,t.__maxMipLevel=g.length-1}else n.texImage2D(3553,0,f,b,v,a),t.__maxMipLevel=0;u(s,_)&&d(j,s,a.width,a.height),t.__version=s.version,s.onUpdate&&s.onUpdate(s)}function E(t,o,a,r){var c=i.convert(o.texture.format),d=i.convert(o.texture.type),u=l(o.texture.internalFormat,c,d);n.texImage2D(r,0,u,o.width,o.height,0,c,d,null),e.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,a,r,s.get(o.texture).__webglTexture,0),e.bindFramebuffer(36160,null)}function v(t,n,s){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){if(s){var a,r,c,o=p(n);e.renderbufferStorageMultisample(36161,o,33189,n.width,n.height)}else e.renderbufferStorage(36161,33189,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else n.depthBuffer&&n.stencilBuffer?(s?(o=p(n),e.renderbufferStorageMultisample(36161,o,35056,n.width,n.height)):e.renderbufferStorage(36161,34041,n.width,n.height),e.framebufferRenderbuffer(36160,33306,36161,t)):(r=i.convert(n.texture.format),c=i.convert(n.texture.type),a=l(n.texture.internalFormat,r,c),s?(o=p(n),e.renderbufferStorageMultisample(36161,o,a,n.width,n.height)):e.renderbufferStorage(36161,a,n.width,n.height));e.bindRenderbuffer(36161,null)}function V(t,n){var o,i=n&&n.isWebGLCubeRenderTarget;if(i)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,t),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if((!s.get(n.depthTexture).__webglTexture||n.depthTexture.image.width!==n.width||n.depthTexture.image.height!==n.height)&&(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),j(n.depthTexture,0),o=s.get(n.depthTexture).__webglTexture,n.depthTexture.format===DepthFormat)e.framebufferTexture2D(36160,36096,3553,o,0);else if(n.depthTexture.format===DepthStencilFormat)e.framebufferTexture2D(36160,33306,3553,o,0);else throw new Error("Unknown depthTexture format")}function $(t){var o,n=s.get(t),i=t.isWebGLCubeRenderTarget===!0;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");V(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(o=0;o<6;o++)e.bindFramebuffer(36160,n.__webglFramebuffer[o]),n.__webglDepthbuffer[o]=e.createRenderbuffer(),v(n.__webglDepthbuffer[o],t)}else e.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),v(n.__webglDepthbuffer,t);e.bindFramebuffer(36160,null)}function W(o){var f,g,b,j,y,_,w,O,C,k,A,M,F,T,z,D,m=s.get(o),S=s.get(o.texture);if(o.addEventListener("dispose",x),S.__webglTexture=e.createTexture(),a.memory.textures++,A=o.isWebGLCubeRenderTarget===!0,D=o.isWebGLMultisampleRenderTarget===!0,C=o.isWebGLMultiviewRenderTarget===!0,j=c(o)||r,A){m.__webglFramebuffer=[];for(f=0;f<6;f++)m.__webglFramebuffer[f]=e.createFramebuffer()}else if(m.__webglFramebuffer=e.createFramebuffer(),D)r?(m.__webglMultisampledFramebuffer=e.createFramebuffer(),m.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,m.__webglColorRenderbuffer),z=i.convert(o.texture.format),M=i.convert(o.texture.type),F=l(o.texture.internalFormat,z,M),T=p(o),e.renderbufferStorageMultisample(36161,T,F,o.width,o.height),e.bindFramebuffer(36160,m.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,m.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),o.depthBuffer&&(m.__webglDepthRenderbuffer=e.createRenderbuffer(),v(m.__webglDepthRenderbuffer,o,!0)),e.bindFramebuffer(36160,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");else if(C){O=o.width,w=o.height,g=o.numViews,e.bindFramebuffer(36160,m.__webglFramebuffer),k=t.get("OVR_multiview2"),a.memory.textures+=2,b=e.createTexture(),e.bindTexture(35866,b),e.texParameteri(35866,10240,9728),e.texParameteri(35866,10241,9728),e.texImage3D(35866,0,32856,O,w,g,0,6408,5121,null),k.framebufferTextureMultiviewOVR(36160,36064,b,0,0,g),_=e.createTexture(),e.bindTexture(35866,_),e.texParameteri(35866,10240,9728),e.texParameteri(35866,10241,9728),e.texImage3D(35866,0,35056,O,w,g,0,34041,34042,null),k.framebufferTextureMultiviewOVR(36160,33306,_,0,0,g),y=new Array(g);for(f=0;f<g;++f)y[f]=e.createFramebuffer(),e.bindFramebuffer(36160,y[f]),e.framebufferTextureLayer(36160,36064,b,0,f);m.__webglColorTexture=b,m.__webglDepthStencilTexture=_,m.__webglViewFramebuffers=y,e.bindFramebuffer(36160,null),e.bindTexture(35866,null)}if(A){n.bindTexture(34067,S.__webglTexture),h(34067,o.texture,j);for(f=0;f<6;f++)E(m.__webglFramebuffer[f],o,36064,34069+f);u(o.texture,j)&&d(34067,o.texture,o.width,o.height),n.bindTexture(34067,null)}else C||(n.bindTexture(3553,S.__webglTexture),h(3553,o.texture,j),E(m.__webglFramebuffer,o,36064,3553),u(o.texture,j)&&d(3553,o.texture,o.width,o.height),n.bindTexture(3553,null));o.depthBuffer&&$(o)}function U(e){var t,i,o=e.texture,a=c(e)||r;u(o,a)&&(t=e.isWebGLCubeRenderTarget?34067:3553,i=s.get(o).__webglTexture,n.bindTexture(t,i),d(t,o,e.width,e.height),n.bindTexture(t,null))}function K(t){if(t.isWebGLMultisampleRenderTarget)if(r){var n,o,i,a=s.get(t);e.bindFramebuffer(36008,a.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,a.__webglFramebuffer),o=t.width,i=t.height,n=16384,t.depthBuffer&&(n|=256),t.stencilBuffer&&(n|=1024),e.blitFramebuffer(0,0,o,i,0,0,o,i,n,9728)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")}function p(e){return r&&e.isWebGLMultisampleRenderTarget?Math.min(q,e.samples):0}function Y(e){var t=a.render.frame;_.get(e)!==t&&(_.set(e,t),e.update())}O=!1,w=!1;function Q(e,t){e&&e.isWebGLRenderTarget&&(O===!1&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),j(e,t)}function Z(e,t){e&&e.isWebGLCubeRenderTarget&&(w===!1&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),w=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&e.image.length===6?z(e,t):D(e,t)}this.allocateTextureUnit=P,this.resetTextureUnits=H,this.setTexture2D=j,this.setTexture2DArray=R,this.setTexture3D=L,this.setTextureCube=z,this.setTextureCubeDynamic=D,this.setupRenderTarget=W,this.updateRenderTargetMipmap=U,this.updateMultisampleRenderTarget=K,this.safeSetTexture2D=Q,this.safeSetTextureCube=Z}function WebGLUtils(e,t,n){var s=n.isWebGL2;function o(e){var n;if(e===UnsignedByteType)return 5121;if(e===UnsignedShort4444Type)return 32819;if(e===UnsignedShort5551Type)return 32820;if(e===UnsignedShort565Type)return 33635;if(e===ByteType)return 5120;if(e===ShortType)return 5122;if(e===UnsignedShortType)return 5123;if(e===IntType)return 5124;if(e===UnsignedIntType)return 5125;if(e===FloatType)return 5126;if(e===HalfFloatType)return s?5131:(n=t.get("OES_texture_half_float"),n!==null?n.HALF_FLOAT_OES:null);if(e===AlphaFormat)return 6406;if(e===RGBFormat)return 6407;if(e===RGBAFormat)return 6408;if(e===LuminanceFormat)return 6409;if(e===LuminanceAlphaFormat)return 6410;if(e===DepthFormat)return 6402;if(e===DepthStencilFormat)return 34041;if(e===RedFormat)return 6403;if(e===RedIntegerFormat)return 36244;if(e===RGFormat)return 33319;if(e===RGIntegerFormat)return 33320;if(e===RGBIntegerFormat)return 36248;if(e===RGBAIntegerFormat)return 36249;if(e===RGB_S3TC_DXT1_Format||e===RGBA_S3TC_DXT1_Format||e===RGBA_S3TC_DXT3_Format||e===RGBA_S3TC_DXT5_Format)if(n=t.get("WEBGL_compressed_texture_s3tc"),n!==null){{if(e===RGB_S3TC_DXT1_Format)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT1_Format)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===RGBA_S3TC_DXT3_Format)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===RGBA_S3TC_DXT5_Format)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}}else return null;if(e===RGB_PVRTC_4BPPV1_Format||e===RGB_PVRTC_2BPPV1_Format||e===RGBA_PVRTC_4BPPV1_Format||e===RGBA_PVRTC_2BPPV1_Format)if(n=t.get("WEBGL_compressed_texture_pvrtc"),n!==null){{if(e===RGB_PVRTC_4BPPV1_Format)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===RGB_PVRTC_2BPPV1_Format)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===RGBA_PVRTC_4BPPV1_Format)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===RGBA_PVRTC_2BPPV1_Format)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}}else return null;if(e===RGB_ETC1_Format)return n=t.get("WEBGL_compressed_texture_etc1"),n!==null?n.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===RGBA_ASTC_4x4_Format||e===RGBA_ASTC_5x4_Format||e===RGBA_ASTC_5x5_Format||e===RGBA_ASTC_6x5_Format||e===RGBA_ASTC_6x6_Format||e===RGBA_ASTC_8x5_Format||e===RGBA_ASTC_8x6_Format||e===RGBA_ASTC_8x8_Format||e===RGBA_ASTC_10x5_Format||e===RGBA_ASTC_10x6_Format||e===RGBA_ASTC_10x8_Format||e===RGBA_ASTC_10x10_Format||e===RGBA_ASTC_12x10_Format||e===RGBA_ASTC_12x12_Format)return n=t.get("WEBGL_compressed_texture_astc"),n!==null?e:null;if(e===UnsignedInt248Type)return s?34042:(n=t.get("WEBGL_depth_texture"),n!==null?n.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:o}}function WebGLMultiviewRenderTarget(e,t,n,s){WebGLRenderTarget.call(this,e,t,s),this.depthBuffer=!1,this.stencilBuffer=!1,this.numViews=n}WebGLMultiviewRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultiviewRenderTarget,isWebGLMultiviewRenderTarget:!0,copy:function(e){return WebGLRenderTarget.prototype.copy.call(this,e),this.numViews=e.numViews,this},setNumViews:function(e){return this.numViews!==e&&(this.numViews=e,this.dispose()),this}});function WebGLMultiview(e,t){var n,s,o,i,a,r,l,u=2,f=e.extensions,p=e.properties,c=0;function m(){if(a===void 0){var e,i=f.get("OVR_multiview2");if(a=i!==null&&t.getContextAttributes().antialias===!1,a){c=t.getParameter(i.MAX_VIEWS_OVR),s=new WebGLMultiviewRenderTarget(0,0,u),o=new Vector2,n=[],r=[],l=[];for(e=0;e<c;e++)n[e]=new Matrix4,r[e]=new Matrix3}}return a}function d(e){return e.isArrayCamera?e.cameras:(l[0]=e,l)}function h(e,s){for(var i=d(e),o=0;o<i.length;o++)n[o].copy(i[o].projectionMatrix);s.setValue(t,"projectionMatrices",n)}function g(e,s){for(var i=d(e),o=0;o<i.length;o++)n[o].copy(i[o].matrixWorldInverse);s.setValue(t,"viewMatrices",n)}function v(e,s,o){for(var a=d(s),i=0;i<a.length;i++)n[i].multiplyMatrices(a[i].matrixWorldInverse,e.matrixWorld),r[i].getNormalMatrix(n[i]);o.setValue(t,"modelViewMatrices",n),o.setValue(t,"normalMatrices",r)}function b(e){if(e.isArrayCamera===void 0)return!0;if(t=e.cameras,t.length>c)return!1;for(var t,n=1,s=t.length;n<s;n++)if(t[0].viewport.z!==t[n].viewport.z||t[0].viewport.w!==t[n].viewport.w)return!1;return!0}function j(t){if(i?o.set(i.width,i.height):e.getDrawingBufferSize(o),t.isArrayCamera){var n=t.cameras[0].viewport;s.setSize(n.z,n.w),s.setNumViews(t.cameras.length)}else s.setSize(o.x,o.y),s.setNumViews(u)}function y(t){if(b(t)===!1)return;i=e.getRenderTarget(),j(t),e.setRenderTarget(s)}function _(t){if(s!==e.getRenderTarget())return;e.setRenderTarget(i),w(t)}function w(e){var n,i,r,c,h,m,a=s,f=a.numViews,l=p.get(a).__webglViewFramebuffers,d=a.width,u=a.height;if(e.isArrayCamera)for(n=0;n<f;n++)i=e.cameras[n].viewport,r=i.x,c=i.y,h=r+i.z,m=c+i.w,t.bindFramebuffer(36008,l[n]),t.blitFramebuffer(0,0,d,u,r,c,h,m,16384,9728);else t.bindFramebuffer(36008,l[0]),t.blitFramebuffer(0,0,d,u,0,0,o.x,o.y,16384,9728)}this.isAvailable=m,this.attachCamera=y,this.detachCamera=_,this.updateCameraProjectionMatricesUniform=h,this.updateCameraViewMatricesUniform=g,this.updateObjectMatricesUniforms=v}function ArrayCamera(e){PerspectiveCamera.call(this),this.cameras=e||[]}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:!0});function Group(){Object3D.call(this),this.type="Group"}Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:!0});function WebXRManager(e,t){var s,a,d,u,m,f,p,g,h=this,n=null,l=null,j="local-floor",v=null,o=[],i=new Map,c=new PerspectiveCamera;c.layers.enable(1),c.viewport=new Vector4,a=new PerspectiveCamera,a.layers.enable(2),a.viewport=new Vector4,s=new ArrayCamera([c,a]),s.layers.enable(1),s.layers.enable(2),m=null,f=null,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){var t=o[e];return t===void 0&&(t={},o[e]=t),t.targetRay===void 0&&(t.targetRay=new Group,t.targetRay.matrixAutoUpdate=!1,t.targetRay.visible=!1),t.targetRay},this.getControllerGrip=function(e){var t=o[e];return t===void 0&&(t={},o[e]=t),t.grip===void 0&&(t.grip=new Group,t.grip.matrixAutoUpdate=!1,t.grip.visible=!1),t.grip};function r(e){var t=i.get(e.inputSource);t&&(t.targetRay&&t.targetRay.dispatchEvent({type:e.type}),t.grip&&t.grip.dispatchEvent({type:e.type}))}function y(){i.forEach(function(e,t){e.targetRay&&(e.targetRay.dispatchEvent({type:"disconnected",data:t}),e.targetRay.visible=!1),e.grip&&(e.grip.dispatchEvent({type:"disconnected",data:t}),e.grip.visible=!1)}),i.clear(),e.setFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),d.stop(),h.isPresenting=!1,h.dispatchEvent({type:"sessionend"})}function _(e){l=e,d.setContext(n),d.start(),h.isPresenting=!0,h.dispatchEvent({type:"sessionstart"})}this.setFramebufferScaleFactor=function(){},this.setReferenceSpaceType=function(e){j=e},this.getReferenceSpace=function(){return l},this.getSession=function(){return n},this.setSession=function(e){if(n=e,n!==null){n.addEventListener("select",r),n.addEventListener("selectstart",r),n.addEventListener("selectend",r),n.addEventListener("squeeze",r),n.addEventListener("squeezestart",r),n.addEventListener("squeezeend",r),n.addEventListener("end",y);var s=t.getContextAttributes(),o={antialias:s.antialias,alpha:s.alpha,depth:s.depth,stencil:s.stencil},i=new XRWebGLLayer(n,t,o);n.updateRenderState({baseLayer:i}),n.requestReferenceSpace(j).then(_),n.addEventListener("inputsourceschange",w)}};function w(e){for(var s,a,r=n.inputSources,t=0;t<o.length;t++)i.set(r[t],o[t]);for(t=0;t<e.removed.length;t++)a=e.removed[t],s=i.get(a),s&&(s.targetRay&&s.targetRay.dispatchEvent({type:"disconnected",data:a}),s.grip&&s.grip.dispatchEvent({type:"disconnected",data:a}),i.delete(a));for(t=0;t<e.added.length;t++)a=e.added[t],s=i.get(a),s&&(s.targetRay&&s.targetRay.dispatchEvent({type:"connected",data:a}),s.grip&&s.grip.dispatchEvent({type:"connected",data:a}))}p=new Vector3,g=new Vector3;function O(e,t,n){p.setFromMatrixPosition(t.matrixWorld),g.setFromMatrixPosition(n.matrixWorld);var i,a,f,v,b,j,h=p.distanceTo(g),s=t.projectionMatrix.elements,m=n.projectionMatrix.elements,l=s[14]/(s[10]-1),c=s[14]/(s[10]+1),w=(s[9]+1)/s[5],O=(s[9]-1)/s[5],d=(s[8]-1)/s[0],u=(m[8]+1)/m[0],y=l*d,_=l*u,o=h/(-d+u),r=o*-d;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(r),e.translateZ(o),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.getInverse(e.matrixWorld),a=l+o,i=c+o,f=y-r,v=_+(h-r),b=w*c/i*a,j=O*c/i*a,e.projectionMatrix.makePerspective(f,v,b,j,a,i)}function b(e,t){t===null?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.getInverse(e.matrixWorld)}this.getCamera=function(e){s.near=a.near=c.near=e.near,s.far=a.far=c.far=e.far,(m!==s.near||f!==s.far)&&(n.updateRenderState({depthNear:s.near,depthFar:s.far}),m=s.near,f=s.far),o=e.parent,i=s.cameras,b(s,o);for(t=0;t<i.length;t++)b(i[t],o);e.matrixWorld.copy(s.matrixWorld),r=e.children;for(var o,i,r,t=0,l=r.length;t<l;t++)r[t].updateMatrixWorld(!0);return O(s,c,a),s},u=null;function x(t,i){if(v=i.getViewerPose(l),v!==null){var a,r,c,d,h,m,f,p,j,g=v.views,b=n.renderState.baseLayer;e.setFramebuffer(b.framebuffer);for(r=0;r<g.length;r++)p=g[r],c=b.getViewport(p),d=s.cameras[r],d.matrix.fromArray(p.transform.matrix),d.projectionMatrix.fromArray(p.projectionMatrix),d.viewport.set(c.x,c.y,c.width,c.height),r===0&&s.matrix.copy(d.matrix)}j=n.inputSources;for(r=0;r<o.length;r++)a=o[r],h=j[r],m=null,f=null,h&&(a.targetRay&&(m=i.getPose(h.targetRaySpace,l),m!==null&&(a.targetRay.matrix.fromArray(m.transform.matrix),a.targetRay.matrix.decompose(a.targetRay.position,a.targetRay.rotation,a.targetRay.scale))),a.grip&&h.gripSpace&&(f=i.getPose(h.gripSpace,l),f!==null&&(a.grip.matrix.fromArray(f.transform.matrix),a.grip.matrix.decompose(a.grip.position,a.grip.rotation,a.grip.scale)))),a.targetRay&&(a.targetRay.visible=m!==null),a.grip&&(a.grip.visible=f!==null);u&&u(t,i)}d=new WebGLAnimation,d.setAnimationLoop(x),this.setAnimationLoop=function(e){u=e},this.dispose=function(){}}Object.assign(WebXRManager.prototype,EventDispatcher.prototype);function WebGLRenderer(e){e=e||{};var a=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),ke=e.context!==void 0?e.context:null,Ce=e.alpha!==void 0&&e.alpha,Oe=e.depth===void 0||e.depth,xe=e.stencil===void 0||e.stencil,Ee=e.antialias!==void 0&&e.antialias,ne=e.premultipliedAlpha===void 0||e.premultipliedAlpha,Le=e.preserveDrawingBuffer!==void 0&&e.preserveDrawingBuffer,we=e.powerPreference!==void 0?e.powerPreference:"default",_e=e.failIfMajorPerformanceCaveat!==void 0&&e.failIfMajorPerformanceCaveat,f=null,i=null;this.domElement=a,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=LinearEncoding,this.physicallyCorrectLights=!1,this.toneMapping=LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var t,n,o,r,l,d,m,p,g,j,O,E,A,S,M,N,R,I,W,Q,Z,s=this,X=!1,G=null,he=0,fe=0,y=null,P=null,V=-1,u={geometry:null,program:null,wireframe:!1},k=null,L=null,x=new Vector4,z=new Vector4,U=null,C=a.width,w=a.height,c=1,le=null,ce=null,T=new Vector4(0,0,C,w),F=new Vector4(0,0,C,w),Y=!1,q=new Frustum,h=new WebGLClipping,H=!1,$=!1,D=new Matrix4,_=new Vector3,se,oe,ie,ge;function de(){return y===null?c:1}try{if(W={alpha:Ce,depth:Oe,stencil:xe,antialias:Ee,premultipliedAlpha:ne,preserveDrawingBuffer:Le,powerPreference:we,failIfMajorPerformanceCaveat:_e,xrCompatible:!0},a.addEventListener("webglcontextlost",ue,!1),a.addEventListener("webglcontextrestored",J,!1),t=ke||a.getContext("webgl",W)||a.getContext("experimental-webgl",W),t===null)throw a.getContext("webgl")!==null?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");t.getShaderPrecisionFormat===void 0&&(t.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function re(){o=new WebGLExtensions(t),r=new WebGLCapabilities(t,o,e),r.isWebGL2===!1&&(o.get("WEBGL_depth_texture"),o.get("OES_texture_float"),o.get("OES_texture_half_float"),o.get("OES_texture_half_float_linear"),o.get("OES_standard_derivatives"),o.get("OES_element_index_uint"),o.get("ANGLE_instanced_arrays")),o.get("OES_texture_float_linear"),g=new WebGLUtils(t,o,r),n=new WebGLState(t,o,r),n.scissor(z.copy(F).multiplyScalar(c).floor()),n.viewport(x.copy(T).multiplyScalar(c).floor()),p=new WebGLInfo(t),l=new WebGLProperties,m=new WebGLTextures(t,o,n,l,r,g,p),E=new WebGLAttributes(t,r),Q=new WebGLGeometries(t,E,p),M=new WebGLObjects(t,Q,E,p),se=new WebGLMorphtargets(t),S=new WebGLPrograms(s,o,r),I=new WebGLRenderLists,A=new WebGLRenderStates,O=new WebGLBackground(s,n,M,ne),oe=new WebGLBufferRenderer(t,o,p,r),ie=new WebGLIndexedBufferRenderer(t,o,p,r),p.programs=S.programs,s.capabilities=r,s.extensions=o,s.properties=l,s.renderLists=I,s.state=n,s.info=p}re(),d=new WebXRManager(s,t),this.xr=d,j=new WebGLMultiview(s,t),Z=new WebGLShadowMap(s,M,r.maxTextureSize),this.shadowMap=Z,this.getContext=function(){return t},this.getContextAttributes=function(){return t.getContextAttributes()},this.forceContextLoss=function(){var e=o.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=o.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return c},this.setPixelRatio=function(e){if(e===void 0)return;c=e,this.setSize(C,w,!1)},this.getSize=function(e){return e===void 0&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Vector2),e.set(C,w)},this.setSize=function(e,t,n){if(d.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}C=e,w=t,a.width=Math.floor(e*c),a.height=Math.floor(t*c),n!==!1&&(a.style.width=e+"px",a.style.height=t+"px"),this.setViewport(0,0,e,t)},this.getDrawingBufferSize=function(e){return e===void 0&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Vector2),e.set(C*c,w*c).floor()},this.setDrawingBufferSize=function(e,t,n){C=e,w=t,c=n,a.width=Math.floor(e*n),a.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e===void 0&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new Vector4),e.copy(x)},this.getViewport=function(e){return e.copy(T)},this.setViewport=function(e,t,s,o){e.isVector4?T.set(e.x,e.y,e.z,e.w):T.set(e,t,s,o),n.viewport(x.copy(T).multiplyScalar(c).floor())},this.getScissor=function(e){return e.copy(F)},this.setScissor=function(e,t,s,o){e.isVector4?F.set(e.x,e.y,e.z,e.w):F.set(e,t,s,o),n.scissor(z.copy(F).multiplyScalar(c).floor())},this.getScissorTest=function(){return Y},this.setScissorTest=function(e){n.setScissorTest(Y=e)},this.setOpaqueSort=function(e){le=e},this.setTransparentSort=function(e){ce=e},this.getClearColor=function(){return O.getClearColor()},this.setClearColor=function(){O.setClearColor.apply(O,arguments)},this.getClearAlpha=function(){return O.getClearAlpha()},this.setClearAlpha=function(){O.setClearAlpha.apply(O,arguments)},this.clear=function(e,n,s){var o=0;(e===void 0||e)&&(o|=16384),(n===void 0||n)&&(o|=256),(s===void 0||s)&&(o|=1024),t.clear(o)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){a.removeEventListener("webglcontextlost",ue,!1),a.removeEventListener("webglcontextrestored",J,!1),I.dispose(),A.dispose(),l.dispose(),M.dispose(),d.dispose(),N.stop()};function ue(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),X=!0}function J(){console.log("THREE.WebGLRenderer: Context Restored."),X=!1,re()}function me(e){var t=e.target;t.removeEventListener("dispose",me),Se(t)}function Se(e){pe(e),l.remove(e)}function pe(e){var t=l.get(e).program;e.program=void 0,t!==void 0&&S.releaseProgram(t)}function je(e,t){e.render(function(e){s.renderBufferImmediate(e,t)})}this.renderBufferImmediate=function(e,s){n.initAttributes();var i,o=l.get(e);e.hasPositions&&!o.position&&(o.position=t.createBuffer()),e.hasNormals&&!o.normal&&(o.normal=t.createBuffer()),e.hasUvs&&!o.uv&&(o.uv=t.createBuffer()),e.hasColors&&!o.color&&(o.color=t.createBuffer()),i=s.getAttributes(),e.hasPositions&&(t.bindBuffer(34962,o.position),t.bufferData(34962,e.positionArray,35048),n.enableAttribute(i.position),t.vertexAttribPointer(i.position,3,5126,!1,0,0)),e.hasNormals&&(t.bindBuffer(34962,o.normal),t.bufferData(34962,e.normalArray,35048),n.enableAttribute(i.normal),t.vertexAttribPointer(i.normal,3,5126,!1,0,0)),e.hasUvs&&(t.bindBuffer(34962,o.uv),t.bufferData(34962,e.uvArray,35048),n.enableAttribute(i.uv),t.vertexAttribPointer(i.uv,2,5126,!1,0,0)),e.hasColors&&(t.bindBuffer(34962,o.color),t.bufferData(34962,e.colorArray,35048),n.enableAttribute(i.color),t.vertexAttribPointer(i.color,3,5126,!1,0,0)),n.disableUnusedAttributes(),t.drawArrays(4,0,e.count),e.count=0},ge=new Scene,this.renderBufferDirect=function(e,s,o,i,a,r){s===null&&(s=ge);var c,l,d,h,m,p,g,v,b,j,y,_,w,O,x,C=a.isMesh&&a.matrixWorld.determinant()<0,f=ae(e,s,i,a);if(n.setMaterial(i,C),p=!1,(u.geometry!==o.id||u.program!==f.id||u.wireframe!==(i.wireframe===!0))&&(u.geometry=o.id,u.program=f.id,u.wireframe=i.wireframe===!0,p=!0),(i.morphTargets||i.morphNormals)&&(se.update(a,o,i,f),p=!0),l=o.index,g=o.attributes.position,l===null){if(g===void 0||g.count===0)return}else if(l.count===0)return;if(d=1,i.wireframe===!0&&(l=Q.getWireframeAttribute(o),d=2),c=oe,l!==null&&(b=E.get(l),c=ie,c.setIndex(b)),p&&(Me(a,o,i,f),l!==null&&t.bindBuffer(34963,b.buffer)),_=l!==null?l.count:g.count,j=o.drawRange.start*d,x=o.drawRange.count*d,y=r!==null?r.start*d:0,w=r!==null?r.count*d:1/0,h=Math.max(j,y),O=Math.min(_,j+x,y+w)-1,m=Math.max(0,O-h+1),m===0)return;a.isMesh?i.wireframe===!0?(n.setLineWidth(i.wireframeLinewidth*de()),c.setMode(1)):c.setMode(4):a.isLine?(v=i.linewidth,v===void 0&&(v=1),n.setLineWidth(v*de()),a.isLineSegments?c.setMode(1):a.isLineLoop?c.setMode(2):c.setMode(3)):a.isPoints?c.setMode(0):a.isSprite&&c.setMode(4),a.isInstancedMesh?c.renderInstances(o,h,m,a.count):o.isInstancedBufferGeometry?c.renderInstances(o,h,m,o.maxInstancedCount):c.render(h,m)};function Me(e,s,i,a){if(r.isWebGL2===!1&&(e.isInstancedMesh||s.isInstancedBufferGeometry)&&o.get("ANGLE_instanced_arrays")===null)return;n.initAttributes();var c,l,d,u,h,m,f,p,g,v,b,y,_,O=s.attributes,j=a.getAttributes(),w=i.defaultAttributeValues;for(p in j)if(c=j[p],c>=0)if(l=O[p],l!==void 0){if(v=l.normalized,g=l.itemSize,d=E.get(l),d===void 0)continue;f=d.buffer,u=d.type,b=d.bytesPerElement,l.isInterleavedBufferAttribute?(m=l.data,y=m.stride,_=l.offset,m&&m.isInstancedInterleavedBuffer?(n.enableAttributeAndDivisor(c,m.meshPerAttribute),s.maxInstancedCount===void 0&&(s.maxInstancedCount=m.meshPerAttribute*m.count)):n.enableAttribute(c),t.bindBuffer(34962,f),t.vertexAttribPointer(c,g,u,v,y*b,_*b)):(l.isInstancedBufferAttribute?(n.enableAttributeAndDivisor(c,l.meshPerAttribute),s.maxInstancedCount===void 0&&(s.maxInstancedCount=l.meshPerAttribute*l.count)):n.enableAttribute(c),t.bindBuffer(34962,f),t.vertexAttribPointer(c,g,u,v,0,0))}else if(p==="instanceMatrix"){if(d=E.get(e.instanceMatrix),d===void 0)continue;f=d.buffer,u=d.type,n.enableAttributeAndDivisor(c+0,1),n.enableAttributeAndDivisor(c+1,1),n.enableAttributeAndDivisor(c+2,1),n.enableAttributeAndDivisor(c+3,1),t.bindBuffer(34962,f),t.vertexAttribPointer(c+0,4,u,!1,64,0),t.vertexAttribPointer(c+1,4,u,!1,64,16),t.vertexAttribPointer(c+2,4,u,!1,64,32),t.vertexAttribPointer(c+3,4,u,!1,64,48)}else if(w!==void 0&&(h=w[p],h!==void 0))switch(h.length){case 2:t.vertexAttrib2fv(c,h);break;case 3:t.vertexAttrib3fv(c,h);break;case 4:t.vertexAttrib4fv(c,h);break;default:t.vertexAttrib1fv(c,h)}n.disableUnusedAttributes()}this.compile=function(e,t){i=A.get(e,t),i.init(),e.traverse(function(e){e.isLight&&(i.pushLight(e),e.castShadow&&i.pushShadow(e))}),i.setupLights(t);var n={};e.traverse(function(t){if(t.material)if(Array.isArray(t.material))for(var s=0;s<t.material.length;s++)t.material[s].uuid in n===!1&&(b(t.material[s],e,t),n[t.material[s].uuid]=!0);else t.material.uuid in n===!1&&(b(t.material,e,t),n[t.material.uuid]=!0)})},R=null;function ye(e){if(d.isPresenting)return;R&&R(e)}N=new WebGLAnimation,N.setAnimationLoop(ye),typeof window!="undefined"&&N.setContext(window),this.setAnimationLoop=function(e){R=e,d.setAnimationLoop(e),N.start()},this.render=function(e,t){if(arguments[2]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),r=arguments[2]),arguments[3]!==void 0&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),l=arguments[3]),!t||!t.isCamera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(X)return;u.geometry=null,u.program=null,u.wireframe=!1,V=-1,k=null,e.autoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.updateMatrixWorld(),d.enabled&&d.isPresenting&&(t=d.getCamera(t)),i=A.get(e,t),i.init(),e.onBeforeRender(s,e,t,r||y),D.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),q.setFromProjectionMatrix(D),$=this.localClippingEnabled,H=h.init(this.clippingPlanes,$,t),f=I.get(e,t),f.init(),ee(e,t,0,s.sortObjects),s.sortObjects===!0&&f.sort(le,ce),H&&h.beginShadows();var o,a,r,c,l,p=i.state.shadowsArray;Z.render(p,e,t),i.setupLights(t),H&&h.endShadows(),this.info.autoReset&&this.info.reset(),r!==void 0&&this.setRenderTarget(r),d.enabled&&j.isAvailable()&&j.attachCamera(t),O.render(f,e,t,l),o=f.opaque,a=f.transparent,e.overrideMaterial?(c=e.overrideMaterial,o.length&&B(o,e,t,c),a.length&&B(a,e,t,c)):(o.length&&B(o,e,t),a.length&&B(a,e,t)),e.onAfterRender(s,e,t),y!==null&&(m.updateRenderTargetMipmap(y),m.updateMultisampleRenderTarget(y)),n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),n.setPolygonOffset(!1),d.enabled&&j.isAvailable()&&j.detachCamera(t),f=null,i=null};function ee(e,t,n,s){if(e.visible===!1)return;if(m=e.layers.test(t.layers),m)if(e.isGroup)n=e.renderOrder;else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)i.pushLight(e),e.castShadow&&i.pushShadow(e);else if(e.isSprite)(!e.frustumCulled||q.intersectsSprite(e))&&(s&&_.setFromMatrixPosition(e.matrixWorld).applyMatrix4(D),r=M.update(e),o=e.material,o.visible&&f.push(e,r,o,n,_.z,null));else if(e.isImmediateRenderObject)s&&_.setFromMatrixPosition(e.matrixWorld).applyMatrix4(D),f.push(e,null,e.material,n,_.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==p.render.frame&&(e.skeleton.update(),e.skeleton.frame=p.render.frame),!e.frustumCulled||q.intersectsObject(e)))if(s&&_.setFromMatrixPosition(e.matrixWorld).applyMatrix4(D),r=M.update(e),o=e.material,Array.isArray(o)){l=r.groups;for(var o,r,c,l,u,h,m,a=0,d=l.length;a<d;a++)u=l[a],c=o[u.materialIndex],c&&c.visible&&f.push(e,r,c,n,_.z,u)}else o.visible&&f.push(e,r,o,n,_.z,null);h=e.children;for(a=0,d=h.length;a<d;a++)ee(h[a],t,n,s)}function B(e,t,s,o){for(var a,r,c,l,u,h,m,p,g,f=0,v=e.length;f<v;f++)if(a=e[f],r=a.object,l=a.geometry,u=o===void 0?a.material:o,h=a.group,s.isArrayCamera)if(L=s,d.enabled&&j.isAvailable())K(r,t,s,l,u,h);else{p=s.cameras;for(m=0,g=p.length;m<g;m++)c=p[m],r.layers.test(c.layers)&&(n.viewport(x.copy(c.viewport)),i.setupLights(c),K(r,t,c,l,u,h))}else L=null,K(r,t,s,l,u,h)}function K(e,t,o,a,r,c){if(e.onBeforeRender(s,t,o,a,r,c),i=A.get(t,L||o),e.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject){var l=ae(o,t,r,e);n.setMaterial(r),u.geometry=null,u.program=null,u.wireframe=!1,je(e,l)}else s.renderBufferDirect(o,t,a,r,e,c);e.onAfterRender(s,t,o,a,r,c),i=A.get(t,L||o)}function b(e,t,n){if(o=l.get(e),a=i.state.lights,v=i.state.shadowsArray,f=a.state.version,u=S.getParameters(e,a.state,v,t,h.numPlanes,h.numIntersection,n),p=S.getProgramCacheKey(u),d=o.program,m=!0,d===void 0)e.addEventListener("dispose",me);else if(d.cacheKey!==p)pe(e);else if(o.lightsStateVersion!==f)o.lightsStateVersion=f,m=!1;else if(u.shaderID!==void 0)return;else m=!1;if(m&&(d=S.acquireProgram(u,p),o.program=d,o.uniforms=u.uniforms,o.environment=e.isMeshStandardMaterial?t.environment:null,o.outputEncoding=s.outputEncoding,e.program=d),g=d.getAttributes(),e.morphTargets){e.numSupportedMorphTargets=0;for(c=0;c<s.maxMorphTargets;c++)g["morphTarget"+c]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(c=0;c<s.maxMorphNormals;c++)g["morphNormal"+c]>=0&&e.numSupportedMorphNormals++}r=o.uniforms,(!e.isShaderMaterial&&!e.isRawShaderMaterial||e.clipping===!0)&&(o.numClippingPlanes=h.numPlanes,o.numIntersection=h.numIntersection,r.clippingPlanes=h.uniform),o.fog=t.fog,o.needsLights=be(e),o.lightsStateVersion=f,o.needsLights&&(r.ambientLightColor.value=a.state.ambient,r.lightProbe.value=a.state.probe,r.directionalLights.value=a.state.directional,r.spotLights.value=a.state.spot,r.rectAreaLights.value=a.state.rectArea,r.pointLights.value=a.state.point,r.hemisphereLights.value=a.state.hemi,r.directionalShadowMap.value=a.state.directionalShadowMap,r.directionalShadowMatrix.value=a.state.directionalShadowMatrix,r.spotShadowMap.value=a.state.spotShadowMap,r.spotShadowMatrix.value=a.state.spotShadowMatrix,r.pointShadowMap.value=a.state.pointShadowMap,r.pointShadowMatrix.value=a.state.pointShadowMatrix);var o,a,r,c,d,u,m,f,p,g,v,b=o.program.getUniforms(),j=WebGLUniforms.seqWithValue(b.seq,r);o.uniformsList=j}function ae(e,o,a,c){m.resetTextureUnits(),x=o.fog,O=a.isMeshStandardMaterial?o.environment:null,f=l.get(a),F=i.state.lights,H&&($||e!==k)&&(M=e===k&&a.id===V,h.setState(a.clippingPlanes,a.clipIntersection,a.clipShadows,e,f,M)),a.version===f.__version?f.program===void 0?b(a,o,c):a.fog&&f.fog!==x?b(a,o,c):f.environment!==O?b(a,o,c):f.needsLights&&f.lightsStateVersion!==F.state.version?b(a,o,c):f.numClippingPlanes!==void 0&&(f.numClippingPlanes!==h.numPlanes||f.numIntersection!==h.numIntersection)?b(a,o,c):f.outputEncoding!==s.outputEncoding&&b(a,o,c):(b(a,o,c),f.__version=a.version);var f,p,g,O,x,C,A,M,F,T,z,S=!1,w=!1,E=!1,y=f.program,u=y.getUniforms(),d=f.uniforms;return n.useProgram(y.program)&&(S=!0,w=!0,E=!0),a.id!==V&&(V=a.id,w=!0),(S||k!==e)&&(y.numMultiviewViews>0?j.updateCameraProjectionMatricesUniform(e,u):u.setValue(t,"projectionMatrix",e.projectionMatrix),r.logarithmicDepthBuffer&&u.setValue(t,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),k!==e&&(k=e,w=!0,E=!0),(a.isShaderMaterial||a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshStandardMaterial||a.envMap)&&(A=u.map.cameraPosition,A!==void 0&&A.setValue(t,_.setFromMatrixPosition(e.matrixWorld))),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial)&&u.setValue(t,"isOrthographic",e.isOrthographicCamera===!0),(a.isMeshPhongMaterial||a.isMeshToonMaterial||a.isMeshLambertMaterial||a.isMeshBasicMaterial||a.isMeshStandardMaterial||a.isShaderMaterial||a.skinning)&&(y.numMultiviewViews>0?j.updateCameraViewMatricesUniform(e,u):u.setValue(t,"viewMatrix",e.matrixWorldInverse))),a.skinning&&(u.setOptional(t,c,"bindMatrix"),u.setOptional(t,c,"bindMatrixInverse"),p=c.skeleton,p&&(T=p.bones,r.floatVertexTextures?(p.boneTexture===void 0&&(g=Math.sqrt(T.length*4),g=MathUtils.ceilPowerOfTwo(g),g=Math.max(g,4),C=new Float32Array(g*g*4),C.set(p.boneMatrices),z=new DataTexture(C,g,g,RGBAFormat,FloatType),p.boneMatrices=C,p.boneTexture=z,p.boneTextureSize=g),u.setValue(t,"boneTexture",p.boneTexture,m),u.setValue(t,"boneTextureSize",p.boneTextureSize)):u.setOptional(t,p,"boneMatrices"))),(w||f.receiveShadow!==c.receiveShadow)&&(f.receiveShadow=c.receiveShadow,u.setValue(t,"receiveShadow",c.receiveShadow)),w&&(u.setValue(t,"toneMappingExposure",s.toneMappingExposure),u.setValue(t,"toneMappingWhitePoint",s.toneMappingWhitePoint),f.needsLights&&Ve(d,E),x&&a.fog&&Te(d,x),a.isMeshBasicMaterial?v(d,a):a.isMeshLambertMaterial?(v(d,a),ze(d,a)):a.isMeshToonMaterial?(v(d,a),Ne(d,a)):a.isMeshPhongMaterial?(v(d,a),De(d,a)):a.isMeshStandardMaterial?(v(d,a,O),a.isMeshPhysicalMaterial?Re(d,a,O):te(d,a,O)):a.isMeshMatcapMaterial?(v(d,a),Fe(d,a)):a.isMeshDepthMaterial?(v(d,a),He(d,a)):a.isMeshDistanceMaterial?(v(d,a),Ie(d,a)):a.isMeshNormalMaterial?(v(d,a),Be(d,a)):a.isLineBasicMaterial?(Ae(d,a),a.isLineDashedMaterial&&ve(d,a)):a.isPointsMaterial?$e(d,a):a.isSpriteMaterial?Pe(d,a):a.isShadowMaterial&&(d.color.value.copy(a.color),d.opacity.value=a.opacity),d.ltc_1!==void 0&&(d.ltc_1.value=UniformsLib.LTC_1),d.ltc_2!==void 0&&(d.ltc_2.value=UniformsLib.LTC_2),WebGLUniforms.upload(t,f.uniformsList,d,m),a.isShaderMaterial&&(a.uniformsNeedUpdate=!1)),a.isShaderMaterial&&a.uniformsNeedUpdate===!0&&(WebGLUniforms.upload(t,f.uniformsList,d,m),a.uniformsNeedUpdate=!1),a.isSpriteMaterial&&u.setValue(t,"center",c.center),y.numMultiviewViews>0?j.updateObjectMatricesUniforms(c,e,u):(u.setValue(t,"modelViewMatrix",c.modelViewMatrix),u.setValue(t,"normalMatrix",c.normalMatrix)),u.setValue(t,"modelMatrix",c.matrixWorld),y}function v(e,t,n){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var s,o,i=t.envMap||n;i&&(e.envMap.value=i,e.flipEnvMap.value=i.isCubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.maxMipLevel.value=l.get(i).__maxMipLevel),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity),t.map?s=t.map:t.specularMap?s=t.specularMap:t.displacementMap?s=t.displacementMap:t.normalMap?s=t.normalMap:t.bumpMap?s=t.bumpMap:t.roughnessMap?s=t.roughnessMap:t.metalnessMap?s=t.metalnessMap:t.alphaMap?s=t.alphaMap:t.emissiveMap&&(s=t.emissiveMap),s!==void 0&&(s.isWebGLRenderTarget&&(s=s.texture),s.matrixAutoUpdate===!0&&s.updateMatrix(),e.uvTransform.value.copy(s.matrix)),t.aoMap?o=t.aoMap:t.lightMap&&(o=t.lightMap),o!==void 0&&(o.isWebGLRenderTarget&&(o=o.texture),o.matrixAutoUpdate===!0&&o.updateMatrix(),e.uv2Transform.value.copy(o.matrix))}function Ae(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}function ve(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function $e(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*c,e.scale.value=w*.5,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);var n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),n!==void 0&&(n.matrixAutoUpdate===!0&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}function Pe(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap);var n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap),n!==void 0&&(n.matrixAutoUpdate===!0&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}function Te(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)}function ze(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function De(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function Ne(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.gradientMap&&(e.gradientMap.value=t.gradientMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function te(e,t,n){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),(t.envMap||n)&&(e.envMapIntensity.value=t.envMapIntensity)}function Re(e,t,n){te(e,t,n),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===BackSide&&e.clearcoatNormalScale.value.negate()),e.transparency.value=t.transparency}function Fe(e,t){t.matcap&&(e.matcap.value=t.matcap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function He(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function Ie(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}function Be(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===BackSide&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===BackSide&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function Ve(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function be(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&e.lights===!0}this.setFramebuffer=function(e){G!==e&&y===null&&t.bindFramebuffer(36160,e),G=e},this.getActiveCubeFace=function(){return he},this.getActiveMipmapLevel=function(){return fe},this.getRenderTarget=function(){return y},this.setRenderTarget=function(e,s,o){y=e,he=s,fe=o,e&&l.get(e).__webglFramebuffer===void 0&&m.setupRenderTarget(e);var a,d,i=G,r=!1;e?(a=l.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(i=a[s||0],r=!0):e.isWebGLMultisampleRenderTarget?i=l.get(e).__webglMultisampledFramebuffer:i=a,x.copy(e.viewport),z.copy(e.scissor),U=e.scissorTest):(x.copy(T).multiplyScalar(c).floor(),z.copy(F).multiplyScalar(c).floor(),U=Y),P!==i&&(t.bindFramebuffer(36160,i),P=i),n.viewport(x),n.scissor(z),n.setScissorTest(U),r&&(d=l.get(e.texture),t.framebufferTexture2D(36160,36064,34069+(s||0),d.__webglTexture,o||0))},this.readRenderTargetPixels=function(e,n,s,i,a,c,d){if(!e||!e.isWebGLRenderTarget){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var u,m,f,p,h=l.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&d!==void 0&&(h=h[d]),h){f=!1,h!==P&&(t.bindFramebuffer(36160,h),f=!0);try{if(p=e.texture,m=p.format,u=p.type,m!==RGBAFormat&&g.convert(m)!==t.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(u!==UnsignedByteType&&g.convert(u)!==t.getParameter(35738)&&!(u===FloatType&&(r.isWebGL2||o.get("OES_texture_float")||o.get("WEBGL_color_buffer_float")))&&!(u===HalfFloatType&&(r.isWebGL2?o.get("EXT_color_buffer_float"):o.get("EXT_color_buffer_half_float")))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t.checkFramebufferStatus(36160)===36053?n>=0&&n<=e.width-i&&s>=0&&s<=e.height-a&&t.readPixels(n,s,i,a,g.convert(m),g.convert(u),c):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{f&&t.bindFramebuffer(36160,P)}}},this.copyFramebufferToTexture=function(e,s,o){o===void 0&&(o=0);var i=Math.pow(2,-o),a=Math.floor(s.image.width*i),r=Math.floor(s.image.height*i),c=g.convert(s.format);m.setTexture2D(s,0),t.copyTexImage2D(3553,o,c,e.x,e.y,a,r,0),n.unbindTexture()},this.copyTextureToTexture=function(e,s,o,i){var c=s.image.width,l=s.image.height,a=g.convert(o.format),r=g.convert(o.type);m.setTexture2D(o,0),s.isDataTexture?t.texSubImage2D(3553,i||0,e.x,e.y,c,l,a,r,s.image.data):t.texSubImage2D(3553,i||0,e.x,e.y,a,r,s.image),n.unbindTexture()},this.initTexture=function(e){m.setTexture2D(e,0),n.unbindTexture()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function FogExp2(e,t){this.name="",this.color=new Color(e),this.density=t!==void 0?t:25e-5}Object.assign(FogExp2.prototype,{isFogExp2:!0,clone:function(){return new FogExp2(this.color,this.density)},toJSON:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}});function Fog(e,t,n){this.name="",this.color=new Color(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}Object.assign(Fog.prototype,{isFog:!0,clone:function(){return new Fog(this.color,this.near,this.far)},toJSON:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}});function InterleavedBuffer(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=StaticDrawUsage,this.updateRange={offset:0,count:-1},this.version=0}Object.defineProperty(InterleavedBuffer.prototype,"needsUpdate",{set:function(e){e===!0&&this.version++}}),Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(e){return this.usage=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var s=0,o=this.stride;s<o;s++)this.array[e+s]=t.array[n+s];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}}),_vector$6=new Vector3;function InterleavedBufferAttribute(e,t,n,s){this.data=e,this.itemSize=t,this.offset=n,this.normalized=s===!0}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(e){for(var t=0,n=this.data.count;t<n;t++)_vector$6.x=this.getX(t),_vector$6.y=this.getY(t),_vector$6.z=this.getZ(t),_vector$6.applyMatrix4(e),this.setXYZ(t,_vector$6.x,_vector$6.y,_vector$6.z);return this},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this},setXYZW:function(e,t,n,s,o){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=s,this.data.array[e+3]=o,this}});function SpriteMaterial(e){Material.call(this),this.type="SpriteMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}SpriteMaterial.prototype=Object.create(Material.prototype),SpriteMaterial.prototype.constructor=SpriteMaterial,SpriteMaterial.prototype.isSpriteMaterial=!0,SpriteMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this},_intersectPoint=new Vector3,_worldScale=new Vector3,_mvPosition=new Vector3,_alignedPosition=new Vector2,_rotatedPosition=new Vector2,_viewWorldMatrix=new Matrix4,_vA$1=new Vector3,_vB$1=new Vector3,_vC$1=new Vector3,_uvA$1=new Vector2,_uvB$1=new Vector2,_uvC$1=new Vector2;function Sprite(e){if(Object3D.call(this),this.type="Sprite",_geometry===void 0){_geometry=new BufferGeometry;var n=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new InterleavedBuffer(n,5);_geometry.setIndex([0,1,2,0,2,3]),_geometry.setAttribute("position",new InterleavedBufferAttribute(t,3,0,!1)),_geometry.setAttribute("uv",new InterleavedBufferAttribute(t,2,3,!1))}this.geometry=_geometry,this.material=e!==void 0?e:new SpriteMaterial,this.center=new Vector2(.5,.5)}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:!0,raycast:function(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),_worldScale.setFromMatrixScale(this.matrixWorld),_viewWorldMatrix.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),_mvPosition.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&_worldScale.multiplyScalar(-_mvPosition.z);var n,s,o,i,a,r=this.material.rotation;if(r!==0&&(s=Math.cos(r),n=Math.sin(r)),o=this.center,transformVertex(_vA$1.set(-.5,-.5,0),_mvPosition,o,_worldScale,n,s),transformVertex(_vB$1.set(.5,-.5,0),_mvPosition,o,_worldScale,n,s),transformVertex(_vC$1.set(.5,.5,0),_mvPosition,o,_worldScale,n,s),_uvA$1.set(0,0),_uvB$1.set(1,0),_uvC$1.set(1,1),i=e.ray.intersectTriangle(_vA$1,_vB$1,_vC$1,!1,_intersectPoint),i===null&&(transformVertex(_vB$1.set(-.5,.5,0),_mvPosition,o,_worldScale,n,s),_uvB$1.set(0,1),i=e.ray.intersectTriangle(_vA$1,_vC$1,_vB$1,!1,_intersectPoint),i===null))return;if(a=e.ray.origin.distanceTo(_intersectPoint),a<e.near||a>e.far)return;t.push({distance:a,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2),face:null,object:this})},clone:function(){return new this.constructor(this.material).copy(this)},copy:function(e){return Object3D.prototype.copy.call(this,e),e.center!==void 0&&this.center.copy(e.center),this}});function transformVertex(e,t,n,s,o,i){_alignedPosition.subVectors(e,n).addScalar(.5).multiply(s),o!==void 0?(_rotatedPosition.x=i*_alignedPosition.x-o*_alignedPosition.y,_rotatedPosition.y=o*_alignedPosition.x+i*_alignedPosition.y):_rotatedPosition.copy(_alignedPosition),e.copy(t),e.x+=_rotatedPosition.x,e.y+=_rotatedPosition.y,e.applyMatrix4(_viewWorldMatrix)}_v1$4=new Vector3,_v2$2=new Vector3;function LOD(){Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,isLOD:!0,copy:function(e){Object3D.prototype.copy.call(this,e,!1),t=e.levels;for(var t,s,n=0,o=t.length;n<o;n++)s=t[n],this.addLevel(s.object.clone(),s.distance);return this.autoUpdate=e.autoUpdate,this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);for(var s=this.levels,n=0;n<s.length;n++)if(t<s[n].distance)break;return s.splice(n,0,{distance:t,object:e}),this.add(e),this},getObjectForDistance:function(e){if(t=this.levels,t.length>0){for(var t,n=1,s=t.length;n<s;n++)if(e<t[n].distance)break;return t[n-1].object}return null},raycast:function(e,t){var n,s=this.levels;s.length>0&&(_v1$4.setFromMatrixPosition(this.matrixWorld),n=e.ray.origin.distanceTo(_v1$4),this.getObjectForDistance(n).raycast(e,t))},update:function(e){if(t=this.levels,t.length>1){_v1$4.setFromMatrixPosition(e.matrixWorld),_v2$2.setFromMatrixPosition(this.matrixWorld),s=_v1$4.distanceTo(_v2$2),t[0].object.visible=!0;for(var t,s,n=1,o=t.length;n<o;n++)if(s>=t[n].distance)t[n-1].object.visible=!1,t[n].object.visible=!0;else break;for(;n<o;n++)t[n].object.visible=!1}},toJSON:function(e){t=Object3D.prototype.toJSON.call(this,e),this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[],n=this.levels;for(var t,n,o,s=0,i=n.length;s<i;s++)o=n[s],t.object.levels.push({object:o.object.uuid,distance:o.distance});return t}});function SkinnedMesh(e,t){e&&e.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Matrix4,this.bindMatrixInverse=new Matrix4}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){e=new Vector4,t=this.geometry.attributes.skinWeight;for(var e,t,s,n=0,o=t.count;n<o;n++)e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n),s=1/e.manhattanLength(),s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)},updateMatrixWorld:function(e){Mesh.prototype.updateMatrixWorld.call(this,e),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),_offsetMatrix=new Matrix4,_identityMatrix=new Matrix4;function Skeleton(e,t){if(e=e||[],this.bones=e.slice(0),this.boneMatrices=new Float32Array(this.bones.length*16),this.frame=-1,t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton boneInverses is the wrong length."),this.boneInverses=[];for(var n=0,s=this.bones.length;n<s;n++)this.boneInverses.push(new Matrix4)}}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t,e=0,n=this.bones.length;e<n;e++)t=new Matrix4,this.bones[e]&&t.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(t)},pose:function(){var e,t,n;for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){t=this.bones,s=this.boneInverses,o=this.boneMatrices,n=this.boneTexture;for(var t,n,s,o,i,e=0,a=t.length;e<a;e++)i=t[e]?t[e].matrixWorld:_identityMatrix,_offsetMatrix.multiplyMatrices(i,s[e]),_offsetMatrix.toArray(o,e*16);n!==void 0&&(n.needsUpdate=!0)},clone:function(){return new Skeleton(this.bones,this.boneInverses)},getBoneByName:function(e){for(var n,t=0,s=this.bones.length;t<s;t++)if(n=this.bones[t],n.name===e)return n}});function Bone(){Object3D.call(this),this.type="Bone"}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:!0}),_instanceLocalMatrix=new Matrix4,_instanceWorldMatrix=new Matrix4,_instanceIntersects=[],_mesh=new Mesh;function InstancedMesh(e,t,n){Mesh.call(this,e,t),this.instanceMatrix=new BufferAttribute(new Float32Array(n*16),16),this.count=n,this.frustumCulled=!1}InstancedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:InstancedMesh,isInstancedMesh:!0,getMatrixAt:function(e,t){t.fromArray(this.instanceMatrix.array,e*16)},raycast:function(e,t){var n,s=this.matrixWorld,o=this.count;if(_mesh.geometry=this.geometry,_mesh.material=this.material,_mesh.material===void 0)return;for(n=0;n<o;n++)this.getMatrixAt(n,_instanceLocalMatrix),_instanceWorldMatrix.multiplyMatrices(s,_instanceLocalMatrix),_mesh.matrixWorld=_instanceWorldMatrix,_mesh.raycast(e,_instanceIntersects),_instanceIntersects.length>0&&(_instanceIntersects[0].instanceId=n,_instanceIntersects[0].object=this,t.push(_instanceIntersects[0]),_instanceIntersects.length=0)},setMatrixAt:function(e,t){t.toArray(this.instanceMatrix.array,e*16)},updateMorphTargets:function(){}});function LineBasicMaterial(e){Material.call(this),this.type="LineBasicMaterial",this.color=new Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}LineBasicMaterial.prototype=Object.create(Material.prototype),LineBasicMaterial.prototype.constructor=LineBasicMaterial,LineBasicMaterial.prototype.isLineBasicMaterial=!0,LineBasicMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},_start=new Vector3,_end=new Vector3,_inverseMatrix$1=new Matrix4,_ray$1=new Ray,_sphere$2=new Sphere;function Line(e,t,n){n===1&&console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."),Object3D.call(this),this.type="Line",this.geometry=e!==void 0?e:new BufferGeometry,this.material=t!==void 0?t:new LineBasicMaterial}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:!0,computeLineDistances:function(){if(n=this.geometry,n.isBufferGeometry)if(n.index===null){s=n.attributes.position,t=[0];for(var t,n,s,o,e=1,i=s.count;e<i;e++)_start.fromBufferAttribute(s,e-1),_end.fromBufferAttribute(s,e),t[e]=t[e-1],t[e]+=_start.distanceTo(_end);n.setAttribute("lineDistance",new Float32BufferAttribute(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(n.isGeometry){o=n.vertices,t=n.lineDistances,t[0]=0;for(e=1,i=o.length;e<i;e++)t[e]=t[e-1],t[e]+=o[e-1].distanceTo(o[e])}return this},raycast:function(e,t){if(v=e.linePrecision,i=this.geometry,j=this.matrixWorld,i.boundingSphere===null&&i.computeBoundingSphere(),_sphere$2.copy(i.boundingSphere),_sphere$2.applyMatrix4(j),_sphere$2.radius+=v,e.ray.intersectsSphere(_sphere$2)===!1)return;if(_inverseMatrix$1.getInverse(j),_ray$1.copy(e.ray).applyMatrix4(_inverseMatrix$1),b=v/((this.scale.x+this.scale.y+this.scale.z)/3),m=b*b,d=new Vector3,l=new Vector3,a=new Vector3,o=new Vector3,h=this&&this.isLineSegments?2:1,i.isBufferGeometry)if(p=i.index,y=i.attributes,r=y.position.array,p!==null){u=p.array;for(var s,o,i,a,r,c,l,d,u,h,m,f,p,v,b,j,y,_,w,O,n=0,g=u.length-1;n<g;n+=h){if(_=u[n],w=u[n+1],d.fromArray(r,_*3),l.fromArray(r,w*3),c=_ray$1.distanceSqToSegment(d,l,o,a),c>m)continue;if(o.applyMatrix4(this.matrixWorld),s=e.ray.origin.distanceTo(o),s<e.near||s>e.far)continue;t.push({distance:s,point:a.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else for(n=0,g=r.length/3-1;n<g;n+=h){if(d.fromArray(r,3*n),l.fromArray(r,3*n+3),c=_ray$1.distanceSqToSegment(d,l,o,a),c>m)continue;if(o.applyMatrix4(this.matrixWorld),s=e.ray.origin.distanceTo(o),s<e.near||s>e.far)continue;t.push({distance:s,point:a.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else if(i.isGeometry){f=i.vertices,O=f.length;for(n=0;n<O-1;n+=h){if(c=_ray$1.distanceSqToSegment(f[n],f[n+1],o,a),c>m)continue;if(o.applyMatrix4(this.matrixWorld),s=e.ray.origin.distanceTo(o),s<e.near||s>e.far)continue;t.push({distance:s,point:a.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),_start$1=new Vector3,_end$1=new Vector3;function LineSegments(e,t){Line.call(this,e,t),this.type="LineSegments"}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:!0,computeLineDistances:function(){if(n=this.geometry,n.isBufferGeometry)if(n.index===null){s=n.attributes.position,t=[];for(var t,n,s,o,e=0,i=s.count;e<i;e+=2)_start$1.fromBufferAttribute(s,e),_end$1.fromBufferAttribute(s,e+1),t[e]=e===0?0:t[e-1],t[e+1]=t[e]+_start$1.distanceTo(_end$1);n.setAttribute("lineDistance",new Float32BufferAttribute(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(n.isGeometry){o=n.vertices,t=n.lineDistances;for(e=0,i=o.length;e<i;e+=2)_start$1.copy(o[e]),_end$1.copy(o[e+1]),t[e]=e===0?0:t[e-1],t[e+1]=t[e]+_start$1.distanceTo(_end$1)}return this}});function LineLoop(e,t){Line.call(this,e,t),this.type="LineLoop"}LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:!0});function PointsMaterial(e){Material.call(this),this.type="PointsMaterial",this.color=new Color(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}PointsMaterial.prototype=Object.create(Material.prototype),PointsMaterial.prototype.constructor=PointsMaterial,PointsMaterial.prototype.isPointsMaterial=!0,PointsMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this},_inverseMatrix$2=new Matrix4,_ray$2=new Ray,_sphere$3=new Sphere,_position$1=new Vector3;function Points(e,t){Object3D.call(this),this.type="Points",this.geometry=e!==void 0?e:new BufferGeometry,this.material=t!==void 0?t:new PointsMaterial,this.updateMorphTargets()}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:!0,raycast:function(e,t){if(s=this.geometry,o=this.matrixWorld,h=e.params.Points.threshold,s.boundingSphere===null&&s.computeBoundingSphere(),_sphere$3.copy(s.boundingSphere),_sphere$3.applyMatrix4(o),_sphere$3.radius+=h,e.ray.intersectsSphere(_sphere$3)===!1)return;if(_inverseMatrix$2.getInverse(o),_ray$2.copy(e.ray).applyMatrix4(_inverseMatrix$2),c=h/((this.scale.x+this.scale.y+this.scale.z)/3),r=c*c,s.isBufferGeometry)if(d=s.index,f=s.attributes,i=f.position.array,d!==null){l=d.array;for(var s,o,i,a,r,c,l,d,u,h,m,f,n=0,p=l.length;n<p;n++)u=l[n],_position$1.fromArray(i,u*3),testPoint(_position$1,u,r,o,e,t,this)}else for(n=0,a=i.length/3;n<a;n++)_position$1.fromArray(i,n*3),testPoint(_position$1,n,r,o,e,t,this);else{m=s.vertices;for(n=0,a=m.length;n<a;n++)testPoint(m[n],n,r,o,e,t,this)}},updateMorphTargets:function(){var e,t,s,o,i,a,r,n=this.geometry;if(n.isBufferGeometry){if(s=n.morphAttributes,o=Object.keys(s),o.length>0&&(t=s[o[0]],t!==void 0)){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(e=0,a=t.length;e<a;e++)r=t[e].name||String(e),this.morphTargetInfluences.push(0),this.morphTargetDictionary[r]=e}}else i=n.morphTargets,i!==void 0&&i.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function testPoint(e,t,n,s,o,i,a){var r,c,l=_ray$2.distanceSqToPoint(e);if(l<n){if(r=new Vector3,_ray$2.closestPointToPoint(e,r),r.applyMatrix4(s),c=o.ray.origin.distanceTo(r),c<o.near||c>o.far)return;i.push({distance:c,distanceToRay:Math.sqrt(l),point:r,index:t,face:null,object:a})}}function VideoTexture(e,t,n,s,o,i,a,r,c){Texture.call(this,e,t,n,s,o,i,a,r,c),this.format=a!==void 0?a:RGBFormat,this.minFilter=i!==void 0?i:LinearFilter,this.magFilter=o!==void 0?o:LinearFilter,this.generateMipmaps=!1}VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:!0,update:function(){var e=this.image;e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}});function CompressedTexture(e,t,n,s,o,i,a,r,c,l,d,u){Texture.call(this,null,i,a,r,c,l,s,o,d,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}CompressedTexture.prototype=Object.create(Texture.prototype),CompressedTexture.prototype.constructor=CompressedTexture,CompressedTexture.prototype.isCompressedTexture=!0;function CanvasTexture(e,t,n,s,o,i,a,r,c){Texture.call(this,e,t,n,s,o,i,a,r,c),this.needsUpdate=!0}CanvasTexture.prototype=Object.create(Texture.prototype),CanvasTexture.prototype.constructor=CanvasTexture,CanvasTexture.prototype.isCanvasTexture=!0;function DepthTexture(e,t,n,s,o,i,a,r,c,l){if(l=l!==void 0?l:DepthFormat,l!==DepthFormat&&l!==DepthStencilFormat)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&l===DepthFormat&&(n=UnsignedShortType),n===void 0&&l===DepthStencilFormat&&(n=UnsignedInt248Type),Texture.call(this,null,s,o,i,a,r,l,n,c),this.image={width:e,height:t},this.magFilter=a!==void 0?a:NearestFilter,this.minFilter=r!==void 0?r:NearestFilter,this.flipY=!1,this.generateMipmaps=!1}DepthTexture.prototype=Object.create(Texture.prototype),DepthTexture.prototype.constructor=DepthTexture,DepthTexture.prototype.isDepthTexture=!0;function WireframeGeometry(e){BufferGeometry.call(this),this.type="WireframeGeometry";var t,n,s,i,c,l,d,u,h,m,f,p,g,v,b,j,_,w,O,x,r=[],o=[0,0],a={},y=["a","b","c"];if(e&&e.isGeometry){g=e.faces;for(s=0,l=g.length;s<l;s++){v=g[s];for(n=0;n<3;n++)u=v[y[n]],h=v[y[(n+1)%3]],o[0]=Math.min(u,h),o[1]=Math.max(u,h),i=o[0]+","+o[1],a[i]===void 0&&(a[i]={index1:o[0],index2:o[1]})}for(i in a)d=a[i],t=e.vertices[d.index1],r.push(t.x,t.y,t.z),t=e.vertices[d.index2],r.push(t.x,t.y,t.z)}else if(e&&e.isBufferGeometry)if(t=new Vector3,e.index!==null){c=e.attributes.position,f=e.index,m=e.groups,m.length===0&&(m=[{start:0,count:f.count,materialIndex:0}]);for(p=0,_=m.length;p<_;++p){b=m[p],j=b.start,w=b.count;for(s=j,l=j+w;s<l;s+=3)for(n=0;n<3;n++)u=f.getX(s+n),h=f.getX(s+(n+1)%3),o[0]=Math.min(u,h),o[1]=Math.max(u,h),i=o[0]+","+o[1],a[i]===void 0&&(a[i]={index1:o[0],index2:o[1]})}for(i in a)d=a[i],t.fromBufferAttribute(c,d.index1),r.push(t.x,t.y,t.z),t.fromBufferAttribute(c,d.index2),r.push(t.x,t.y,t.z)}else{c=e.attributes.position;for(s=0,l=c.count/3;s<l;s++)for(n=0;n<3;n++)O=3*s+n,t.fromBufferAttribute(c,O),r.push(t.x,t.y,t.z),x=3*s+(n+1)%3,t.fromBufferAttribute(c,x),r.push(t.x,t.y,t.z)}this.setAttribute("position",new Float32BufferAttribute(r,3))}WireframeGeometry.prototype=Object.create(BufferGeometry.prototype),WireframeGeometry.prototype.constructor=WireframeGeometry;function ParametricGeometry(e,t,n){Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new ParametricBufferGeometry(e,t,n)),this.mergeVertices()}ParametricGeometry.prototype=Object.create(Geometry.prototype),ParametricGeometry.prototype.constructor=ParametricGeometry;function ParametricBufferGeometry(e,t,n){BufferGeometry.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var s,o,a,r,d,p,g,y,_,f=[],j=[],b=[],v=[],l=1e-5,u=new Vector3,c=new Vector3,i=new Vector3,h=new Vector3,m=new Vector3;e.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter."),d=t+1;for(o=0;o<=n;o++){r=o/n;for(s=0;s<=t;s++)a=s/t,e(a,r,c),j.push(c.x,c.y,c.z),a-l>=0?(e(a-l,r,i),h.subVectors(c,i)):(e(a+l,r,i),h.subVectors(i,c)),r-l>=0?(e(a,r-l,i),m.subVectors(c,i)):(e(a,r+l,i),m.subVectors(i,c)),u.crossVectors(h,m).normalize(),b.push(u.x,u.y,u.z),v.push(a,r)}for(o=0;o<n;o++)for(s=0;s<t;s++)y=o*d+s,p=o*d+s+1,_=(o+1)*d+s+1,g=(o+1)*d+s,f.push(y,p,g),f.push(p,_,g);this.setIndex(f),this.setAttribute("position",new Float32BufferAttribute(j,3)),this.setAttribute("normal",new Float32BufferAttribute(b,3)),this.setAttribute("uv",new Float32BufferAttribute(v,2))}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry;function PolyhedronGeometry(e,t,n,s){Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:s},this.fromBufferGeometry(new PolyhedronBufferGeometry(e,t,n,s)),this.mergeVertices()}PolyhedronGeometry.prototype=Object.create(Geometry.prototype),PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;function PolyhedronBufferGeometry(e,t,n,s){BufferGeometry.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:s},n=n||1,s=s||0;var o=[],i=[];p(s),h(n),u(),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(o.slice(),3)),this.setAttribute("uv",new Float32BufferAttribute(i,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function p(e){for(var s=new Vector3,o=new Vector3,i=new Vector3,n=0;n<t.length;n+=3)c(t[n+0],s),c(t[n+1],o),c(t[n+2],i),f(s,o,i,e)}function f(e,t,n,s){var o,i,l,d,u,h,c=Math.pow(2,s),r=[];for(o=0;o<=c;o++){r[o]=[],d=e.clone().lerp(n,o/c),h=t.clone().lerp(n,o/c),u=c-o;for(i=0;i<=u;i++)i===0&&o===c?r[o][i]=d:r[o][i]=d.clone().lerp(h,i/u)}for(o=0;o<c;o++)for(i=0;i<2*(c-o)-1;i++)l=Math.floor(i/2),i%2===0?(a(r[o][l+1]),a(r[o+1][l]),a(r[o][l])):(a(r[o][l+1]),a(r[o+1][l+1]),a(r[o+1][l]))}function h(e){for(var n=new Vector3,t=0;t<o.length;t+=3)n.x=o[t+0],n.y=o[t+1],n.z=o[t+2],n.normalize().multiplyScalar(e),o[t+0]=n.x,o[t+1]=n.y,o[t+2]=n.z}function u(){for(var n,s,e=new Vector3,t=0;t<o.length;t+=3)e.x=o[t+0],e.y=o[t+1],e.z=o[t+2],n=l(e)/2/Math.PI+.5,s=g(e)/Math.PI+.5,i.push(n,1-s);m(),d()}function d(){for(var t,n,s,o,a,e=0;e<i.length;e+=6)t=i[e+0],n=i[e+2],s=i[e+4],o=Math.max(t,n,s),a=Math.min(t,n,s),o>.9&&a<.1&&(t<.2&&(i[e+0]+=1),n<.2&&(i[e+2]+=1),s<.2&&(i[e+4]+=1))}function a(e){o.push(e.x,e.y,e.z)}function c(t,n){var s=t*3;n.x=e[s+0],n.y=e[s+1],n.z=e[s+2]}function m(){n=new Vector3,s=new Vector3,a=new Vector3,d=new Vector3,u=new Vector2,h=new Vector2,m=new Vector2;for(var n,s,a,c,d,u,h,m,e=0,t=0;e<o.length;e+=9,t+=6)n.set(o[e+0],o[e+1],o[e+2]),s.set(o[e+3],o[e+4],o[e+5]),a.set(o[e+6],o[e+7],o[e+8]),u.set(i[t+0],i[t+1]),h.set(i[t+2],i[t+3]),m.set(i[t+4],i[t+5]),d.copy(n).add(s).add(a).divideScalar(3),c=l(d),r(u,t+0,n,c),r(h,t+2,s,c),r(m,t+4,a,c)}function r(e,t,n,s){s<0&&e.x===1&&(i[t]=e.x-1),n.x===0&&n.z===0&&(i[t]=s/2/Math.PI+.5)}function l(e){return Math.atan2(e.z,-e.x)}function g(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}}PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype),PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;function TetrahedronGeometry(e,t){Geometry.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new TetrahedronBufferGeometry(e,t)),this.mergeVertices()}TetrahedronGeometry.prototype=Object.create(Geometry.prototype),TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;function TetrahedronBufferGeometry(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],s=[2,1,0,0,3,2,1,3,0,2,3,1];PolyhedronBufferGeometry.call(this,n,s,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;function OctahedronGeometry(e,t){Geometry.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new OctahedronBufferGeometry(e,t)),this.mergeVertices()}OctahedronGeometry.prototype=Object.create(Geometry.prototype),OctahedronGeometry.prototype.constructor=OctahedronGeometry;function OctahedronBufferGeometry(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];PolyhedronBufferGeometry.call(this,n,s,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;function IcosahedronGeometry(e,t){Geometry.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new IcosahedronBufferGeometry(e,t)),this.mergeVertices()}IcosahedronGeometry.prototype=Object.create(Geometry.prototype),IcosahedronGeometry.prototype.constructor=IcosahedronGeometry;function IcosahedronBufferGeometry(e,t){var n=(1+Math.sqrt(5))/2,s=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],o=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];PolyhedronBufferGeometry.call(this,s,o,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;function DodecahedronGeometry(e,t){Geometry.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new DodecahedronBufferGeometry(e,t)),this.mergeVertices()}DodecahedronGeometry.prototype=Object.create(Geometry.prototype),DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;function DodecahedronBufferGeometry(e,t){var n=(1+Math.sqrt(5))/2,s=1/n,o=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-s,-n,0,-s,n,0,s,-n,0,s,n,-s,-n,0,-s,n,0,s,-n,0,s,n,0,-n,0,-s,n,0,-s,-n,0,s,n,0,s],i=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];PolyhedronBufferGeometry.call(this,o,i,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype),DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;function TubeGeometry(e,t,n,s,o,i){Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:s,closed:o},i!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var a=new TubeBufferGeometry(e,t,n,s,o);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals,this.fromBufferGeometry(a),this.mergeVertices()}TubeGeometry.prototype=Object.create(Geometry.prototype),TubeGeometry.prototype.constructor=TubeGeometry;function TubeBufferGeometry(e,t,n,s,o){BufferGeometry.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:s,closed:o},t=t||64,n=n||1,s=s||8,o=o||!1;var i,a,r,c,l,d,h,m,f,p,u=e.computeFrenetFrames(t,o);this.tangents=u.tangents,this.normals=u.normals,this.binormals=u.binormals,c=new Vector3,r=new Vector3,d=new Vector2,l=new Vector3,m=[],f=[],p=[],h=[],v(),this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(m,3)),this.setAttribute("normal",new Float32BufferAttribute(f,3)),this.setAttribute("uv",new Float32BufferAttribute(p,2));function v(){for(i=0;i<t;i++)g(i);g(o===!1?t:0),j(),b()}function g(o){l=e.getPointAt(o/t,l);var i,d,g,h=u.normals[o],p=u.binormals[o];for(a=0;a<=s;a++)g=a/s*Math.PI*2,i=Math.sin(g),d=-Math.cos(g),r.x=d*h.x+i*p.x,r.y=d*h.y+i*p.y,r.z=d*h.z+i*p.z,r.normalize(),f.push(r.x,r.y,r.z),c.x=l.x+n*r.x,c.y=l.y+n*r.y,c.z=l.z+n*r.z,m.push(c.x,c.y,c.z)}function b(){for(a=1;a<=t;a++)for(i=1;i<=s;i++){var r=(s+1)*(a-1)+(i-1),e=(s+1)*a+(i-1),o=(s+1)*a+i,n=(s+1)*(a-1)+i;h.push(r,e,n),h.push(e,o,n)}}function j(){for(i=0;i<=t;i++)for(a=0;a<=s;a++)d.x=i/t,d.y=a/s,p.push(d.x,d.y)}}TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TubeBufferGeometry.prototype.constructor=TubeBufferGeometry,TubeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e};function TorusKnotGeometry(e,t,n,s,o,i,a){Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:s,p:o,q:i},a!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new TorusKnotBufferGeometry(e,t,n,s,o,i)),this.mergeVertices()}TorusKnotGeometry.prototype=Object.create(Geometry.prototype),TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;function TorusKnotBufferGeometry(e,t,n,s,o,i){BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:s,p:o,q:i},e=e||1,t=t||.4,n=Math.floor(n)||64,s=Math.floor(s)||8,o=o||2,i=i||3;var a,r,h,f,p,b,_,w,C,E,g=[],O=[],x=[],j=[],d=new Vector3,m=new Vector3,l=new Vector3,y=new Vector3,u=new Vector3,v=new Vector3,c=new Vector3;for(r=0;r<=n;++r){b=r/n*o*Math.PI*2,k(b,o,i,e,l),k(b+.01,o,i,e,y),v.subVectors(y,l),c.addVectors(y,l),u.crossVectors(v,c),c.crossVectors(u,v),u.normalize(),c.normalize();for(a=0;a<=s;++a)p=a/s*Math.PI*2,h=-t*Math.cos(p),f=t*Math.sin(p),d.x=l.x+(h*c.x+f*u.x),d.y=l.y+(h*c.y+f*u.y),d.z=l.z+(h*c.z+f*u.z),O.push(d.x,d.y,d.z),m.subVectors(d,l).normalize(),x.push(m.x,m.y,m.z),j.push(r/n),j.push(a/s)}for(a=1;a<=n;a++)for(r=1;r<=s;r++)C=(s+1)*(a-1)+(r-1),_=(s+1)*a+(r-1),E=(s+1)*a+r,w=(s+1)*(a-1)+r,g.push(C,_,w),g.push(_,E,w);this.setIndex(g),this.setAttribute("position",new Float32BufferAttribute(O,3)),this.setAttribute("normal",new Float32BufferAttribute(x,3)),this.setAttribute("uv",new Float32BufferAttribute(j,2));function k(e,t,n,s,o){var r=Math.cos(e),c=Math.sin(e),i=n/t*e,a=Math.cos(i);o.x=s*(2+a)*.5*r,o.y=s*(2+a)*c*.5,o.z=s*Math.sin(i)*.5}}TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;function TorusGeometry(e,t,n,s,o){Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:s,arc:o},this.fromBufferGeometry(new TorusBufferGeometry(e,t,n,s,o)),this.mergeVertices()}TorusGeometry.prototype=Object.create(Geometry.prototype),TorusGeometry.prototype.constructor=TorusGeometry;function TorusBufferGeometry(e,t,n,s,o){BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:s,arc:o},e=e||1,t=t||.4,n=Math.floor(n)||8,s=Math.floor(s)||6,o=o||Math.PI*2;var i,a,c,d,f,p,b,j,h=[],v=[],g=[],m=[],u=new Vector3,r=new Vector3,l=new Vector3;for(a=0;a<=n;a++)for(i=0;i<=s;i++)c=i/s*o,d=a/n*Math.PI*2,r.x=(e+t*Math.cos(d))*Math.cos(c),r.y=(e+t*Math.cos(d))*Math.sin(c),r.z=t*Math.sin(d),v.push(r.x,r.y,r.z),u.x=e*Math.cos(c),u.y=e*Math.sin(c),l.subVectors(r,u).normalize(),g.push(l.x,l.y,l.z),m.push(i/s),m.push(a/n);for(a=1;a<=n;a++)for(i=1;i<=s;i++)b=(s+1)*a+i-1,f=(s+1)*(a-1)+i-1,j=(s+1)*(a-1)+i,p=(s+1)*a+i,h.push(b,f,p),h.push(f,j,p);this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(v,3)),this.setAttribute("normal",new Float32BufferAttribute(g,3)),this.setAttribute("uv",new Float32BufferAttribute(m,2))}TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusBufferGeometry.prototype.constructor=TorusBufferGeometry,Earcut={triangulate:function(e,t,n){n=n||2;var o,i,a,r,c,l,d,u,m=t&&t.length,f=m?t[0]*n:e.length,s=linkedList(e,0,f,n,!0),h=[];if(!s||s.next===s.prev)return h;if(m&&(s=eliminateHoles(e,t,s,n)),e.length>80*n){o=d=e[0],i=u=e[1];for(l=n;l<f;l+=n)a=e[l],r=e[l+1],a<o&&(o=a),r<i&&(i=r),a>d&&(d=a),r>u&&(u=r);c=Math.max(d-o,u-i),c=c!==0?1/c:0}return earcutLinked(s,h,n,o,i,c),h}};function linkedList(e,t,n,s,o){var i,a;if(o===signedArea(e,t,n,s)>0)for(i=t;i<n;i+=s)a=insertNode(i,e[i],e[i+1],a);else for(i=n-s;i>=t;i-=s)a=insertNode(i,e[i],e[i+1],a);return a&&equals(a,a.next)&&(removeNode(a),a=a.next),a}function filterPoints(e,t){if(!e)return e;t||(t=e);var s,n=e;do if(s=!1,!n.steiner&&(equals(n,n.next)||area(n.prev,n,n.next)===0)){if(removeNode(n),n=t=n.prev,n===n.next)break;s=!0}else n=n.next;while(s||n!==t)return t}function earcutLinked(e,t,n,s,o,i,a){if(!e)return;!a&&i&&indexCurve(e,s,o,i);for(var r,l,c=e;e.prev!==e.next;){if(l=e.prev,r=e.next,i?isEarHashed(e,s,o,i):isEar(e)){t.push(l.i/n),t.push(e.i/n),t.push(r.i/n),removeNode(e),e=r.next,c=r.next;continue}if(e=r,e===c){a?a===1?(e=cureLocalIntersections(e,t,n),earcutLinked(e,t,n,s,o,i,2)):a===2&&splitEarcut(e,t,n,s,o,i):earcutLinked(filterPoints(e),t,n,s,o,i,1);break}}}function isEar(e){var t,n=e.prev,s=e,o=e.next;if(area(n,s,o)>=0)return!1;for(t=e.next.next;t!==e.prev;){if(pointInTriangle(n.x,n.y,s.x,s.y,o.x,o.y,t.x,t.y)&&area(t.prev,t,t.next)>=0)return!1;t=t.next}return!0}function isEarHashed(e,t,n,s){var r=e.prev,c=e,o=e.next;if(area(r,c,o)>=0)return!1;for(var u=r.x<c.x?r.x<o.x?r.x:o.x:c.x<o.x?c.x:o.x,h=r.y<c.y?r.y<o.y?r.y:o.y:c.y<o.y?c.y:o.y,m=r.x>c.x?r.x>o.x?r.x:o.x:c.x>o.x?c.x:o.x,f=r.y>c.y?r.y>o.y?r.y:o.y:c.y>o.y?c.y:o.y,l=zOrder(u,h,t,n,s),d=zOrder(m,f,t,n,s),i=e.prevZ,a=e.nextZ;i&&i.z>=l&&a&&a.z<=d;){if(i!==e.prev&&i!==e.next&&pointInTriangle(r.x,r.y,c.x,c.y,o.x,o.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return!1;if(i=i.prevZ,a!==e.prev&&a!==e.next&&pointInTriangle(r.x,r.y,c.x,c.y,o.x,o.y,a.x,a.y)&&area(a.prev,a,a.next)>=0)return!1;a=a.nextZ}for(;i&&i.z>=l;){if(i!==e.prev&&i!==e.next&&pointInTriangle(r.x,r.y,c.x,c.y,o.x,o.y,i.x,i.y)&&area(i.prev,i,i.next)>=0)return!1;i=i.prevZ}for(;a&&a.z<=d;){if(a!==e.prev&&a!==e.next&&pointInTriangle(r.x,r.y,c.x,c.y,o.x,o.y,a.x,a.y)&&area(a.prev,a,a.next)>=0)return!1;a=a.nextZ}return!0}function cureLocalIntersections(e,t,n){s=e;do{var s,i=s.prev,o=s.next.next;!equals(i,o)&&intersects(i,s,s.next,o)&&locallyInside(i,o)&&locallyInside(o,i)&&(t.push(i.i/n),t.push(s.i/n),t.push(o.i/n),removeNode(s),removeNode(s.next),s=e=o),s=s.next}while(s!==e)return s}function splitEarcut(e,t,n,s,o,i){var r,c,a=e;do{for(r=a.next.next;r!==a.prev;){if(a.i!==r.i&&isValidDiagonal(a,r)){c=splitPolygon(a,r),a=filterPoints(a,a.next),c=filterPoints(c,c.next),earcutLinked(a,t,n,s,o,i),earcutLinked(c,t,n,s,o,i);return}r=r.next}a=a.next}while(a!==e)}function eliminateHoles(e,t,n,s){var o,i,r,c,l,a=[];for(o=0,r=t.length;o<r;o++)c=t[o]*s,l=o<r-1?t[o+1]*s:e.length,i=linkedList(e,c,l,s,!1),i===i.next&&(i.steiner=!0),a.push(getLeftmost(i));a.sort(compareX);for(o=0;o<a.length;o++)eliminateHole(a[o],n),n=filterPoints(n,n.next);return n}function compareX(e,t){return e.x-t.x}function eliminateHole(e,t){if(t=findHoleBridge(e,t),t){var n=splitPolygon(t,e);filterPoints(n,n.next)}}function findHoleBridge(e,t){var o,r,n=t,i=e.x,s=e.y,a=-(1/0);do{if(s<=n.y&&s>=n.next.y&&n.next.y!==n.y&&(r=n.x+(s-n.y)*(n.next.x-n.x)/(n.next.y-n.y),r<=i&&r>a)){if(a=r,r===i){if(s===n.y)return n;if(s===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}n=n.next}while(n!==t)if(!o)return null;if(i===a)return o.prev;for(var c,h=o,u=o.x,l=o.y,d=1/0,n=o.next;n!==h;)i>=n.x&&n.x>=u&&i!==n.x&&pointInTriangle(s<l?i:a,s,u,l,s<l?a:i,s,n.x,n.y)&&(c=Math.abs(s-n.y)/(i-n.x),(c<d||c===d&&n.x>o.x)&&locallyInside(n,e)&&(o=n,d=c)),n=n.next;return o}function indexCurve(e,t,n,s){var o=e;do o.z===null&&(o.z=zOrder(o.x,o.y,t,n,s)),o.prevZ=o.prev,o.nextZ=o.next,o=o.next;while(o!==e)o.prevZ.nextZ=null,o.prevZ=null,sortLinked(o)}function sortLinked(e){var t,n,s,o,i,a,r,c,l=1;do{for(n=e,e=null,o=null,c=0;n;){c++,t=n,i=0;for(r=0;r<l;r++)if(i++,t=t.nextZ,!t)break;for(a=l;i>0||a>0&&t;)i!==0&&(a===0||!t||n.z<=t.z)?(s=n,n=n.nextZ,i--):(s=t,t=t.nextZ,a--),o?o.nextZ=s:e=s,s.prevZ=o,o=s;n=t}o.nextZ=null,l*=2}while(c>1)return e}function zOrder(e,t,n,s,o){return e=32767*(e-n)*o,t=32767*(t-s)*o,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function getLeftmost(e){var t=e,n=e;do(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next;while(t!==e)return n}function pointInTriangle(e,t,n,s,o,i,a,r){return(o-a)*(t-r)-(e-a)*(i-r)>=0&&(e-a)*(s-r)-(n-a)*(t-r)>=0&&(n-a)*(i-r)-(o-a)*(s-r)>=0}function isValidDiagonal(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!intersectsPolygon(e,t)&&locallyInside(e,t)&&locallyInside(t,e)&&middleInside(e,t)}function area(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function equals(e,t){return e.x===t.x&&e.y===t.y}function intersects(e,t,n,s){return!!(equals(e,n)&&equals(t,s)||equals(e,s)&&equals(n,t))||area(e,t,n)>0!==area(e,t,s)>0&&area(n,s,e)>0!==area(n,s,t)>0}function intersectsPolygon(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&intersects(n,n.next,e,t))return!0;n=n.next}while(n!==e)return!1}function locallyInside(e,t){return area(e.prev,e,e.next)<0?area(e,t,e.next)>=0&&area(e,e.prev,t)>=0:area(e,t,e.prev)<0||area(e,e.next,t)<0}function middleInside(e,t){var n=e,s=!1,i=(e.x+t.x)/2,o=(e.y+t.y)/2;do n.y>o!==n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(s=!s),n=n.next;while(n!==e)return s}function splitPolygon(e,t){var s=new Node(e.i,e.x,e.y),n=new Node(t.i,t.x,t.y),o=e.next,i=t.prev;return e.next=t,t.prev=e,s.next=o,o.prev=s,n.next=s,s.prev=n,i.next=n,n.prev=i,n}function insertNode(e,t,n,s){var o=new Node(e,t,n);return s?(o.next=s.next,o.prev=s,s.next.prev=o,s.next=o):(o.prev=o,o.next=o),o}function removeNode(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Node(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function signedArea(e,t,n,s){i=0;for(var i,o=t,a=n-s;o<n;o+=s)i+=(e[a]-e[o])*(e[o+1]+e[a+1]),a=o;return i}ShapeUtils={area:function(e){n=e.length,s=0;for(var n,s,o=n-1,t=0;t<n;o=t++)s+=e[o].x*e[t].y-e[t].x*e[o].y;return s*.5},isClockWise:function(e){return ShapeUtils.area(e)<0},triangulateShape:function(e,t){var n,o,i,s=[],a=[],r=[];removeDupEndPts(e),addContour(s,e),o=e.length,t.forEach(removeDupEndPts);for(n=0;n<t.length;n++)a.push(o),o+=t[n].length,addContour(s,t[n]);i=Earcut.triangulate(s,a);for(n=0;n<i.length;n+=3)r.push(i.slice(n,n+3));return r}};function removeDupEndPts(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function addContour(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}function ExtrudeGeometry(e,t){Geometry.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},this.fromBufferGeometry(new ExtrudeBufferGeometry(e,t)),this.mergeVertices()}ExtrudeGeometry.prototype=Object.create(Geometry.prototype),ExtrudeGeometry.prototype.constructor=ExtrudeGeometry,ExtrudeGeometry.prototype.toJSON=function(){var e=Geometry.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return toJSON(t,n,e)};function ExtrudeBufferGeometry(e,t){BufferGeometry.call(this),this.type="ExtrudeBufferGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e],s=this,n=[],o=[];for(var n,s,o,a,i=0,r=e.length;i<r;i++)a=e[i],c(a);this.setAttribute("position",new Float32BufferAttribute(n,3)),this.setAttribute("uv",new Float32BufferAttribute(o,2)),this.computeVertexNormals();function c(e){if(A=[],ee=t.curveSegments!==void 0?t.curveSegments:12,m=t.steps!==void 0?t.steps:1,I=t.depth!==void 0?t.depth:100,F=t.bevelEnabled===void 0||t.bevelEnabled,U=t.bevelThickness!==void 0?t.bevelThickness:6,W=t.bevelSize!==void 0?t.bevelSize:U-2,N=t.bevelOffset!==void 0?t.bevelOffset:0,E=t.bevelSegments!==void 0?t.bevelSegments:3,q=t.extrudePath,X=t.UVGenerator!==void 0?t.UVGenerator:WorldUVGenerator,t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),I=t.amount),D=!1,q&&(L=q.getSpacedPoints(m),D=!0,F=!1,V=q.computeFrenetFrames(m,!1),R=new Vector3,$=new Vector3,_=new Vector3),F||(E=0,U=0,W=0,N=0),G=e.extractPoints(ee),h=G.shape,u=G.holes,J=!ShapeUtils.isClockWise(h),J){h=h.reverse();for(a=0,f=u.length;a<f;a++)c=u[a],ShapeUtils.isClockWise(c)&&(u[a]=c.reverse())}T=ShapeUtils.triangulateShape(h,u),p=h;for(a=0,f=u.length;a<f;a++)c=u[a],h=h.concat(c);function z(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}g=h.length,H=T.length;function Q(e,t,n){var a,r,l,d,u,h,m,f,p,g,b,j,s=e.x-t.x,o=e.y-t.y,i=n.x-e.x,c=n.y-e.y,v=s*s+o*o,y=s*c-o*i;if(Math.abs(y)>Number.EPSILON){if(h=Math.sqrt(v),m=Math.sqrt(i*i+c*c),f=t.x-o/h,u=t.y+s/h,b=n.x-c/m,j=n.y+i/m,p=((b-f)*c-(j-u)*i)/(s*c-o*i),a=f+s*p-e.x,r=u+o*p-e.y,g=a*a+r*r,g<=2)return new Vector2(a,r);l=Math.sqrt(g/2)}else d=!1,s>Number.EPSILON?i>Number.EPSILON&&(d=!0):s<-Number.EPSILON?i<-Number.EPSILON&&(d=!0):Math.sign(o)===Math.sign(c)&&(d=!0),d?(a=-o,r=s,l=Math.sqrt(v)):(a=s,r=o,l=Math.sqrt(v/2));return new Vector2(a/l,r/l)}B=[];for(var a,r,c,d,u,h,m,f,p,g,b,_,x,C,E,k,A,S,M,F,T,D,N,L,R,P,H,I,B,V,$,W,U,K,q,G,X,J,ee,i=0,l=p.length,j=l-1,y=i+1;i<l;i++,j++,y++)j===l&&(j=0),y===l&&(y=0),B[i]=Q(p[i],p[j],p[y]);K=[],P=B.concat();for(a=0,f=u.length;a<f;a++){c=u[a],C=[];for(i=0,l=c.length,j=l-1,y=i+1;i<l;i++,j++,y++)j===l&&(j=0),y===l&&(y=0),C[i]=Q(c[i],c[j],c[y]);K.push(C),P=P.concat(C)}for(x=0;x<E;x++){M=x/E,S=U*Math.cos(M*Math.PI/2),b=W*Math.sin(M*Math.PI/2)+N;for(i=0,l=p.length;i<l;i++)r=z(p[i],B[i],b),v(r.x,r.y,-S);for(a=0,f=u.length;a<f;a++){c=u[a],C=K[a];for(i=0,l=c.length;i<l;i++)r=z(c[i],C[i],b),v(r.x,r.y,-S)}}b=W+N;for(i=0;i<g;i++)r=F?z(h[i],P[i],b):h[i],D?($.copy(V.normals[0]).multiplyScalar(r.x),R.copy(V.binormals[0]).multiplyScalar(r.y),_.copy(L[0]).add($).add(R),v(_.x,_.y,_.z)):v(r.x,r.y,0);for(k=1;k<=m;k++)for(i=0;i<g;i++)r=F?z(h[i],P[i],b):h[i],D?($.copy(V.normals[k]).multiplyScalar(r.x),R.copy(V.binormals[k]).multiplyScalar(r.y),_.copy(L[k]).add($).add(R),v(_.x,_.y,_.z)):v(r.x,r.y,I/m*k);for(x=E-1;x>=0;x--){M=x/E,S=U*Math.cos(M*Math.PI/2),b=W*Math.sin(M*Math.PI/2)+N;for(i=0,l=p.length;i<l;i++)r=z(p[i],B[i],b),v(r.x,r.y,I+S);for(a=0,f=u.length;a<f;a++){c=u[a],C=K[a];for(i=0,l=c.length;i<l;i++)r=z(c[i],C[i],b),D?v(r.x,r.y+L[m-1].y,L[m-1].x+S):v(r.x,r.y,I+S)}}ne(),te();function ne(){var e,t,o=n.length/3;if(F){t=0,e=g*t;for(i=0;i<H;i++)d=T[i],Y(d[2]+e,d[1]+e,d[0]+e);t=m+E*2,e=g*t;for(i=0;i<H;i++)d=T[i],Y(d[0]+e,d[1]+e,d[2]+e)}else{for(i=0;i<H;i++)d=T[i],Y(d[2],d[1],d[0]);for(i=0;i<H;i++)d=T[i],Y(d[0]+g*m,d[1]+g*m,d[2]+g*m)}s.addGroup(o,n.length/3-o,0)}function te(){var t=n.length/3,e=0;Z(p,e),e+=p.length;for(a=0,f=u.length;a<f;a++)c=u[a],Z(c,e),e+=c.length;s.addGroup(t,n.length/3-t,1)}function Z(e,t){for(i=e.length;--i>=0;){o=i,s=i-1,s<0&&(s=e.length-1),n=0,c=m+E*2;for(n=0;n<c;n++){var n,s,o,c,a=g*n,r=g*(n+1),l=t+o+a,d=t+s+a,u=t+s+r,h=t+o+r;se(l,d,u,h)}}}function v(e,t,n){A.push(e),A.push(t),A.push(n)}function Y(e,t,o){w(e),w(t),w(o);var i=n.length/3,a=X.generateTopUV(s,n,i-3,i-2,i-1);O(a[0]),O(a[1]),O(a[2])}function se(e,t,o,i){w(e),w(t),w(i),w(t),w(o),w(i);var r=n.length/3,a=X.generateSideWallUV(s,n,r-6,r-3,r-2,r-1);O(a[0]),O(a[1]),O(a[3]),O(a[1]),O(a[2]),O(a[3])}function w(e){n.push(A[e*3+0]),n.push(A[e*3+1]),n.push(A[e*3+2])}function O(e){o.push(e.x),o.push(e.y)}}}ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry,ExtrudeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this),t=this.parameters.shapes,n=this.parameters.options;return toJSON(t,n,e)},WorldUVGenerator={generateTopUV:function(e,t,n,s,o){var i=t[n*3],a=t[n*3+1],r=t[s*3],c=t[s*3+1],l=t[o*3],d=t[o*3+1];return[new Vector2(i,a),new Vector2(r,c),new Vector2(l,d)]},generateSideWallUV:function(e,t,n,s,o,i){var h=t[n*3],a=t[n*3+1],r=t[n*3+2],m=t[s*3],c=t[s*3+1],l=t[s*3+2],f=t[o*3],p=t[o*3+1],d=t[o*3+2],g=t[i*3],v=t[i*3+1],u=t[i*3+2];return Math.abs(a-c)<.01?[new Vector2(h,1-r),new Vector2(m,1-l),new Vector2(f,1-d),new Vector2(g,1-u)]:[new Vector2(a,1-r),new Vector2(c,1-l),new Vector2(p,1-d),new Vector2(v,1-u)]}};function toJSON(e,t,n){if(n.shapes=[],Array.isArray(e))for(var o,s=0,i=e.length;s<i;s++)o=e[s],n.shapes.push(o.uuid);else n.shapes.push(e.uuid);return t.extrudePath!==void 0&&(n.options.extrudePath=t.extrudePath.toJSON()),n}function TextGeometry(e,t){Geometry.call(this),this.type="TextGeometry",this.parameters={text:e,parameters:t},this.fromBufferGeometry(new TextBufferGeometry(e,t)),this.mergeVertices()}TextGeometry.prototype=Object.create(Geometry.prototype),TextGeometry.prototype.constructor=TextGeometry;function TextBufferGeometry(e,t){t=t||{};var s,n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Geometry;s=n.generateShapes(e,t.size),t.depth=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),ExtrudeBufferGeometry.call(this,s,t),this.type="TextBufferGeometry"}TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype),TextBufferGeometry.prototype.constructor=TextBufferGeometry;function SphereGeometry(e,t,n,s,o,i,a){Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:o,thetaStart:i,thetaLength:a},this.fromBufferGeometry(new SphereBufferGeometry(e,t,n,s,o,i,a)),this.mergeVertices()}SphereGeometry.prototype=Object.create(Geometry.prototype),SphereGeometry.prototype.constructor=SphereGeometry;function SphereBufferGeometry(e,t,n,s,o,i,a){BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:o,thetaStart:i,thetaLength:a},e=e||1,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),s=s!==void 0?s:0,o=o!==void 0?o:Math.PI*2,i=i!==void 0?i:0,a=a!==void 0?a:Math.PI;var r,c,d,h,m,g,v,b,O,x,_=Math.min(i+a,Math.PI),C=0,u=[],l=new Vector3,f=new Vector3,p=[],w=[],j=[],y=[];for(r=0;r<=n;r++){g=[],d=r/n,h=0,r==0&&i==0?h=.5/t:r==n&&_==Math.PI&&(h=-.5/t);for(c=0;c<=t;c++)m=c/t,l.x=-e*Math.cos(s+m*o)*Math.sin(i+d*a),l.y=e*Math.cos(i+d*a),l.z=e*Math.sin(s+m*o)*Math.sin(i+d*a),w.push(l.x,l.y,l.z),f.copy(l).normalize(),j.push(f.x,f.y,f.z),y.push(m+h,1-d),g.push(C++);u.push(g)}for(r=0;r<n;r++)for(c=0;c<t;c++)O=u[r][c+1],v=u[r][c],x=u[r+1][c],b=u[r+1][c+1],(r!==0||i>0)&&p.push(O,v,b),(r!==n-1||_<Math.PI)&&p.push(v,x,b);this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(w,3)),this.setAttribute("normal",new Float32BufferAttribute(j,3)),this.setAttribute("uv",new Float32BufferAttribute(y,2))}SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype),SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;function RingGeometry(e,t,n,s,o,i){Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:s,thetaStart:o,thetaLength:i},this.fromBufferGeometry(new RingBufferGeometry(e,t,n,s,o,i)),this.mergeVertices()}RingGeometry.prototype=Object.create(Geometry.prototype),RingGeometry.prototype.constructor=RingGeometry;function RingBufferGeometry(e,t,n,s,o,i){BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:s,thetaStart:o,thetaLength:i},e=e||.5,t=t||1,o=o!==void 0?o:0,i=i!==void 0?i:Math.PI*2,n=n!==void 0?Math.max(3,n):8,s=s!==void 0?Math.max(1,s):1;var a,r,c,m,f,b,j,y,h=[],v=[],g=[],p=[],u=e,_=(t-e)/s,l=new Vector3,d=new Vector2;for(c=0;c<=s;c++){for(r=0;r<=n;r++)a=o+r/n*i,l.x=u*Math.cos(a),l.y=u*Math.sin(a),v.push(l.x,l.y,l.z),g.push(0,0,1),d.x=(l.x/t+1)/2,d.y=(l.y/t+1)/2,p.push(d.x,d.y);u+=_}for(c=0;c<s;c++){b=c*(n+1);for(r=0;r<n;r++)a=r+b,j=a,m=a+n+1,y=a+n+2,f=a+1,h.push(j,m,f),h.push(m,y,f)}this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(v,3)),this.setAttribute("normal",new Float32BufferAttribute(g,3)),this.setAttribute("uv",new Float32BufferAttribute(p,2))}RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype),RingBufferGeometry.prototype.constructor=RingBufferGeometry;function LatheGeometry(e,t,n,s){Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:s},this.fromBufferGeometry(new LatheBufferGeometry(e,t,n,s)),this.mergeVertices()}LatheGeometry.prototype=Object.create(Geometry.prototype),LatheGeometry.prototype.constructor=LatheGeometry;function LatheBufferGeometry(e,t,n,s){BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:s},t=Math.floor(t)||12,n=n||0,s=s||Math.PI*2,s=MathUtils.clamp(s,0,Math.PI*2);var o,i,a,r,l,d,u,m,f,g,v,b,j,y,p=[],w=[],_=[],O=1/t,c=new Vector3,h=new Vector2;for(r=0;r<=t;r++){g=n+r*O*s,v=Math.sin(g),b=Math.cos(g);for(o=0;o<=e.length-1;o++)c.x=e[o].x*v,c.y=e[o].y,c.z=e[o].x*b,w.push(c.x,c.y,c.z),h.x=r/t,h.y=o/(e.length-1),_.push(h.x,h.y)}for(r=0;r<t;r++)for(o=0;o<e.length-1;o++)a=o+r*e.length,j=a,f=a+e.length,y=a+e.length+1,m=a+1,p.push(j,f,m),p.push(f,y,m);if(this.setIndex(p),this.setAttribute("position",new Float32BufferAttribute(w,3)),this.setAttribute("uv",new Float32BufferAttribute(_,2)),this.computeVertexNormals(),s===Math.PI*2){i=this.attributes.normal.array,u=new Vector3,d=new Vector3,l=new Vector3,a=t*e.length*3;for(r=0,o=0;r<e.length;r++,o+=3)u.x=i[o+0],u.y=i[o+1],u.z=i[o+2],d.x=i[a+o+0],d.y=i[a+o+1],d.z=i[a+o+2],l.addVectors(u,d).normalize(),i[o+0]=i[a+o+0]=l.x,i[o+1]=i[a+o+1]=l.y,i[o+2]=i[a+o+2]=l.z}}LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype),LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;function ShapeGeometry(e,t){Geometry.call(this),this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new ShapeBufferGeometry(e,t)),this.mergeVertices()}ShapeGeometry.prototype=Object.create(Geometry.prototype),ShapeGeometry.prototype.constructor=ShapeGeometry,ShapeGeometry.prototype.toJSON=function(){var e=Geometry.prototype.toJSON.call(this),t=this.parameters.shapes;return toJSON$1(t,e)};function ShapeBufferGeometry(e,t){BufferGeometry.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var n,i=[],o=[],a=[],r=[],c=0,s=0;if(Array.isArray(e)===!1)l(e);else for(n=0;n<e.length;n++)l(e[n]),this.addGroup(c,s,n),c+=s,s=0;this.setIndex(i),this.setAttribute("position",new Float32BufferAttribute(o,3)),this.setAttribute("normal",new Float32BufferAttribute(a,3)),this.setAttribute("uv",new Float32BufferAttribute(r,2));function l(e){var n,c,u,h,m,f,v,b,j,p=o.length/3,g=e.extractPoints(t),l=g.shape,d=g.holes;ShapeUtils.isClockWise(l)===!1&&(l=l.reverse());for(n=0,c=d.length;n<c;n++)u=d[n],ShapeUtils.isClockWise(u)===!0&&(d[n]=u.reverse());f=ShapeUtils.triangulateShape(l,d);for(n=0,c=d.length;n<c;n++)u=d[n],l=l.concat(u);for(n=0,c=l.length;n<c;n++)h=l[n],o.push(h.x,h.y,0),a.push(0,0,1),r.push(h.x,h.y);for(n=0,c=f.length;n<c;n++)m=f[n],v=m[0]+p,b=m[1]+p,j=m[2]+p,i.push(v,b,j),s+=3}}ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry,ShapeBufferGeometry.prototype.toJSON=function(){var e=BufferGeometry.prototype.toJSON.call(this),t=this.parameters.shapes;return toJSON$1(t,e)};function toJSON$1(e,t){if(t.shapes=[],Array.isArray(e))for(var s,n=0,o=e.length;n<o;n++)s=e[n],t.shapes.push(s.uuid);else t.shapes.push(e.uuid);return t}function EdgesGeometry(e,t){BufferGeometry.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=t!==void 0?t:1;var n,s,i,a,r,l,d,u,h,m,f,v,p=[],b=Math.cos(MathUtils.DEG2RAD*t),o=[0,0],c={},g=["a","b","c"];e.isBufferGeometry?(s=new Geometry,s.fromBufferGeometry(e)):s=e.clone(),s.mergeVertices(),s.computeFaceNormals(),h=s.vertices,r=s.faces;for(a=0,v=r.length;a<v;a++){m=r[a];for(l=0;l<3;l++)u=m[g[l]],f=m[g[(l+1)%3]],o[0]=Math.min(u,f),o[1]=Math.max(u,f),d=o[0]+","+o[1],c[d]===void 0?c[d]={index1:o[0],index2:o[1],face1:a,face2:void 0}:c[d].face2=a}for(d in c)i=c[d],(i.face2===void 0||r[i.face1].normal.dot(r[i.face2].normal)<=b)&&(n=h[i.index1],p.push(n.x,n.y,n.z),n=h[i.index2],p.push(n.x,n.y,n.z));this.setAttribute("position",new Float32BufferAttribute(p,3))}EdgesGeometry.prototype=Object.create(BufferGeometry.prototype),EdgesGeometry.prototype.constructor=EdgesGeometry;function CylinderGeometry(e,t,n,s,o,i,a,r){Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:s,heightSegments:o,openEnded:i,thetaStart:a,thetaLength:r},this.fromBufferGeometry(new CylinderBufferGeometry(e,t,n,s,o,i,a,r)),this.mergeVertices()}CylinderGeometry.prototype=Object.create(Geometry.prototype),CylinderGeometry.prototype.constructor=CylinderGeometry;function CylinderBufferGeometry(e,t,n,s,o,i,a,r){BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:s,heightSegments:o,openEnded:i,thetaStart:a,thetaLength:r};var c,l,d,u,h,m,f,p,g=this;e=e!==void 0?e:1,t=t!==void 0?t:1,n=n||1,s=Math.floor(s)||8,o=Math.floor(o)||1,i=i!==void 0&&i,a=a!==void 0?a:0,r=r!==void 0?r:Math.PI*2,c=[],u=[],h=[],m=[],l=0,d=[],p=n/2,f=0,b(),i===!1&&(e>0&&v(!0),t>0&&v(!1)),this.setIndex(c),this.setAttribute("position",new Float32BufferAttribute(u,3)),this.setAttribute("normal",new Float32BufferAttribute(h,3)),this.setAttribute("uv",new Float32BufferAttribute(m,2));function b(){var i,v,j,_,w,x,C,E,k,A,S,M,F,y=new Vector3,b=new Vector3,O=0,T=(t-e)/n;for(i=0;i<=o;i++){w=[],j=i/o,_=j*(t-e)+e;for(v=0;v<=s;v++)x=v/s,C=x*r+a,E=Math.sin(C),k=Math.cos(C),b.x=_*E,b.y=-j*n+p,b.z=_*k,u.push(b.x,b.y,b.z),y.set(E,T,k).normalize(),h.push(y.x,y.y,y.z),m.push(x,1-j),w.push(l++);d.push(w)}for(v=0;v<s;v++)for(i=0;i<o;i++)M=d[i][v],A=d[i+1][v],F=d[i+1][v+1],S=d[i][v+1],c.push(M,A,S),c.push(A,F,S),O+=6;g.addGroup(f,O,0),f+=O}function v(n){var o,v,j,_,w,O,C,E,b=new Vector2,i=new Vector3,y=0,x=n===!0?e:t,d=n===!0?1:-1,k=l;for(o=1;o<=s;o++)u.push(0,p*d,0),h.push(0,d,0),m.push(.5,.5),l++;E=l;for(o=0;o<=s;o++)C=o/s,j=C*r+a,_=Math.cos(j),w=Math.sin(j),i.x=x*w,i.y=p*d,i.z=x*_,u.push(i.x,i.y,i.z),h.push(0,d,0),b.x=_*.5+.5,b.y=w*.5*d+.5,m.push(b.x,b.y),l++;for(o=0;o<s;o++)O=k+o,v=E+o,n===!0?c.push(v,v+1,O):c.push(v+1,v,O),y+=3;g.addGroup(f,y,n===!0?1:2),f+=y}}CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;function ConeGeometry(e,t,n,s,o,i,a){CylinderGeometry.call(this,0,e,t,n,s,o,i,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:i,thetaLength:a}}ConeGeometry.prototype=Object.create(CylinderGeometry.prototype),ConeGeometry.prototype.constructor=ConeGeometry;function ConeBufferGeometry(e,t,n,s,o,i,a){CylinderBufferGeometry.call(this,0,e,t,n,s,o,i,a),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:i,thetaLength:a}}ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype),ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;function CircleGeometry(e,t,n,s){Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:s},this.fromBufferGeometry(new CircleBufferGeometry(e,t,n,s)),this.mergeVertices()}CircleGeometry.prototype=Object.create(Geometry.prototype),CircleGeometry.prototype.constructor=CircleGeometry;function CircleBufferGeometry(e,t,n,s){BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:s},e=e||1,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,s=s!==void 0?s:Math.PI*2;var o,r,u,h=[],i=[],l=[],d=[],a=new Vector3,c=new Vector2;i.push(0,0,0),l.push(0,0,1),d.push(.5,.5);for(r=0,o=3;r<=t;r++,o+=3)u=n+r/t*s,a.x=e*Math.cos(u),a.y=e*Math.sin(u),i.push(a.x,a.y,a.z),l.push(0,0,1),c.x=(i[o]/e+1)/2,c.y=(i[o+1]/e+1)/2,d.push(c.x,c.y);for(o=1;o<=t;o++)h.push(o,o+1,0);this.setIndex(h),this.setAttribute("position",new Float32BufferAttribute(i,3)),this.setAttribute("normal",new Float32BufferAttribute(l,3)),this.setAttribute("uv",new Float32BufferAttribute(d,2))}CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CircleBufferGeometry.prototype.constructor=CircleBufferGeometry,Geometries=Object.freeze({__proto__:null,WireframeGeometry,ParametricGeometry,ParametricBufferGeometry,TetrahedronGeometry,TetrahedronBufferGeometry,OctahedronGeometry,OctahedronBufferGeometry,IcosahedronGeometry,IcosahedronBufferGeometry,DodecahedronGeometry,DodecahedronBufferGeometry,PolyhedronGeometry,PolyhedronBufferGeometry,TubeGeometry,TubeBufferGeometry,TorusKnotGeometry,TorusKnotBufferGeometry,TorusGeometry,TorusBufferGeometry,TextGeometry,TextBufferGeometry,SphereGeometry,SphereBufferGeometry,RingGeometry,RingBufferGeometry,PlaneGeometry,PlaneBufferGeometry,LatheGeometry,LatheBufferGeometry,ShapeGeometry,ShapeBufferGeometry,ExtrudeGeometry,ExtrudeBufferGeometry,EdgesGeometry,ConeGeometry,ConeBufferGeometry,CylinderGeometry,CylinderBufferGeometry,CircleGeometry,CircleBufferGeometry,BoxGeometry,BoxBufferGeometry});function ShadowMaterial(e){Material.call(this),this.type="ShadowMaterial",this.color=new Color(0),this.transparent=!0,this.setValues(e)}ShadowMaterial.prototype=Object.create(Material.prototype),ShadowMaterial.prototype.constructor=ShadowMaterial,ShadowMaterial.prototype.isShadowMaterial=!0,ShadowMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this};function RawShaderMaterial(e){ShaderMaterial.call(this,e),this.type="RawShaderMaterial"}RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype),RawShaderMaterial.prototype.constructor=RawShaderMaterial,RawShaderMaterial.prototype.isRawShaderMaterial=!0;function MeshStandardMaterial(e){Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Color(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshStandardMaterial.prototype=Object.create(Material.prototype),MeshStandardMaterial.prototype.constructor=MeshStandardMaterial,MeshStandardMaterial.prototype.isMeshStandardMaterial=!0,MeshStandardMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshPhysicalMaterial(e){MeshStandardMaterial.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearcoat=0,this.clearcoatRoughness=0,this.sheen=null,this.clearcoatNormalScale=new Vector2(1,1),this.clearcoatNormalMap=null,this.transparency=0,this.setValues(e)}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype),MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial,MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=!0,MeshPhysicalMaterial.prototype.copy=function(e){return MeshStandardMaterial.prototype.copy.call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearcoat=e.clearcoat,this.clearcoatRoughness=e.clearcoatRoughness,e.sheen?this.sheen=(this.sheen||new Color).copy(e.sheen):this.sheen=null,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.transparency=e.transparency,this};function MeshPhongMaterial(e){Material.call(this),this.type="MeshPhongMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshPhongMaterial.prototype=Object.create(Material.prototype),MeshPhongMaterial.prototype.constructor=MeshPhongMaterial,MeshPhongMaterial.prototype.isMeshPhongMaterial=!0,MeshPhongMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshToonMaterial(e){Material.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Color(16777215),this.specular=new Color(1118481),this.shininess=30,this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshToonMaterial.prototype=Object.create(Material.prototype),MeshToonMaterial.prototype.constructor=MeshToonMaterial,MeshToonMaterial.prototype.isMeshToonMaterial=!0,MeshToonMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshNormalMaterial(e){Material.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshNormalMaterial.prototype=Object.create(Material.prototype),MeshNormalMaterial.prototype.constructor=MeshNormalMaterial,MeshNormalMaterial.prototype.isMeshNormalMaterial=!0,MeshNormalMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshLambertMaterial(e){Material.call(this),this.type="MeshLambertMaterial",this.color=new Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshLambertMaterial.prototype=Object.create(Material.prototype),MeshLambertMaterial.prototype.constructor=MeshLambertMaterial,MeshLambertMaterial.prototype.isMeshLambertMaterial=!0,MeshLambertMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function MeshMatcapMaterial(e){Material.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Color(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=TangentSpaceNormalMap,this.normalScale=new Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}MeshMatcapMaterial.prototype=Object.create(Material.prototype),MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial,MeshMatcapMaterial.prototype.isMeshMatcapMaterial=!0,MeshMatcapMaterial.prototype.copy=function(e){return Material.prototype.copy.call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function LineDashedMaterial(e){LineBasicMaterial.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype),LineDashedMaterial.prototype.constructor=LineDashedMaterial,LineDashedMaterial.prototype.isLineDashedMaterial=!0,LineDashedMaterial.prototype.copy=function(e){return LineBasicMaterial.prototype.copy.call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this},Materials=Object.freeze({__proto__:null,ShadowMaterial,SpriteMaterial,RawShaderMaterial,ShaderMaterial,PointsMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshPhongMaterial,MeshToonMaterial,MeshNormalMaterial,MeshLambertMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshBasicMaterial,MeshMatcapMaterial,LineDashedMaterial,LineBasicMaterial,Material}),AnimationUtils={arraySlice:function(e,t,n){return AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,n!==void 0?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function o(t,n){return e[t]-e[n]}for(var s=e.length,n=new Array(s),t=0;t!==s;++t)n[t]=t;return n.sort(o),n},sortedArray:function(e,t,n){o=e.length,i=new e.constructor(o);for(var s,o,i,c,a=0,r=0;r!==o;++a){c=n[a]*t;for(s=0;s!==t;++s)i[r++]=e[c+s]}return i},flattenJSON:function(e,t,n,s){for(var i,a=1,o=e[0];o!==void 0&&o[s]===void 0;)o=e[a++];if(o===void 0)return;if(i=o[s],i===void 0)return;if(Array.isArray(i))do i=o[s],i!==void 0&&(t.push(o.time),n.push.apply(n,i)),o=e[a++];while(o!==void 0)else if(i.toArray!==void 0)do i=o[s],i!==void 0&&(t.push(o.time),i.toArray(n,n.length)),o=e[a++];while(o!==void 0)else do i=o[s],i!==void 0&&(t.push(o.time),n.push(i)),o=e[a++];while(o!==void 0)},subclip:function(e,t,n,s,o){o=o||30;var i,r,c,l,d,u,h,m,f,p,a=e.clone();a.name=t,h=[];for(i=0;i<a.tracks.length;++i){r=a.tracks[i],m=r.getValueSize(),l=[],f=[];for(c=0;c<r.times.length;++c){if(p=r.times[c]*o,p<n||p>=s)continue;l.push(r.times[c]);for(d=0;d<m;++d)f.push(r.values[c*m+d])}if(l.length===0)continue;r.times=AnimationUtils.convertArray(l,r.times.constructor),r.values=AnimationUtils.convertArray(f,r.values.constructor),h.push(r)}a.tracks=h,u=1/0;for(i=0;i<a.tracks.length;++i)u>a.tracks[i].times[0]&&(u=a.tracks[i].times[0]);for(i=0;i<a.tracks.length;++i)a.tracks[i].shift(-1*u);return a.resetDuration(),a}};function Interpolant(e,t,n,s){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=s!==void 0?s:new t.constructor(n),this.sampleValues=t,this.valueSize=n}Object.assign(Interpolant.prototype,{evaluate:function(e){var i,a,r,c,o=this.parameterPositions,t=this._cachedIndex,s=o[t],n=o[t-1];validate_interval:{seek:{linear_scan:{forward_scan:if(!(e<s)){for(a=t+2;;){if(s===void 0){if(e<n)break forward_scan;return t=o.length,this._cachedIndex=t,this.afterEnd_(t-1,e,n)}if(t===a)break;if(n=s,s=o[++t],e<s)break seek}i=o.length;break linear_scan}if(!(e>=n)){c=o[1],e<c&&(t=2,n=c);for(a=t-2;;){if(n===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,s);if(t===a)break;if(s=n,n=o[--t-1],e>=n)break seek}i=t,t=0;break linear_scan}break validate_interval}for(;t<i;)r=t+i>>>1,e<o[r]?i=r:t=r+1;if(s=o[t],n=o[t-1],n===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,s);if(s===void 0)return t=o.length,this._cachedIndex=t,this.afterEnd_(t-1,n,e)}this._cachedIndex=t,this.intervalChanged_(t,n,s)}return this.interpolate_(t,n,e,s)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var n=this.resultBuffer,o=this.sampleValues,s=this.valueSize,i=e*s,t=0;t!==s;++t)n[t]=o[i+t];return n},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Interpolant.prototype,{beforeStart_:Interpolant.prototype.copySampleValue_,afterEnd_:Interpolant.prototype.copySampleValue_});function CubicInterpolant(e,t,n,s){Interpolant.call(this,e,t,n,s),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(e,t,n){var c,l,s=this.parameterPositions,o=e-2,i=e+1,a=s[o],r=s[i];if(a===void 0)switch(this.getSettings_().endingStart){case ZeroSlopeEnding:o=e,a=2*t-n;break;case WrapAroundEnding:o=s.length-2,a=t+s[o]-s[o+1];break;default:o=e,a=n}if(r===void 0)switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:i=e,r=2*n-t;break;case WrapAroundEnding:i=1,r=n+s[1]-s[0];break;default:i=e-1,r=t}c=(n-t)*.5,l=this.valueSize,this._weightPrev=c/(t-a),this._weightNext=c/(r-n),this._offsetPrev=o*l,this._offsetNext=i*l},interpolate_:function(e,t,n,s){for(var m=this.resultBuffer,c=this.sampleValues,u=this.valueSize,h=e*u,f=h-u,y=this._offsetPrev,p=this._offsetNext,i=this._weightPrev,d=this._weightNext,a=(n-t)/(s-t),r=a*a,l=r*a,g=-i*l+2*i*r-i*a,v=(1+i)*l+(-1.5-2*i)*r+(-.5+i)*a+1,b=(-1-d)*l+(1.5+d)*r+.5*a,j=d*l-d*r,o=0;o!==u;++o)m[o]=g*c[y+o]+v*c[f+o]+b*c[h+o]+j*c[p+o];return m}});function LinearInterpolant(e,t,n,s){Interpolant.call(this,e,t,n,s)}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(e,t,n,s){for(var a=this.resultBuffer,r=this.sampleValues,i=this.valueSize,c=e*i,d=c-i,l=(n-t)/(s-t),u=1-l,o=0;o!==i;++o)a[o]=r[d+o]*u+r[c+o]*l;return a}});function DiscreteInterpolant(e,t,n,s){Interpolant.call(this,e,t,n,s)}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(e){return this.copySampleValue_(e-1)}});function KeyframeTrack(e,t,n,s){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=AnimationUtils.convertArray(t,this.TimeBufferType),this.values=AnimationUtils.convertArray(n,this.ValueBufferType),this.setInterpolation(s||this.DefaultInterpolation)}Object.assign(KeyframeTrack,{toJSON:function(e){var t,n,s=e.constructor;return s.toJSON!==void 0?t=s.toJSON(e):(t={name:e.name,times:AnimationUtils.convertArray(e.times,Array),values:AnimationUtils.convertArray(e.values,Array)},n=e.getInterpolation(),n!==e.DefaultInterpolation&&(t.interpolation=n)),t.type=e.ValueTypeName,t}}),Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){switch(e){case InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){var t,n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){t=this.times;for(var t,n=0,s=t.length;n!==s;++n)t[n]+=e}return this},scale:function(e){if(e!==1){t=this.times;for(var t,n=0,s=t.length;n!==s;++n)t[n]*=e}return this},trim:function(e,t){for(var a,o=this.times,i=o.length,s=0,n=i-1;s!==i&&o[s]<e;)++s;for(;n!==-1&&o[n]>t;)--n;return++n,(s!==0||n!==i)&&(s>=n&&(n=Math.max(n,1),s=n-1),a=this.getValueSize(),this.times=AnimationUtils.arraySlice(o,s,n),this.values=AnimationUtils.arraySlice(this.values,s*a,n*a)),this},validate:function(){t=!0,i=this.getValueSize(),i-Math.floor(i)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);var e,t,n,s,i,a,l,r=this.times,o=this.values,c=r.length;c===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1),s=null;for(e=0;e!==c;e++){if(n=r[e],typeof n=="number"&&isNaN(n)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,n),t=!1;break}if(s!==null&&s>n){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,n,s),t=!1;break}s=n}if(o!==void 0&&AnimationUtils.isTypedArray(o))for(e=0,l=o.length;e!==l;++e)if(a=o[e],isNaN(a)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,a),t=!1;break}return t},optimize:function(){for(var a,r,l,d,h,m,s=AnimationUtils.arraySlice(this.times),i=AnimationUtils.arraySlice(this.values),t=this.getValueSize(),g=this.getInterpolation()===InterpolateSmooth,n=1,c=s.length-1,o=1;o<c;++o){if(r=!1,a=s[o],m=s[o+1],a!==m&&(o!==1||a!==a[0]))if(g)r=!0;else for(var u=o*t,f=u-t,p=u+t,e=0;e!==t;++e)if(h=i[u+e],h!==i[f+e]||h!==i[p+e]){r=!0;break}if(r){if(o!==n){s[n]=s[o],l=o*t,d=n*t;for(e=0;e!==t;++e)i[d+e]=i[l+e]}++n}}if(c>0){s[n]=s[c];for(var l=c*t,d=n*t,e=0;e!==t;++e)i[d+e]=i[l+e];++n}return n!==s.length?(this.times=AnimationUtils.arraySlice(s,0,n),this.values=AnimationUtils.arraySlice(i,0,n*t)):(this.times=s,this.values=i),this},clone:function(){var t=AnimationUtils.arraySlice(this.times,0),n=AnimationUtils.arraySlice(this.values,0),s=this.constructor,e=new s(this.name,t,n);return e.createInterpolant=this.createInterpolant,e}});function BooleanKeyframeTrack(e,t,n){KeyframeTrack.call(this,e,t,n)}BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function ColorKeyframeTrack(e,t,n,s){KeyframeTrack.call(this,e,t,n,s)}ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:"color"});function NumberKeyframeTrack(e,t,n,s){KeyframeTrack.call(this,e,t,n,s)}NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:"number"});function QuaternionLinearInterpolant(e,t,n,s){Interpolant.call(this,e,t,n,s)}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(e,t,n,s){for(var a=this.resultBuffer,r=this.sampleValues,i=this.valueSize,o=e*i,c=(n-t)/(s-t),l=o+i;o!==l;o+=4)Quaternion.slerpFlat(a,0,r,o-i,r,o,c);return a}});function QuaternionKeyframeTrack(e,t,n,s){KeyframeTrack.call(this,e,t,n,s)}QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function StringKeyframeTrack(e,t,n,s){KeyframeTrack.call(this,e,t,n,s)}StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function VectorKeyframeTrack(e,t,n,s){KeyframeTrack.call(this,e,t,n,s)}VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:"vector"});function AnimationClip(e,t,n){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.uuid=MathUtils.generateUUID(),this.duration<0&&this.resetDuration()}function getTrackTypeForValueTypeName(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return VectorKeyframeTrack;case"color":return ColorKeyframeTrack;case"quaternion":return QuaternionKeyframeTrack;case"bool":case"boolean":return BooleanKeyframeTrack;case"string":return StringKeyframeTrack}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}function parseKeyframeTrack(e){if(e.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");if(t=getTrackTypeForValueTypeName(e.type),e.times===void 0){var t,n=[],s=[];AnimationUtils.flattenJSON(e.keys,n,s,"value"),e.times=n,e.values=s}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}Object.assign(AnimationClip,{parse:function(e){for(var n=[],s=e.tracks,o=1/(e.fps||1),t=0,i=s.length;t!==i;++t)n.push(parseKeyframeTrack(s[t]).scale(o));return new AnimationClip(e.name,e.duration,n)},toJSON:function(e){for(var n=[],s=e.tracks,o={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid},t=0,i=s.length;t!==i;++t)n.push(KeyframeTrack.toJSON(s[t]));return o},CreateFromMorphTargetSequence:function(e,t,n,s){for(var o,i,c,r=t.length,l=[],a=0;a<r;a++)o=[],i=[],o.push((a+r-1)%r,a,(a+1)%r),i.push(0,1,0),c=AnimationUtils.getKeyframeOrder(o),o=AnimationUtils.sortedArray(o,1,c),i=AnimationUtils.sortedArray(i,1,c),!s&&o[0]===0&&(o.push(r),i.push(i[0])),l.push(new NumberKeyframeTrack(".morphTargetInfluences["+t[a].name+"]",o,i).scale(1/n));return new AnimationClip(e,-1,l)},findByName:function(e,t){var n,o,s=e;Array.isArray(e)||(o=e,s=o.geometry&&o.geometry.animations||o.animations);for(n=0;n<s.length;n++)if(s[n].name===t)return s[n];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){o={},d=/^([\w-]*?)([\d]+)$/;for(var s,o,i,a,c,l,d,r=0,u=e.length;r<u;r++)c=e[r],i=c.name.match(d),i&&i.length>1&&(s=i[1],a=o[s],a||(o[s]=a=[]),a.push(c));l=[];for(s in o)l.push(AnimationClip.CreateFromMorphTargetSequence(s,o[s],t,n));return l},parseAnimation:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n,s,o,a,r,l,u,h,p,g,d=function(e,t,n,s,o){if(n.length!==0){var i=[],a=[];AnimationUtils.flattenJSON(n,i,a,s),i.length!==0&&o.push(new e(t,i,a))}},i=[],b=e.name||"default",f=e.length||-1,v=e.fps||30,m=e.hierarchy||[],c=0;c<m.length;c++){if(n=m[c].keys,!n||n.length===0)continue;if(n[0].morphTargets){r={};for(s=0;s<n.length;s++)if(n[s].morphTargets)for(o=0;o<n[s].morphTargets.length;o++)r[n[s].morphTargets[o]]=-1;for(p in r){l=[],u=[];for(o=0;o!==n[s].morphTargets.length;++o)h=n[s],l.push(h.time),u.push(h.morphTarget===p?1:0);i.push(new NumberKeyframeTrack(".morphTargetInfluence["+p+"]",l,u))}f=r.length*(v||1)}else a=".bones["+t[c].name+"]",d(VectorKeyframeTrack,a+".position",n,"pos",i),d(QuaternionKeyframeTrack,a+".quaternion",n,"rot",i),d(VectorKeyframeTrack,a+".scale",n,"scl",i)}return i.length===0?null:(g=new AnimationClip(b,f,i),g)}}),Object.assign(AnimationClip.prototype,{resetDuration:function(){for(var n,s=this.tracks,e=0,t=0,o=s.length;t!==o;++t)n=this.tracks[t],e=Math.max(e,n.times[n.times.length-1]);return this.duration=e,this},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},validate:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this},clone:function(){for(var t=[],e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new AnimationClip(this.name,this.duration,t)}}),Cache={enabled:!1,files:{},add:function(e,t){if(this.enabled===!1)return;this.files[e]=t},get:function(e){if(this.enabled===!1)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function LoadingManager(e,t,n){var s=this,r=!1,i=0,a=0,c=void 0,o=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){a++,r===!1&&s.onStart!==void 0&&s.onStart(e,i,a),r=!0},this.itemEnd=function(e){i++,s.onProgress!==void 0&&s.onProgress(e,i,a),i===a&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(e){s.onError!==void 0&&s.onError(e)},this.resolveURL=function(e){return c?c(e):e},this.setURLModifier=function(e){return c=e,this},this.addHandler=function(e,t){return o.push(e,t),this},this.removeHandler=function(e){var t=o.indexOf(e);return t!==-1&&o.splice(t,2),this},this.getHandler=function(e){for(var n,s,t=0,i=o.length;t<i;t+=2)if(n=o[t],s=o[t+1],n.global&&(n.lastIndex=0),n.test(e))return s;return null}}DefaultLoadingManager=new LoadingManager;function Loader(e){this.manager=e!==void 0?e:DefaultLoadingManager,this.crossOrigin="anonymous",this.path="",this.resourcePath=""}Object.assign(Loader.prototype,{load:function(){},parse:function(){},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this},setResourcePath:function(e){return this.resourcePath=e,this}}),loading={};function FileLoader(e){Loader.call(this,e)}FileLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FileLoader,load:function(e,t,n,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var o,a,r,c,l,d,u,h,f,p,g,v,i=this,m=Cache.get(e);if(m!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(m),i.manager.itemEnd(e)},0),m;if(loading[e]!==void 0){loading[e].push({onLoad:t,onProgress:n,onError:s});return}if(p=/^data:(.*?)(;base64)?,(.*)$/,c=e.match(p),c){u=c[1],f=!!c[2],a=c[3],a=decodeURIComponent(a),f&&(a=atob(a));try{switch(h=(this.responseType||"").toLowerCase(),h){case"arraybuffer":case"blob":d=new Uint8Array(a.length);for(l=0;l<a.length;l++)d[l]=a.charCodeAt(l);h==="blob"?r=new Blob([d.buffer],{type:u}):r=d.buffer;break;case"document":g=new DOMParser,r=g.parseFromString(a,u);break;case"json":r=JSON.parse(a);break;default:r=a;break}setTimeout(function(){t&&t(r),i.manager.itemEnd(e)},0)}catch(t){setTimeout(function(){s&&s(t),i.manager.itemError(e),i.manager.itemEnd(e)},0)}}else{loading[e]=[],loading[e].push({onLoad:t,onProgress:n,onError:s}),o=new XMLHttpRequest,o.open("GET",e,!0),o.addEventListener("load",function(t){if(a=this.response,o=loading[e],delete loading[e],this.status===200||this.status===0){this.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Cache.add(e,a);for(var s,o,a,n=0,r=o.length;n<r;n++)s=o[n],s.onLoad&&s.onLoad(a);i.manager.itemEnd(e)}else{for(n=0,r=o.length;n<r;n++)s=o[n],s.onError&&s.onError(t);i.manager.itemError(e),i.manager.itemEnd(e)}},!1),o.addEventListener("progress",function(t){n=loading[e];for(var n,o,s=0,i=n.length;s<i;s++)o=n[s],o.onProgress&&o.onProgress(t)},!1),o.addEventListener("error",function(t){n=loading[e],delete loading[e];for(var n,o,s=0,a=n.length;s<a;s++)o=n[s],o.onError&&o.onError(t);i.manager.itemError(e),i.manager.itemEnd(e)},!1),o.addEventListener("abort",function(t){n=loading[e],delete loading[e];for(var n,o,s=0,a=n.length;s<a;s++)o=n[s],o.onError&&o.onError(t);i.manager.itemError(e),i.manager.itemEnd(e)},!1),this.responseType!==void 0&&(o.responseType=this.responseType),this.withCredentials!==void 0&&(o.withCredentials=this.withCredentials),o.overrideMimeType&&o.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain");for(v in this.requestHeader)o.setRequestHeader(v,this.requestHeader[v]);o.send(null)}return i.manager.itemStart(e),o},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this},setRequestHeader:function(e){return this.requestHeader=e,this}});function AnimationLoader(e){Loader.call(this,e)}AnimationLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AnimationLoader,load:function(e,t,n,s){var o=this,i=new FileLoader(o.manager);i.setPath(o.path),i.load(e,function(e){t(o.parse(JSON.parse(e)))},n,s)},parse:function(e){for(var s,n=[],t=0;t<e.length;t++)s=AnimationClip.parse(e[t]),n.push(s);return n}});function CompressedTextureLoader(e){Loader.call(this,e)}CompressedTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CompressedTextureLoader,load:function(e,t,n,s){r=this,i=[],o=new CompressedTexture,o.image=i,a=new FileLoader(this.manager),a.setPath(this.path),a.setResponseType("arraybuffer");function d(l){a.load(e[l],function(e){var n=r.parse(e,!0);i[l]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},c+=1,c===6&&(n.mipmapCount===1&&(o.minFilter=LinearFilter),o.format=n.format,o.needsUpdate=!0,t&&t(o))},n,s)}if(Array.isArray(e)){c=0;for(var o,i,a,r,c,l=0,u=e.length;l<u;++l)d(l)}else a.load(e,function(e){var s,a,c,n=r.parse(e,!0);if(n.isCubemap){c=n.mipmaps.length/n.mipmapCount;for(s=0;s<c;s++){i[s]={mipmaps:[]};for(a=0;a<n.mipmapCount;a++)i[s].mipmaps.push(n.mipmaps[s*n.mipmapCount+a]),i[s].format=n.format,i[s].width=n.width,i[s].height=n.height}}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;n.mipmapCount===1&&(o.minFilter=LinearFilter),o.format=n.format,o.needsUpdate=!0,t&&t(o)},n,s);return o}});function DataTextureLoader(e){Loader.call(this,e)}DataTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:DataTextureLoader,load:function(e,t,n,s){var a=this,o=new DataTexture,i=new FileLoader(this.manager);return i.setResponseType("arraybuffer"),i.setPath(this.path),i.load(e,function(e){var n=a.parse(e);if(!n)return;n.image!==void 0?o.image=n.image:n.data!==void 0&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=n.wrapS!==void 0?n.wrapS:ClampToEdgeWrapping,o.wrapT=n.wrapT!==void 0?n.wrapT:ClampToEdgeWrapping,o.magFilter=n.magFilter!==void 0?n.magFilter:LinearFilter,o.minFilter=n.minFilter!==void 0?n.minFilter:LinearFilter,o.anisotropy=n.anisotropy!==void 0?n.anisotropy:1,n.format!==void 0&&(o.format=n.format),n.type!==void 0&&(o.type=n.type),n.mipmaps!==void 0&&(o.mipmaps=n.mipmaps,o.minFilter=LinearMipmapLinearFilter),n.mipmapCount===1&&(o.minFilter=LinearFilter),o.needsUpdate=!0,t&&t(o,n)},n,s),o}});function ImageLoader(e){Loader.call(this,e)}ImageLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageLoader,load:function(e,t,n,s){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var o,i=this,a=Cache.get(e);if(a!==void 0)return i.manager.itemStart(e),setTimeout(function(){t&&t(a),i.manager.itemEnd(e)},0),a;o=document.createElementNS("http://www.w3.org/1999/xhtml","img");function r(){o.removeEventListener("load",r,!1),o.removeEventListener("error",c,!1),Cache.add(e,this),t&&t(this),i.manager.itemEnd(e)}function c(t){o.removeEventListener("load",r,!1),o.removeEventListener("error",c,!1),s&&s(t),i.manager.itemError(e),i.manager.itemEnd(e)}return o.addEventListener("load",r,!1),o.addEventListener("error",c,!1),e.substr(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),i.manager.itemStart(e),o.src=e,o}});function CubeTextureLoader(e){Loader.call(this,e)}CubeTextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:CubeTextureLoader,load:function(e,t,n,s){var i,r,o=new CubeTexture,a=new ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),r=0;function c(n){a.load(e[n],function(e){o.images[n]=e,r++,r===6&&(o.needsUpdate=!0,t&&t(o))},void 0,s)}for(i=0;i<e.length;++i)c(i);return o}});function TextureLoader(e){Loader.call(this,e)}TextureLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:TextureLoader,load:function(e,t,n,s){var o=new Texture,i=new ImageLoader(this.manager);return i.setCrossOrigin(this.crossOrigin),i.setPath(this.path),i.load(e,function(n){o.image=n;var s=e.search(/\.jpe?g($|\?)/i)>0||e.search(/^data:image\/jpeg/)===0;o.format=s?RGBFormat:RGBAFormat,o.needsUpdate=!0,t!==void 0&&t(o)},n,s),o}});function Curve(){this.type="Curve",this.arcLengthDivisions=200}Object.assign(Curve.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)},getPoints:function(e){e===void 0&&(e=5);for(var n=[],t=0;t<=e;t++)n.push(this.getPoint(t/e));return n},getSpacedPoints:function(e){e===void 0&&(e=5);for(var n=[],t=0;t<=e;t++)n.push(this.getPointAt(t/e));return n},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e===void 0&&(e=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var n,s,t=[],o=this.getPoint(0),i=0;t.push(0);for(n=1;n<=e;n++)s=this.getPoint(n/e),i+=s.distanceTo(o),t.push(i),o=s;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var o,i,a,c,l,d,u,h,m,s=this.getLengths(),n=0,r=s.length;for(t?i=t:i=e*s[r-1],a=0,o=r-1;a<=o;)if(n=Math.floor(a+(o-a)/2),c=s[n]-i,c<0)a=n+1;else if(c>0)o=n-1;else{o=n;break}return n=o,s[n]===i?n/(r-1):(l=s[n],d=s[n+1],u=d-l,h=(i-l)/u,m=(n+h)/(r-1),m)},getTangent:function(e){var o,i,a,s=1e-4,t=e-s,n=e+s;return t<0&&(t=0),n>1&&(n=1),o=this.getPoint(t),i=this.getPoint(n),a=i.clone().sub(o),a.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n,r,c,d,u,m,f,l=new Vector3,s=[],o=[],i=[],a=new Vector3,h=new Matrix4;for(n=0;n<=e;n++)m=n/e,s[n]=this.getTangentAt(m),s[n].normalize();o[0]=new Vector3,i[0]=new Vector3,c=Number.MAX_VALUE,d=Math.abs(s[0].x),u=Math.abs(s[0].y),f=Math.abs(s[0].z),d<=c&&(c=d,l.set(1,0,0)),u<=c&&(c=u,l.set(0,1,0)),f<=c&&l.set(0,0,1),a.crossVectors(s[0],l).normalize(),o[0].crossVectors(s[0],a),i[0].crossVectors(s[0],o[0]);for(n=1;n<=e;n++)o[n]=o[n-1].clone(),i[n]=i[n-1].clone(),a.crossVectors(s[n-1],s[n]),a.length()>Number.EPSILON&&(a.normalize(),r=Math.acos(MathUtils.clamp(s[n-1].dot(s[n]),-1,1)),o[n].applyMatrix4(h.makeRotationAxis(a,r))),i[n].crossVectors(s[n],o[n]);if(t===!0){r=Math.acos(MathUtils.clamp(o[0].dot(o[e]),-1,1)),r/=e,s[0].dot(a.crossVectors(o[0],o[e]))>0&&(r=-r);for(n=1;n<=e;n++)o[n].applyMatrix4(h.makeRotationAxis(s[n],r*n)),i[n].crossVectors(s[n],o[n])}return{tangents:s,normals:o,binormals:i}},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this},toJSON:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e},fromJSON:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}});function EllipseCurve(e,t,n,s,o,i,a,r){Curve.call(this),this.type="EllipseCurve",this.aX=e||0,this.aY=t||0,this.xRadius=n||1,this.yRadius=s||1,this.aStartAngle=o||0,this.aEndAngle=i||2*Math.PI,this.aClockwise=a||!1,this.aRotation=r||0}EllipseCurve.prototype=Object.create(Curve.prototype),EllipseCurve.prototype.constructor=EllipseCurve,EllipseCurve.prototype.isEllipseCurve=!0,EllipseCurve.prototype.getPoint=function(e,t){for(var o,i,a,r,c,l,d,h=t||new Vector2,s=Math.PI*2,n=this.aEndAngle-this.aStartAngle,u=Math.abs(n)<Number.EPSILON;n<0;)n+=s;for(;n>s;)n-=s;return n<Number.EPSILON&&(u?n=0:n=s),this.aClockwise===!0&&!u&&(n===s?n=-s:n=n-s),a=this.aStartAngle+e*n,o=this.aX+this.xRadius*Math.cos(a),i=this.aY+this.yRadius*Math.sin(a),this.aRotation!==0&&(r=Math.cos(this.aRotation),c=Math.sin(this.aRotation),l=o-this.aX,d=i-this.aY,o=l*r-d*c+this.aX,i=l*c+d*r+this.aY),h.set(o,i)},EllipseCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this},EllipseCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e},EllipseCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this};function ArcCurve(e,t,n,s,o,i){EllipseCurve.call(this,e,t,n,n,s,o,i),this.type="ArcCurve"}ArcCurve.prototype=Object.create(EllipseCurve.prototype),ArcCurve.prototype.constructor=ArcCurve,ArcCurve.prototype.isArcCurve=!0;function CubicPoly(){var e=0,t=0,n=0,s=0;function o(o,i,a,r){e=o,t=a,n=-3*o+3*i-2*a-r,s=2*o-2*i+a+r}return{initCatmullRom:function(e,t,n,s,i){o(t,n,i*(n-e),i*(s-t))},initNonuniformCatmullRom:function(e,t,n,s,i,a,r){var c=(t-e)/i-(n-e)/(i+a)+(n-t)/a,l=(n-t)/a-(s-t)/(a+r)+(s-n)/r;c*=a,l*=a,o(t,n,c,l)},calc:function(o){var i=o*o,a=i*o;return e+t*o+n*i+s*a}}}var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(e,t,n,s){Curve.call(this),this.type="CatmullRomCurve3",this.points=e||[],this.closed=t||!1,this.curveType=n||"centripetal",this.tension=s||.5}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.isCatmullRomCurve3=!0,CatmullRomCurve3.prototype.getPoint=function(e,t){var i,a,r,c,l,d,u,m,p=t||new Vector3,o=this.points,n=o.length,f=(n-(this.closed?0:1))*e,s=Math.floor(f),h=f-s;return this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/n)+1)*n:h===0&&s===n-1&&(s=n-2,h=1),this.closed||s>0?a=o[(s-1)%n]:(tmp.subVectors(o[0],o[1]).add(o[0]),a=tmp),r=o[s%n],c=o[(s+1)%n],this.closed||s+2<n?i=o[(s+2)%n]:(tmp.subVectors(o[n-1],o[n-2]).add(o[n-1]),i=tmp),this.curveType==="centripetal"||this.curveType==="chordal"?(m=this.curveType==="chordal"?.5:.25,d=Math.pow(a.distanceToSquared(r),m),l=Math.pow(r.distanceToSquared(c),m),u=Math.pow(c.distanceToSquared(i),m),l<1e-4&&(l=1),d<1e-4&&(d=l),u<1e-4&&(u=l),px.initNonuniformCatmullRom(a.x,r.x,c.x,i.x,d,l,u),py.initNonuniformCatmullRom(a.y,r.y,c.y,i.y,d,l,u),pz.initNonuniformCatmullRom(a.z,r.z,c.z,i.z,d,l,u)):this.curveType==="catmullrom"&&(px.initCatmullRom(a.x,r.x,c.x,i.x,this.tension),py.initCatmullRom(a.y,r.y,c.y,i.y,this.tension),pz.initCatmullRom(a.z,r.z,c.z,i.z,this.tension)),p.set(px.calc(h),py.calc(h),pz.calc(h)),p},CatmullRomCurve3.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(var n,t=0,s=e.points.length;t<s;t++)n=e.points[t],this.points.push(n.clone());return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this},CatmullRomCurve3.prototype.toJSON=function(){e=Curve.prototype.toJSON.call(this),e.points=[];for(var e,n,t=0,s=this.points.length;t<s;t++)n=this.points[t],e.points.push(n.toArray());return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e},CatmullRomCurve3.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(var n,t=0,s=e.points.length;t<s;t++)n=e.points[t],this.points.push((new Vector3).fromArray(n));return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this};function CatmullRom(e,t,n,s,o){var i=(s-t)*.5,a=(o-n)*.5,r=e*e,c=e*r;return(2*n-2*s+i+a)*c+(-3*n+3*s-2*i-a)*r+i*e+n}function QuadraticBezierP0(e,t){var n=1-e;return n*n*t}function QuadraticBezierP1(e,t){return 2*(1-e)*e*t}function QuadraticBezierP2(e,t){return e*e*t}function QuadraticBezier(e,t,n,s){return QuadraticBezierP0(e,t)+QuadraticBezierP1(e,n)+QuadraticBezierP2(e,s)}function CubicBezierP0(e,t){var n=1-e;return n*n*n*t}function CubicBezierP1(e,t){var n=1-e;return 3*n*n*e*t}function CubicBezierP2(e,t){return 3*(1-e)*e*e*t}function CubicBezierP3(e,t){return e*e*e*t}function CubicBezier(e,t,n,s,o){return CubicBezierP0(e,t)+CubicBezierP1(e,n)+CubicBezierP2(e,s)+CubicBezierP3(e,o)}function CubicBezierCurve(e,t,n,s){Curve.call(this),this.type="CubicBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=n||new Vector2,this.v3=s||new Vector2}CubicBezierCurve.prototype=Object.create(Curve.prototype),CubicBezierCurve.prototype.constructor=CubicBezierCurve,CubicBezierCurve.prototype.isCubicBezierCurve=!0,CubicBezierCurve.prototype.getPoint=function(e,t){var n=t||new Vector2,s=this.v0,o=this.v1,i=this.v2,a=this.v3;return n.set(CubicBezier(e,s.x,o.x,i.x,a.x),CubicBezier(e,s.y,o.y,i.y,a.y)),n},CubicBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function CubicBezierCurve3(e,t,n,s){Curve.call(this),this.type="CubicBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=n||new Vector3,this.v3=s||new Vector3}CubicBezierCurve3.prototype=Object.create(Curve.prototype),CubicBezierCurve3.prototype.constructor=CubicBezierCurve3,CubicBezierCurve3.prototype.isCubicBezierCurve3=!0,CubicBezierCurve3.prototype.getPoint=function(e,t){var a=t||new Vector3,n=this.v0,s=this.v1,o=this.v2,i=this.v3;return a.set(CubicBezier(e,n.x,s.x,o.x,i.x),CubicBezier(e,n.y,s.y,o.y,i.y),CubicBezier(e,n.z,s.z,o.z,i.z)),a},CubicBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this},CubicBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e},CubicBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this};function LineCurve(e,t){Curve.call(this),this.type="LineCurve",this.v1=e||new Vector2,this.v2=t||new Vector2}LineCurve.prototype=Object.create(Curve.prototype),LineCurve.prototype.constructor=LineCurve,LineCurve.prototype.isLineCurve=!0,LineCurve.prototype.getPoint=function(e,t){var n=t||new Vector2;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},LineCurve.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize()},LineCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function LineCurve3(e,t){Curve.call(this),this.type="LineCurve3",this.v1=e||new Vector3,this.v2=t||new Vector3}LineCurve3.prototype=Object.create(Curve.prototype),LineCurve3.prototype.constructor=LineCurve3,LineCurve3.prototype.isLineCurve3=!0,LineCurve3.prototype.getPoint=function(e,t){var n=t||new Vector3;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n},LineCurve3.prototype.getPointAt=function(e,t){return this.getPoint(e,t)},LineCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this},LineCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},LineCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function QuadraticBezierCurve(e,t,n){Curve.call(this),this.type="QuadraticBezierCurve",this.v0=e||new Vector2,this.v1=t||new Vector2,this.v2=n||new Vector2}QuadraticBezierCurve.prototype=Object.create(Curve.prototype),QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve,QuadraticBezierCurve.prototype.isQuadraticBezierCurve=!0,QuadraticBezierCurve.prototype.getPoint=function(e,t){var n=t||new Vector2,s=this.v0,o=this.v1,i=this.v2;return n.set(QuadraticBezier(e,s.x,o.x,i.x),QuadraticBezier(e,s.y,o.y,i.y)),n},QuadraticBezierCurve.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function QuadraticBezierCurve3(e,t,n){Curve.call(this),this.type="QuadraticBezierCurve3",this.v0=e||new Vector3,this.v1=t||new Vector3,this.v2=n||new Vector3}QuadraticBezierCurve3.prototype=Object.create(Curve.prototype),QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3,QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=!0,QuadraticBezierCurve3.prototype.getPoint=function(e,t){var i=t||new Vector3,n=this.v0,s=this.v1,o=this.v2;return i.set(QuadraticBezier(e,n.x,s.x,o.x),QuadraticBezier(e,n.y,s.y,o.y),QuadraticBezier(e,n.z,s.z,o.z)),i},QuadraticBezierCurve3.prototype.copy=function(e){return Curve.prototype.copy.call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this},QuadraticBezierCurve3.prototype.toJSON=function(){var e=Curve.prototype.toJSON.call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e},QuadraticBezierCurve3.prototype.fromJSON=function(e){return Curve.prototype.fromJSON.call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this};function SplineCurve(e){Curve.call(this),this.type="SplineCurve",this.points=e||[]}SplineCurve.prototype=Object.create(Curve.prototype),SplineCurve.prototype.constructor=SplineCurve,SplineCurve.prototype.isSplineCurve=!0,SplineCurve.prototype.getPoint=function(e,t){var o=t||new Vector2,n=this.points,i=(n.length-1)*e,s=Math.floor(i),a=i-s,r=n[s===0?s:s-1],c=n[s],l=n[s>n.length-2?n.length-1:s+1],d=n[s>n.length-3?n.length-1:s+2];return o.set(CatmullRom(a,r.x,c.x,l.x,d.x),CatmullRom(a,r.y,c.y,l.y,d.y)),o},SplineCurve.prototype.copy=function(e){Curve.prototype.copy.call(this,e),this.points=[];for(var n,t=0,s=e.points.length;t<s;t++)n=e.points[t],this.points.push(n.clone());return this},SplineCurve.prototype.toJSON=function(){e=Curve.prototype.toJSON.call(this),e.points=[];for(var e,n,t=0,s=this.points.length;t<s;t++)n=this.points[t],e.points.push(n.toArray());return e},SplineCurve.prototype.fromJSON=function(e){Curve.prototype.fromJSON.call(this,e),this.points=[];for(var n,t=0,s=e.points.length;t<s;t++)n=e.points[t],this.points.push((new Vector2).fromArray(n));return this},Curves=Object.freeze({__proto__:null,ArcCurve,CatmullRomCurve3,CubicBezierCurve,CubicBezierCurve3,EllipseCurve,LineCurve,LineCurve3,QuadraticBezierCurve,QuadraticBezierCurve3,SplineCurve});function CurvePath(){Curve.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new LineCurve(t,e))},getPoint:function(e){for(var s,o,a,r,i=e*this.getLength(),n=this.getCurveLengths(),t=0;t<n.length;){if(n[t]>=i)return a=n[t]-i,s=this.curves[t],o=s.getLength(),r=o===0?0:1-a/o,s.getPointAt(r);t++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],n=0,t=0,s=this.curves.length;t<s;t++)n+=this.curves[t].getLength(),e.push(n);return this.cacheLengths=e,e},getSpacedPoints:function(e){e===void 0&&(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12,n=[];for(var t,n,s,o,i,r,l,a=0,c=this.curves;a<c.length;a++){t=c[a],l=t&&t.isEllipseCurve?e*2:t&&(t.isLineCurve||t.isLineCurve3)?1:t&&t.isSplineCurve?e*t.points.length:e,r=t.getPoints(l);for(s=0;s<r.length;s++){if(o=r[s],i&&i.equals(o))continue;n.push(o),i=o}}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n},copy:function(e){Curve.prototype.copy.call(this,e),this.curves=[];for(var n,t=0,s=e.curves.length;t<s;t++)n=e.curves[t],this.curves.push(n.clone());return this.autoClose=e.autoClose,this},toJSON:function(){e=Curve.prototype.toJSON.call(this),e.autoClose=this.autoClose,e.curves=[];for(var e,n,t=0,s=this.curves.length;t<s;t++)n=this.curves[t],e.curves.push(n.toJSON());return e},fromJSON:function(e){Curve.prototype.fromJSON.call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var n,t=0,s=e.curves.length;t<s;t++)n=e.curves[t],this.curves.push((new Curves[n.type]).fromJSON(n));return this}});function Path(e){CurvePath.call(this),this.type="Path",this.currentPoint=new Vector2,e&&this.setFromPoints(e)}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this},moveTo:function(e,t){return this.currentPoint.set(e,t),this},lineTo:function(e,t){var n=new LineCurve(this.currentPoint.clone(),new Vector2(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this},quadraticCurveTo:function(e,t,n,s){var o=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(n,s));return this.curves.push(o),this.currentPoint.set(n,s),this},bezierCurveTo:function(e,t,n,s,o,i){var a=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(e,t),new Vector2(n,s),new Vector2(o,i));return this.curves.push(a),this.currentPoint.set(o,i),this},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new SplineCurve(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this},arc:function(e,t,n,s,o,i){var a=this.currentPoint.x,r=this.currentPoint.y;return this.absarc(e+a,t+r,n,s,o,i),this},absarc:function(e,t,n,s,o,i){return this.absellipse(e,t,n,n,s,o,i),this},ellipse:function(e,t,n,s,o,i,a,r){var c=this.currentPoint.x,l=this.currentPoint.y;return this.absellipse(e+c,t+l,n,s,o,i,a,r),this},absellipse:function(e,t,n,s,o,i,a,r){var c,d,l=new EllipseCurve(e,t,n,s,o,i,a,r);return this.curves.length>0&&(c=l.getPoint(0),c.equals(this.currentPoint)||this.lineTo(c.x,c.y)),this.curves.push(l),d=l.getPoint(1),this.currentPoint.copy(d),this},copy:function(e){return CurvePath.prototype.copy.call(this,e),this.currentPoint.copy(e.currentPoint),this},toJSON:function(){var e=CurvePath.prototype.toJSON.call(this);return e.currentPoint=this.currentPoint.toArray(),e},fromJSON:function(e){return CurvePath.prototype.fromJSON.call(this,e),this.currentPoint.fromArray(e.currentPoint),this}});function Shape(e){Path.call(this,e),this.uuid=MathUtils.generateUUID(),this.type="Shape",this.holes=[]}Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(e){n=[];for(var n,t=0,s=this.holes.length;t<s;t++)n[t]=this.holes[t].getPoints(e);return n},extractPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},copy:function(e){Path.prototype.copy.call(this,e),this.holes=[];for(var n,t=0,s=e.holes.length;t<s;t++)n=e.holes[t],this.holes.push(n.clone());return this},toJSON:function(){e=Path.prototype.toJSON.call(this),e.uuid=this.uuid,e.holes=[];for(var e,n,t=0,s=this.holes.length;t<s;t++)n=this.holes[t],e.holes.push(n.toJSON());return e},fromJSON:function(e){Path.prototype.fromJSON.call(this,e),this.uuid=e.uuid,this.holes=[];for(var n,t=0,s=e.holes.length;t<s;t++)n=e.holes[t],this.holes.push((new Path).fromJSON(n));return this}});function Light(e,t){Object3D.call(this),this.type="Light",this.color=new Color(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:!0,copy:function(e){return Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function HemisphereLight(e,t,n){Light.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new Color(t)}HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function LightShadow(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Vector2(512,512),this.map=null,this.mapPass=null,this.matrix=new Matrix4,this._frustum=new Frustum,this._frameExtents=new Vector2(1,1),this._viewportCount=1,this._viewports=[new Vector4(0,0,1,1)]}Object.assign(LightShadow.prototype,{_projScreenMatrix:new Matrix4,_lightPositionWorld:new Vector3,_lookTarget:new Vector3,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(e){var t=this.camera,n=this.matrix,s=this._projScreenMatrix,o=this._lookTarget,i=this._lightPositionWorld;i.setFromMatrixPosition(e.matrixWorld),t.position.copy(i),o.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(o),t.updateMatrixWorld(),s.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)},getViewport:function(e){return this._viewports[e]},getFrameExtents:function(){return this._frameExtents},copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e={};return this.bias!==0&&(e.bias=this.bias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,.5,500))}SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:!0,updateMatrices:function(e){var t=this.camera,n=MathUtils.RAD2DEG*2*e.angle,s=this.mapSize.width/this.mapSize.height,o=e.distance||t.far;(n!==t.fov||s!==t.aspect||o!==t.far)&&(t.fov=n,t.aspect=s,t.far=o,t.updateProjectionMatrix()),LightShadow.prototype.updateMatrices.call(this,e)}});function SpotLight(e,t,n,s,o,i){Light.call(this,e,t),this.type="SpotLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=s!==void 0?s:Math.PI/3,this.penumbra=o!==void 0?o:0,this.decay=i!==void 0?i:1,this.shadow=new SpotLightShadow}SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function PointLightShadow(){LightShadow.call(this,new PerspectiveCamera(90,1,.5,500)),this._frameExtents=new Vector2(4,2),this._viewportCount=6,this._viewports=[new Vector4(2,1,1,1),new Vector4(0,1,1,1),new Vector4(3,1,1,1),new Vector4(1,1,1,1),new Vector4(3,0,1,1),new Vector4(1,0,1,1)],this._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)],this._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)]}PointLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:PointLightShadow,isPointLightShadow:!0,updateMatrices:function(e,t){t===void 0&&(t=0);var n=this.camera,a=this.matrix,s=this._lightPositionWorld,o=this._lookTarget,i=this._projScreenMatrix;s.setFromMatrixPosition(e.matrixWorld),n.position.copy(s),o.copy(n.position),o.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(o),n.updateMatrixWorld(),a.makeTranslation(-s.x,-s.y,-s.z),i.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(i)}});function PointLight(e,t,n,s){Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=s!==void 0?s:1,this.shadow=new PointLightShadow}PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function OrthographicCamera(e,t,n,s,o,i){Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e!==void 0?e:-1,this.right=t!==void 0?t:1,this.top=n!==void 0?n:1,this.bottom=s!==void 0?s:-1,this.near=o!==void 0?o:.1,this.far=i!==void 0?i:2e3,this.updateProjectionMatrix()}OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:!0,copy:function(e,t){return Camera.prototype.copy.call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,s,o,i){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=o,this.view.height=i,this.updateProjectionMatrix()},clearViewOffset:function(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var n,s,o=(this.right-this.left)/(2*this.zoom),i=(this.top-this.bottom)/(2*this.zoom),a=(this.right+this.left)/2,r=(this.top+this.bottom)/2,e=a-o,c=a+o,t=r+i,l=r-i;this.view!==null&&this.view.enabled&&(n=(this.right-this.left)/this.view.fullWidth/this.zoom,s=(this.top-this.bottom)/this.view.fullHeight/this.zoom,e+=n*this.view.offsetX,c=e+n*this.view.width,t-=s*this.view.offsetY,l=t-s*this.view.height),this.projectionMatrix.makeOrthographic(e,c,t,l,this.near,this.far),this.projectionMatrixInverse.getInverse(this.projectionMatrix)},toJSON:function(e){var t=Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,.5,500))}DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow,isDirectionalLightShadow:!0,updateMatrices:function(e){LightShadow.prototype.updateMatrices.call(this,e)}});function DirectionalLight(e,t){Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(Object3D.DefaultUp),this.updateMatrix(),this.target=new Object3D,this.shadow=new DirectionalLightShadow}DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function AmbientLight(e,t){Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:!0});function RectAreaLight(e,t,n,s){Light.call(this,e,t),this.type="RectAreaLight",this.width=n!==void 0?n:10,this.height=s!==void 0?s:10}RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this},toJSON:function(e){var t=Light.prototype.toJSON.call(this,e);return t.object.width=this.width,t.object.height=this.height,t}});function MaterialLoader(e){Loader.call(this,e),this.textures={}}MaterialLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:MaterialLoader,load:function(e,t,n,s){var o=this,i=new FileLoader(o.manager);i.setPath(o.path),i.load(e,function(e){t(o.parse(JSON.parse(e)))},n,s)},parse:function(e){var t,s,o,i,r,a=this.textures;function n(e){return a[e]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",e),a[e]}if(t=new Materials[e.type],e.uuid!==void 0&&(t.uuid=e.uuid),e.name!==void 0&&(t.name=e.name),e.color!==void 0&&t.color.setHex(e.color),e.roughness!==void 0&&(t.roughness=e.roughness),e.metalness!==void 0&&(t.metalness=e.metalness),e.sheen!==void 0&&(t.sheen=(new Color).setHex(e.sheen)),e.emissive!==void 0&&t.emissive.setHex(e.emissive),e.specular!==void 0&&t.specular.setHex(e.specular),e.shininess!==void 0&&(t.shininess=e.shininess),e.clearcoat!==void 0&&(t.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(t.clearcoatRoughness=e.clearcoatRoughness),e.vertexColors!==void 0&&(t.vertexColors=e.vertexColors),e.fog!==void 0&&(t.fog=e.fog),e.flatShading!==void 0&&(t.flatShading=e.flatShading),e.blending!==void 0&&(t.blending=e.blending),e.combine!==void 0&&(t.combine=e.combine),e.side!==void 0&&(t.side=e.side),e.opacity!==void 0&&(t.opacity=e.opacity),e.transparent!==void 0&&(t.transparent=e.transparent),e.alphaTest!==void 0&&(t.alphaTest=e.alphaTest),e.depthTest!==void 0&&(t.depthTest=e.depthTest),e.depthWrite!==void 0&&(t.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(t.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(t.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(t.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(t.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(t.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(t.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(t.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(t.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(t.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(t.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(t.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(t.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(t.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(t.rotation=e.rotation),e.linewidth!==1&&(t.linewidth=e.linewidth),e.dashSize!==void 0&&(t.dashSize=e.dashSize),e.gapSize!==void 0&&(t.gapSize=e.gapSize),e.scale!==void 0&&(t.scale=e.scale),e.polygonOffset!==void 0&&(t.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(t.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(t.polygonOffsetUnits=e.polygonOffsetUnits),e.skinning!==void 0&&(t.skinning=e.skinning),e.morphTargets!==void 0&&(t.morphTargets=e.morphTargets),e.morphNormals!==void 0&&(t.morphNormals=e.morphNormals),e.dithering!==void 0&&(t.dithering=e.dithering),e.visible!==void 0&&(t.visible=e.visible),e.toneMapped!==void 0&&(t.toneMapped=e.toneMapped),e.userData!==void 0&&(t.userData=e.userData),e.uniforms!==void 0)for(s in e.uniforms)switch(o=e.uniforms[s],t.uniforms[s]={},o.type){case"t":t.uniforms[s].value=n(o.value);break;case"c":t.uniforms[s].value=(new Color).setHex(o.value);break;case"v2":t.uniforms[s].value=(new Vector2).fromArray(o.value);break;case"v3":t.uniforms[s].value=(new Vector3).fromArray(o.value);break;case"v4":t.uniforms[s].value=(new Vector4).fromArray(o.value);break;case"m3":t.uniforms[s].value=(new Matrix3).fromArray(o.value);case"m4":t.uniforms[s].value=(new Matrix4).fromArray(o.value);break;default:t.uniforms[s].value=o.value}if(e.defines!==void 0&&(t.defines=e.defines),e.vertexShader!==void 0&&(t.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(t.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(r in e.extensions)t.extensions[r]=e.extensions[r];return e.shading!==void 0&&(t.flatShading=e.shading===1),e.size!==void 0&&(t.size=e.size),e.sizeAttenuation!==void 0&&(t.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(t.map=n(e.map)),e.matcap!==void 0&&(t.matcap=n(e.matcap)),e.alphaMap!==void 0&&(t.alphaMap=n(e.alphaMap),t.transparent=!0),e.bumpMap!==void 0&&(t.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(t.bumpScale=e.bumpScale),e.normalMap!==void 0&&(t.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(t.normalMapType=e.normalMapType),e.normalScale!==void 0&&(i=e.normalScale,Array.isArray(i)===!1&&(i=[i,i]),t.normalScale=(new Vector2).fromArray(i)),e.displacementMap!==void 0&&(t.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(t.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(t.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(t.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(t.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(t.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(t.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(t.specularMap=n(e.specularMap)),e.envMap!==void 0&&(t.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(t.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(t.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(t.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(t.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(t.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(t.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(t.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(t.gradientMap=n(e.gradientMap)),e.clearcoatNormalMap!==void 0&&(t.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(t.clearcoatNormalScale=(new Vector2).fromArray(e.clearcoatNormalScale)),t},setTextures:function(e){return this.textures=e,this}}),LoaderUtils={decodeText:function(e){if(typeof TextDecoder!="undefined")return(new TextDecoder).decode(e);t="";for(var t,n=0,s=e.length;n<s;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}},extractUrlBase:function(e){var t=e.lastIndexOf("/");return t===-1?"./":e.substr(0,t+1)}};function InstancedBufferGeometry(){BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:!0,copy:function(e){return BufferGeometry.prototype.copy.call(this,e),this.maxInstancedCount=e.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var e=BufferGeometry.prototype.toJSON.call(this);return e.maxInstancedCount=this.maxInstancedCount,e.isInstancedBufferGeometry=!0,e}});function InstancedBufferAttribute(e,t,n,s){typeof n=="number"&&(s=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),BufferAttribute.call(this,e,t,n),this.meshPerAttribute=s||1}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:!0,copy:function(e){return BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},toJSON:function(){var e=BufferAttribute.prototype.toJSON.call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}});function BufferGeometryLoader(e){Loader.call(this,e)}BufferGeometryLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:BufferGeometryLoader,load:function(e,t,n,s){var o=this,i=new FileLoader(o.manager);i.setPath(o.path),i.load(e,function(e){t(o.parse(JSON.parse(e)))},n,s)},parse:function(e){n=e.isInstancedBufferGeometry?new InstancedBufferGeometry:new BufferGeometry,u=e.data.index,u!==void 0&&(i=new TYPED_ARRAYS[u.type](u.array),n.setIndex(new BufferAttribute(i,1))),f=e.data.attributes;for(r in f)t=f[r],i=new TYPED_ARRAYS[t.type](t.array),g=t.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute,o=new g(i,t.itemSize,t.normalized),t.name!==void 0&&(o.name=t.name),n.setAttribute(r,o);if(c=e.data.morphAttributes,c)for(r in c){h=c[r],m=[];for(var t,n,o,i,a,r,c,l,d,u,h,m,f,p,g,v,b,s=0,j=h.length;s<j;s++)t=h[s],i=new TYPED_ARRAYS[t.type](t.array),o=new BufferAttribute(i,t.itemSize,t.normalized),t.name!==void 0&&(o.name=t.name),m.push(o);n.morphAttributes[r]=m}if(v=e.data.morphTargetsRelative,v&&(n.morphTargetsRelative=!0),l=e.data.groups||e.data.drawcalls||e.data.offsets,l!==void 0)for(s=0,b=l.length;s!==b;++s)d=l[s],n.addGroup(d.start,d.count,d.materialIndex);return a=e.data.boundingSphere,a!==void 0&&(p=new Vector3,a.center!==void 0&&p.fromArray(a.center),n.boundingSphere=new Sphere(p,a.radius)),e.name&&(n.name=e.name),e.userData&&(n.userData=e.userData),n}}),TYPED_ARRAYS={Int8Array,Uint8Array,Uint8ClampedArray:typeof Uint8ClampedArray!="undefined"?Uint8ClampedArray:Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function ObjectLoader(e){Loader.call(this,e)}ObjectLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ObjectLoader,load:function(e,t,n,s){var o,i=this,a=this.path===""?LoaderUtils.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a,o=new FileLoader(i.manager),o.setPath(this.path),o.load(e,function(n){var o,a=null;try{a=JSON.parse(n)}catch(t){s!==void 0&&s(t),console.error("THREE:ObjectLoader: Can't parse "+e+".",t.message);return}if(o=a.metadata,o===void 0||o.type===void 0||o.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}i.parse(a,t)},n,s)},parse:function(e,t){var s=this.parseShape(e.shapes),o=this.parseGeometries(e.geometries,s),i=this.parseImages(e.images,function(){t!==void 0&&t(n)}),a=this.parseTextures(e.textures,i),r=this.parseMaterials(e.materials,a),n=this.parseObject(e.object,o,r);return e.animations&&(n.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&t!==void 0&&t(n),n},parseShape:function(e){if(t={},e!==void 0)for(var t,s,n=0,o=e.length;n<o;n++)s=(new Shape).fromJSON(e[n]),t[s.uuid]=s;return t},parseGeometries:function(e,t){if(l={},e!==void 0){u=new BufferGeometryLoader;for(var n,s,o,i,a,r,c,l,u,h,d=0,m=e.length;d<m;d++){switch(n=e[d],n.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new Geometries[n.type](n.width,n.height,n.widthSegments,n.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new Geometries[n.type](n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new Geometries[n.type](n.radius,n.segments,n.thetaStart,n.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new Geometries[n.type](n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new Geometries[n.type](n.radius,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new Geometries[n.type](n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new Geometries[n.type](n.radius,n.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new Geometries[n.type](n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new Geometries[n.type](n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new Geometries[n.type](n.radius,n.tube,n.tubularSegments,n.radialSegments,n.p,n.q);break;case"TubeGeometry":case"TubeBufferGeometry":s=new Geometries[n.type]((new Curves[n.path.type]).fromJSON(n.path),n.tubularSegments,n.radius,n.radialSegments,n.closed);break;case"LatheGeometry":case"LatheBufferGeometry":s=new Geometries[n.type](n.points,n.segments,n.phiStart,n.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new Geometries[n.type](n.vertices,n.indices,n.radius,n.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":i=[];for(o=0,a=n.shapes.length;o<a;o++)r=t[n.shapes[o]],i.push(r);s=new Geometries[n.type](i,n.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":i=[];for(o=0,a=n.shapes.length;o<a;o++)r=t[n.shapes[o]],i.push(r);c=n.options.extrudePath,c!==void 0&&(n.options.extrudePath=(new Curves[c.type]).fromJSON(c)),s=new Geometries[n.type](i,n.options);break;case"BufferGeometry":case"InstancedBufferGeometry":s=u.parse(n);break;case"Geometry":"THREE"in window&&"LegacyJSONLoader"in THREE?(h=new THREE.LegacyJSONLoader,s=h.parse(n,this.resourcePath).geometry):console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+n.type+'"');continue}s.uuid=n.uuid,n.name!==void 0&&(s.name=n.name),s.isBufferGeometry===!0&&n.userData!==void 0&&(s.userData=n.userData),l[n.uuid]=s}}return l},parseMaterials:function(e,t){if(s={},i={},e!==void 0){a=new MaterialLoader,a.setTextures(t);for(var n,s,o,i,a,r,l,c=0,d=e.length;c<d;c++)if(n=e[c],n.type==="MultiMaterial"){l=[];for(r=0;r<n.materials.length;r++)o=n.materials[r],s[o.uuid]===void 0&&(s[o.uuid]=a.parse(o)),l.push(s[o.uuid]);i[n.uuid]=l}else s[n.uuid]===void 0&&(s[n.uuid]=a.parse(n)),i[n.uuid]=s[n.uuid]}return i},parseAnimations:function(e){for(var t,s,o=[],n=0;n<e.length;n++)t=e[n],s=AnimationClip.parse(t),t.uuid!==void 0&&(s.uuid=t.uuid),o.push(s);return o},parseImages:function(e,t){s=this,o={};function m(e){return s.manager.itemStart(e),l.load(e,function(){s.manager.itemEnd(e)},void 0,function(){s.manager.itemError(e),s.manager.itemEnd(e)})}if(e!==void 0&&e.length>0){u=new LoadingManager(t),l=new ImageLoader(u),l.setCrossOrigin(this.crossOrigin);for(var n,s,o,i,a,r,c,l,u,h,d=0,f=e.length;d<f;d++)if(n=e[d],c=n.url,Array.isArray(c)){o[n.uuid]=[];for(i=0,h=c.length;i<h;i++)r=c[i],a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(r)?r:s.resourcePath+r,o[n.uuid].push(m(a))}else a=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(n.url)?n.url:s.resourcePath+n.url,o[n.uuid]=m(a)}return o},parseTextures:function(e,t){function o(e,t){return typeof e=="number"?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}if(i={},e!==void 0)for(var n,s,i,a=0,r=e.length;a<r;a++)n=e[a],n.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',n.uuid),t[n.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",n.image),Array.isArray(t[n.image])?s=new CubeTexture(t[n.image]):s=new Texture(t[n.image]),s.needsUpdate=!0,s.uuid=n.uuid,n.name!==void 0&&(s.name=n.name),n.mapping!==void 0&&(s.mapping=o(n.mapping,TEXTURE_MAPPING)),n.offset!==void 0&&s.offset.fromArray(n.offset),n.repeat!==void 0&&s.repeat.fromArray(n.repeat),n.center!==void 0&&s.center.fromArray(n.center),n.rotation!==void 0&&(s.rotation=n.rotation),n.wrap!==void 0&&(s.wrapS=o(n.wrap[0],TEXTURE_WRAPPING),s.wrapT=o(n.wrap[1],TEXTURE_WRAPPING)),n.format!==void 0&&(s.format=n.format),n.type!==void 0&&(s.type=n.type),n.encoding!==void 0&&(s.encoding=n.encoding),n.minFilter!==void 0&&(s.minFilter=o(n.minFilter,TEXTURE_FILTER)),n.magFilter!==void 0&&(s.magFilter=o(n.magFilter,TEXTURE_FILTER)),n.anisotropy!==void 0&&(s.anisotropy=n.anisotropy),n.flipY!==void 0&&(s.flipY=n.flipY),n.premultiplyAlpha!==void 0&&(s.premultiplyAlpha=n.premultiplyAlpha),n.unpackAlignment!==void 0&&(s.unpackAlignment=n.unpackAlignment),i[n.uuid]=s;return i},parseObject:function(e,t,n){function i(e){return t[e]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function o(e){if(e===void 0)return void 0;if(Array.isArray(e)){s=[];for(var t,s,o=0,i=e.length;o<i;o++)t=e[o],n[t]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",t),s.push(n[t]);return s}return n[e]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",e),n[e]}switch(e.type){case"Scene":s=new Scene,e.background!==void 0&&Number.isInteger(e.background)&&(s.background=new Color(e.background)),e.fog!==void 0&&(e.fog.type==="Fog"?s.fog=new Fog(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(s.fog=new FogExp2(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":s=new PerspectiveCamera(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(s.focus=e.focus),e.zoom!==void 0&&(s.zoom=e.zoom),e.filmGauge!==void 0&&(s.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(s.filmOffset=e.filmOffset),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"OrthographicCamera":s=new OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(s.zoom=e.zoom),e.view!==void 0&&(s.view=Object.assign({},e.view));break;case"AmbientLight":s=new AmbientLight(e.color,e.intensity);break;case"DirectionalLight":s=new DirectionalLight(e.color,e.intensity);break;case"PointLight":s=new PointLight(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":s=new RectAreaLight(e.color,e.intensity,e.width,e.height);break;case"SpotLight":s=new SpotLight(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":s=new HemisphereLight(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");case"Mesh":var s,c,l,d,u,h,m,f,p,a=i(e.geometry),r=o(e.material);a.bones&&a.bones.length>0?s=new SkinnedMesh(a,r):s=new Mesh(a,r);break;case"InstancedMesh":a=i(e.geometry),r=o(e.material),p=e.count,f=e.instanceMatrix,s=new InstancedMesh(a,r,p),s.instanceMatrix=new BufferAttribute(new Float32Array(f.array),16);break;case"LOD":s=new LOD;break;case"Line":s=new Line(i(e.geometry),o(e.material),e.mode);break;case"LineLoop":s=new LineLoop(i(e.geometry),o(e.material));break;case"LineSegments":s=new LineSegments(i(e.geometry),o(e.material));break;case"PointCloud":case"Points":s=new Points(i(e.geometry),o(e.material));break;case"Sprite":s=new Sprite(o(e.material));break;case"Group":s=new Group;break;default:s=new Object3D}if(s.uuid=e.uuid,e.name!==void 0&&(s.name=e.name),e.matrix!==void 0?(s.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(s.matrixAutoUpdate=e.matrixAutoUpdate),s.matrixAutoUpdate&&s.matrix.decompose(s.position,s.quaternion,s.scale)):(e.position!==void 0&&s.position.fromArray(e.position),e.rotation!==void 0&&s.rotation.fromArray(e.rotation),e.quaternion!==void 0&&s.quaternion.fromArray(e.quaternion),e.scale!==void 0&&s.scale.fromArray(e.scale)),e.castShadow!==void 0&&(s.castShadow=e.castShadow),e.receiveShadow!==void 0&&(s.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(s.shadow.bias=e.shadow.bias),e.shadow.radius!==void 0&&(s.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&s.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(s.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(s.visible=e.visible),e.frustumCulled!==void 0&&(s.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(s.renderOrder=e.renderOrder),e.userData!==void 0&&(s.userData=e.userData),e.layers!==void 0&&(s.layers.mask=e.layers),e.children!==void 0){u=e.children;for(c=0;c<u.length;c++)s.add(this.parseObject(u[c],t,n))}if(e.type==="LOD"){e.autoUpdate!==void 0&&(s.autoUpdate=e.autoUpdate),d=e.levels;for(l=0;l<d.length;l++)h=d[l],m=s.getObjectByProperty("uuid",h.object),m!==void 0&&s.addLevel(m,h.distance)}return s}}),TEXTURE_MAPPING={UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,SphericalReflectionMapping,CubeUVReflectionMapping,CubeUVRefractionMapping},TEXTURE_WRAPPING={RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping},TEXTURE_FILTER={NearestFilter,NearestMipmapNearestFilter,NearestMipmapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipmapLinearFilter};function ImageBitmapLoader(e){typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),Loader.call(this,e),this.options=void 0}ImageBitmapLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:ImageBitmapLoader,setOptions:function(t){return this.options=t,this},load:function(e,t,n,s){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);var o=this,i=Cache.get(e);if(i!==void 0)return o.manager.itemStart(e),setTimeout(function(){t&&t(i),o.manager.itemEnd(e)},0),i;fetch(e).then(function(e){return e.blob()}).then(function(e){return o.options===void 0?createImageBitmap(e):createImageBitmap(e,o.options)}).then(function(n){Cache.add(e,n),t&&t(n),o.manager.itemEnd(e)}).catch(function(t){s&&s(t),o.manager.itemError(e),o.manager.itemEnd(e)}),o.manager.itemStart(e)}});function ShapePath(){this.type="ShapePath",this.color=new Color,this.subPaths=[],this.currentPath=null}Object.assign(ShapePath.prototype,{moveTo:function(e,t){return this.currentPath=new Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this},lineTo:function(e,t){return this.currentPath.lineTo(e,t),this},quadraticCurveTo:function(e,t,n,s){return this.currentPath.quadraticCurveTo(e,t,n,s),this},bezierCurveTo:function(e,t,n,s,o,i){return this.currentPath.bezierCurveTo(e,t,n,s,o,i),this},splineThru:function(e){return this.currentPath.splineThru(e),this},toShapes:function(e,t){function E(e){t=[];for(var t,s,o,n=0,i=e.length;n<i;n++)o=e[n],s=new Shape,s.curves=o.curves,t.push(s);return t}function M(e,t){c=t.length,i=!1;for(var n,s,o,i,r,c,d,l=c-1,a=0;a<c;l=a++)if(n=t[l],s=t[a],r=s.x-n.x,o=s.y-n.y,Math.abs(o)>Number.EPSILON){if(o<0&&(n=t[a],r=-r,s=t[l],o=-o),e.y<n.y||e.y>s.y)continue;if(e.y===n.y){if(e.x===n.x)return!0}else{if(d=o*(e.x-n.x)-r*(e.y-n.y),d===0)return!0;if(d<0)continue;i=!i}}else{if(e.y!==n.y)continue;if(s.x<=e.x&&e.x<=n.x||n.x<=e.x&&e.x<=s.x)return!0}return i}if(_=ShapeUtils.isClockWise,i=this.subPaths,i.length===0)return[];if(t===!0)return E(i);if(h=[],i.length===1)return l=i[0],d=new Shape,d.curves=l.curves,h.push(d),h;u=!_(i[0].getPoints()),u=e?!u:u,f=[],n=[],c=[],o=0,n[o]=void 0,c[o]=[];for(var n,s,o,i,r,c,l,d,u,h,m,f,p,g,v,b,j,y,_,w,O,x,C,k,A,a=0,S=i.length;a<S;a++)l=i[a],y=l.getPoints(),m=_(y),m=e?!m:m,m?(!u&&n[o]&&o++,n[o]={s:new Shape,p:y},n[o].s.curves=l.curves,u&&o++,c[o]=[]):c[o].push({h:l,p:y[0]});if(!n[0])return E(i);if(n.length>1){C=!1,O=[];for(s=0,v=n.length;s<v;s++)f[s]=[];for(s=0,v=n.length;s<v;s++){w=c[s];for(p=0;p<w.length;p++){j=w[p],g=!0;for(r=0;r<n.length;r++)M(j.p,n[r].p)&&(s!==r&&O.push({froms:s,tos:r,hole:p}),g?(g=!1,f[r].push(j)):C=!0);g&&f[s].push(j)}}O.length>0&&(C||(c=f))}for(a=0,k=n.length;a<k;a++){d=n[a].s,h.push(d),x=c[a];for(b=0,A=x.length;b<A;b++)d.holes.push(x[b].h)}return h}});function Font(e){this.type="Font",this.data=e}Object.assign(Font.prototype,{isFont:!0,generateShapes:function(e,t){t===void 0&&(t=100),n=[],s=createPaths(e,t,this.data);for(var n,s,o=0,i=s.length;o<i;o++)Array.prototype.push.apply(n,s[o].toShapes());return n}});function createPaths(e,t,n){for(var i,a,r=Array.from?Array.from(e):String(e).split(""),c=t/n.resolution,u=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*c,l=[],s=0,d=0,o=0;o<r.length;o++)i=r[o],i===`
`?(s=0,d-=u):(a=createPath(i,c,s,d,n),s+=a.offsetX,l.push(a.path));return l}function createPath(e,t,n,s,o){if(r=o.glyphs[e]||o.glyphs["?"],!r){console.error('THREE.Font: character "'+e+'" does not exists in font family '+o.familyName+".");return}if(c=new ShapePath,r.o){i=r._cachedOutline||(r._cachedOutline=r.o.split(" "));for(var i,r,c,l,d,u,h,m,f,p,g,v,a=0,b=i.length;a<b;)switch(v=i[a++],v){case"m":f=i[a++]*t+n,m=i[a++]*t+s,c.moveTo(f,m);break;case"l":f=i[a++]*t+n,m=i[a++]*t+s,c.lineTo(f,m);break;case"q":u=i[a++]*t+n,d=i[a++]*t+s,l=i[a++]*t+n,h=i[a++]*t+s,c.quadraticCurveTo(l,h,u,d);break;case"b":u=i[a++]*t+n,d=i[a++]*t+s,l=i[a++]*t+n,h=i[a++]*t+s,p=i[a++]*t+n,g=i[a++]*t+s,c.bezierCurveTo(l,h,p,g,u,d);break}}return{offsetX:r.ha*t,path:c}}function FontLoader(e){Loader.call(this,e)}FontLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:FontLoader,load:function(e,t,n,s){var i=this,o=new FileLoader(this.manager);o.setPath(this.path),o.load(e,function(e){try{n=JSON.parse(e)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var n,s=i.parse(n);t&&t(s)},n,s)},parse:function(e){return new Font(e)}}),AudioContext={getContext:function(){return _context===void 0&&(_context=new(window.AudioContext||window.webkitAudioContext)),_context},setContext:function(e){_context=e}};function AudioLoader(e){Loader.call(this,e)}AudioLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:AudioLoader,load:function(e,t,n,s){var o=new FileLoader(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.load(e,function(e){var n=e.slice(0),s=AudioContext.getContext();s.decodeAudioData(n,function(e){t(e)})},n,s)}});function SphericalHarmonics3(){this.coefficients=[];for(var e=0;e<9;e++)this.coefficients.push(new Vector3)}Object.assign(SphericalHarmonics3.prototype,{isSphericalHarmonics3:!0,set:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this},zero:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this},getAt:function(e,t){var s=e.x,o=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.282095),t.addScale(n[1],.488603*o),t.addScale(n[2],.488603*i),t.addScale(n[3],.488603*s),t.addScale(n[4],1.092548*(s*o)),t.addScale(n[5],1.092548*(o*i)),t.addScale(n[6],.315392*(3*i*i-1)),t.addScale(n[7],1.092548*(s*i)),t.addScale(n[8],.546274*(s*s-o*o)),t},getIrradianceAt:function(e,t){var s=e.x,o=e.y,i=e.z,n=this.coefficients;return t.copy(n[0]).multiplyScalar(.886227),t.addScale(n[1],2*.511664*o),t.addScale(n[2],2*.511664*i),t.addScale(n[3],2*.511664*s),t.addScale(n[4],2*.429043*s*o),t.addScale(n[5],2*.429043*o*i),t.addScale(n[6],.743125*i*i-.247708),t.addScale(n[7],2*.429043*s*i),t.addScale(n[8],.429043*(s*s-o*o)),t},add:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this},scale:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this},lerp:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this},equals:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0},copy:function(e){return this.set(e.coefficients)},clone:function(){return(new this.constructor).copy(this)},fromArray:function(e,t){t===void 0&&(t=0);for(var s=this.coefficients,n=0;n<9;n++)s[n].fromArray(e,t+n*3);return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);for(var s=this.coefficients,n=0;n<9;n++)s[n].toArray(e,t+n*3);return e}}),Object.assign(SphericalHarmonics3,{getBasisAt:function(e,t){var n=e.x,s=e.y,o=e.z;t[0]=.282095,t[1]=.488603*s,t[2]=.488603*o,t[3]=.488603*n,t[4]=1.092548*n*s,t[5]=1.092548*s*o,t[6]=.315392*(3*o*o-1),t[7]=1.092548*n*o,t[8]=.546274*(n*n-s*s)}});function LightProbe(e,t){Light.call(this,void 0,t),this.sh=e!==void 0?e:new SphericalHarmonics3}LightProbe.prototype=Object.assign(Object.create(Light.prototype),{constructor:LightProbe,isLightProbe:!0,copy:function(e){return Light.prototype.copy.call(this,e),this.sh.copy(e.sh),this.intensity=e.intensity,this},toJSON:function(e){var t=Light.prototype.toJSON.call(this,e);return t}});function HemisphereLightProbe(e,t,n){LightProbe.call(this,void 0,n);var s=(new Color).set(e),o=(new Color).set(t),i=new Vector3(s.r,s.g,s.b),a=new Vector3(o.r,o.g,o.b),r=Math.sqrt(Math.PI),c=r*Math.sqrt(.75);this.sh.coefficients[0].copy(i).add(a).multiplyScalar(r),this.sh.coefficients[1].copy(i).sub(a).multiplyScalar(c)}HemisphereLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:HemisphereLightProbe,isHemisphereLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){var t=LightProbe.prototype.toJSON.call(this,e);return t}});function AmbientLightProbe(e,t){LightProbe.call(this,void 0,t);var n=(new Color).set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}AmbientLightProbe.prototype=Object.assign(Object.create(LightProbe.prototype),{constructor:AmbientLightProbe,isAmbientLightProbe:!0,copy:function(e){return LightProbe.prototype.copy.call(this,e),this},toJSON:function(e){var t=LightProbe.prototype.toJSON.call(this,e);return t}}),_eyeRight=new Matrix4,_eyeLeft=new Matrix4;function StereoCamera(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}Object.assign(StereoCamera.prototype,{update:function(e){var n,s,o,i,a,r,t=this._cache,c=t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep;c&&(t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,o=e.projectionMatrix.clone(),r=t.eyeSep/2,i=r*t.near/t.focus,a=t.near*Math.tan(MathUtils.DEG2RAD*t.fov*.5)/t.zoom,_eyeLeft.elements[12]=-r,_eyeRight.elements[12]=r,n=-a*t.aspect+i,s=a*t.aspect+i,o.elements[0]=2*t.near/(s-n),o.elements[8]=(s+n)/(s-n),this.cameraL.projectionMatrix.copy(o),n=-a*t.aspect-i,s=a*t.aspect-i,o.elements[0]=2*t.near/(s-n),o.elements[8]=(s+n)/(s-n),this.cameraR.projectionMatrix.copy(o)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(_eyeLeft),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(_eyeRight)}});function Clock(e){this.autoStart=e===void 0||e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}Object.assign(Clock.prototype,{start:function(){this.startTime=(typeof performance=="undefined"?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t,e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=(typeof performance=="undefined"?Date:performance).now(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e)}}),_position$2=new Vector3,_quaternion$3=new Quaternion,_scale$1=new Vector3,_orientation=new Vector3;function AudioListener(){Object3D.call(this),this.type="AudioListener",this.context=AudioContext.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Clock}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain},removeFilter:function(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this},getFilter:function(){return this.filter},setFilter:function(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this},updateMatrixWorld:function(e){Object3D.prototype.updateMatrixWorld.call(this,e);var n,t=this.context.listener,s=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(_position$2,_quaternion$3,_scale$1),_orientation.set(0,0,-1).applyQuaternion(_quaternion$3),t.positionX?(n=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(_position$2.x,n),t.positionY.linearRampToValueAtTime(_position$2.y,n),t.positionZ.linearRampToValueAtTime(_position$2.z,n),t.forwardX.linearRampToValueAtTime(_orientation.x,n),t.forwardY.linearRampToValueAtTime(_orientation.y,n),t.forwardZ.linearRampToValueAtTime(_orientation.z,n),t.upX.linearRampToValueAtTime(s.x,n),t.upY.linearRampToValueAtTime(s.y,n),t.upZ.linearRampToValueAtTime(s.z,n)):(t.setPosition(_position$2.x,_position$2.y,_position$2.z),t.setOrientation(_orientation.x,_orientation.y,_orientation.z,s.x,s.y,s.z))}});function Audio(e){Object3D.call(this),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this._startedAt=0,this._pausedAt=0,this.filters=[]}Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setMediaElementSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this},setMediaStreamSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(e){if(e===void 0&&(e=0),this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._pausedAt+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._pausedAt=(this.context.currentTime-this._startedAt)*this.playbackRate,this.source.stop(),this.source.onended=null,this.isPlaying=!1),this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._pausedAt=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},setDetune:function(e){if(this.detune=e,this.source.detune===void 0)return;return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this},getDetune:function(){return this.detune},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this},setLoopStart:function(e){return this.loopStart=e,this},setLoopEnd:function(e){return this.loopEnd=e,this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}),_position$3=new Vector3,_quaternion$4=new Quaternion,_scale$2=new Vector3,_orientation$1=new Vector3;function PositionalAudio(e){Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){return this.panner.refDistance=e,this},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){return this.panner.rolloffFactor=e,this},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){return this.panner.distanceModel=e,this},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){return this.panner.maxDistance=e,this},setDirectionalCone:function(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this},updateMatrixWorld:function(e){if(Object3D.prototype.updateMatrixWorld.call(this,e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(_position$3,_quaternion$4,_scale$2),_orientation$1.set(0,0,1).applyQuaternion(_quaternion$4);var n,t=this.panner;t.positionX?(n=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime(_position$3.x,n),t.positionY.linearRampToValueAtTime(_position$3.y,n),t.positionZ.linearRampToValueAtTime(_position$3.z,n),t.orientationX.linearRampToValueAtTime(_orientation$1.x,n),t.orientationY.linearRampToValueAtTime(_orientation$1.y,n),t.orientationZ.linearRampToValueAtTime(_orientation$1.z,n)):(t.setPosition(_position$3.x,_position$3.y,_position$3.z),t.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z))}});function AudioAnalyser(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var n=0,e=this.getFrequencyData(),t=0;t<e.length;t++)n+=e[t];return n/e.length}});function PropertyMixer(e,t,n){this.binding=e,this.valueSize=n;var s,o=Float64Array;switch(t){case"quaternion":s=this._slerp;break;case"string":case"bool":o=Array,s=this._select;break;default:s=this._lerp}this.buffer=new o(n*4),this._mixBufferRegion=s,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Object.assign(PropertyMixer.prototype,{accumulate:function(e,t){var s,r,i=this.buffer,o=this.valueSize,a=e*o+o,n=this.cumulativeWeight;if(n===0){for(s=0;s!==o;++s)i[a+s]=i[s];n=t}else n+=t,r=t/n,this._mixBufferRegion(i,a,0,r,o);this.cumulativeWeight=n},apply:function(e){var n,a,r,t=this.valueSize,s=this.buffer,o=e*t+t,i=this.cumulativeWeight,c=this.binding;this.cumulativeWeight=0,i<1&&(a=t*3,this._mixBufferRegion(s,o,a,1-i,t));for(n=t,r=t+t;n!==r;++n)if(s[n]!==s[n+t]){c.setValue(s,o);break}},saveOriginalState:function(){var e,o,i=this.binding,t=this.buffer,n=this.valueSize,s=n*3;i.getValue(t,s);for(e=n,o=s;e!==o;++e)t[e]=t[s+e%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,s,o){if(s>=.5)for(var i=0;i!==o;++i)e[t+i]=e[n+i]},_slerp:function(e,t,n,s){Quaternion.slerpFlat(e,t,e,t,e,n,s)},_lerp:function(e,t,n,s,o){for(var a,r=1-s,i=0;i!==o;++i)a=t+i,e[a]=e[a]*r+e[n+i]*s}}),_RESERVED_CHARS_RE="\\[\\]\\.:\\/",_reservedRe=new RegExp("["+_RESERVED_CHARS_RE+"]","g"),_wordChar="[^"+_RESERVED_CHARS_RE+"]",_wordCharOrDot="[^"+_RESERVED_CHARS_RE.replace("\\.","")+"]",_directoryRe=/((?:WC+[/:])*)/.source.replace("WC",_wordChar),_nodeRe=/(WCOD+)?/.source.replace("WCOD",_wordCharOrDot),_objectRe=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",_wordChar),_propertyRe=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",_wordChar),_trackRe=new RegExp("^"+_directoryRe+_nodeRe+_objectRe+_propertyRe+"$"),_supportedObjectNames=["material","materials","bones"];function Composite(e,t,n){var s=n||PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,s)}Object.assign(Composite.prototype,{getValue:function(e,t){this.bind();var s=this._targetGroup.nCachedObjects_,n=this._bindings[s];n!==void 0&&n.getValue(e,t)},setValue:function(e,t){n=this._bindings;for(var n,s=this._targetGroup.nCachedObjects_,o=n.length;s!==o;++s)n[s].setValue(e,t)},bind:function(){e=this._bindings;for(var e,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){e=this._bindings;for(var e,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}});function PropertyBinding(e,t,n){this.path=t,this.parsedPath=n||PropertyBinding.parseTrackName(t),this.node=PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}Object.assign(PropertyBinding,{Composite,create:function(e,t,n){return e&&e.isAnimationObjectGroup?new PropertyBinding.Composite(e,t,n):new PropertyBinding(e,t,n)},sanitizeNodeName:function(e){return e.replace(/\s/g,"_").replace(_reservedRe,"")},parseTrackName:function(e){var t,s,o,n=_trackRe.exec(e);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+e);if(t={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},s=t.nodeName&&t.nodeName.lastIndexOf("."),s!==void 0&&s!==-1&&(o=t.nodeName.substring(s+1),_supportedObjectNames.indexOf(o)!==-1&&(t.nodeName=t.nodeName.substring(0,s),t.objectName=o)),t.propertyName===null||t.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return t},findNode:function(e,t){if(!t||t===""||t==="root"||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){var n,s,o=e.skeleton.getBoneByName(t);if(o!==void 0)return o}return e.children&&(n=function(e){for(var s,i,o=0;o<e.length;o++){if(s=e[o],s.name===t||s.uuid===t)return s;if(i=n(s.children),i)return i}return null},s=n(e.children),s)?s:null}}),Object.assign(PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){s=this.resolvedProperty;for(var s,o=0,i=s.length;o!==i;++o)t[n++]=s[o]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.targetObject[this.propertyName]=t[n]},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.targetObject[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){s=this.resolvedProperty;for(var s,o=0,i=s.length;o!==i;++o)s[o]=t[n++]},function(t,n){s=this.resolvedProperty;for(var s,o=0,i=s.length;o!==i;++o)s[o]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){s=this.resolvedProperty;for(var s,o=0,i=s.length;o!==i;++o)s[o]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){var t,n,i,a,l,d,e=this.node,s=this.parsedPath,r=s.objectName,c=s.propertyName,o=s.propertyIndex;if(e||(e=PropertyBinding.findNode(this.rootNode,s.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(r){switch(i=s.objectIndex,r){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;default:if(e[r]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[r]}if(i!==void 0){if(e[i]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[i]}}if(n=e[c],n===void 0){d=s.nodeName,console.error("THREE.PropertyBinding: Trying to update property for track: "+d+"."+c+" but it wasn't found.",e);return}if(l=this.Versioning.None,this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate),a=this.BindingType.Direct,o!==void 0){if(c==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){{if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}for(t=0;t<this.node.geometry.morphAttributes.position.length;t++)if(e.geometry.morphAttributes.position[t].name===o){o=t;break}}}else{if(!e.geometry.morphTargets){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.",this);return}for(t=0;t<this.node.geometry.morphTargets.length;t++)if(e.geometry.morphTargets[t].name===o){o=t;break}}}a=this.BindingType.ArrayElement,this.resolvedProperty=n,this.propertyIndex=o}else n.fromArray!==void 0&&n.toArray!==void 0?(a=this.BindingType.HasFromToArray,this.resolvedProperty=n):Array.isArray(n)?(a=this.BindingType.EntireArray,this.resolvedProperty=n):this.propertyName=c;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][l]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(PropertyBinding.prototype,{_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});function AnimationObjectGroup(){this.uuid=MathUtils.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0,n={},this._indicesByUUID=n;for(var t,n,e=0,s=arguments.length;e!==s;++e)n[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={},t=this,this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:!0,add:function(){for(var e,s,r,d,n=this._objects,y=n.length,u=this.nCachedObjects_,i=this._indicesByUUID,v=this._paths,f=this._parsedPaths,c=this._bindings,g=c.length,p=void 0,l=0,b=arguments.length;l!==b;++l){var o=arguments[l],h=o.uuid,t=i[h];if(t===void 0){t=y++,i[h]=t,n.push(o);for(e=0,r=g;e!==r;++e)c[e].push(new PropertyBinding(o,v[e],f[e]))}else if(t<u){p=n[t],s=--u,d=n[s],i[d.uuid]=t,n[t]=d,i[h]=s,n[s]=o;for(e=0,r=g;e!==r;++e){var a=c[e],j=a[s],m=a[t];a[t]=j,m===void 0&&(m=new PropertyBinding(o,v[e],f[e])),a[s]=m}}else n[t]!==p&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u},remove:function(){for(var t,s,r,u,c=this._objects,o=this.nCachedObjects_,i=this._indicesByUUID,h=this._bindings,f=h.length,a=0,m=arguments.length;a!==m;++a){var d=arguments[a],l=d.uuid,e=i[l];if(e!==void 0&&e>=o){t=o++,r=c[t],i[r.uuid]=e,c[e]=r,i[l]=t,c[t]=d;for(s=0,u=f;s!==u;++s){var n=h[s],p=n[t],g=n[e];n[e]=p,n[t]=g}}}this.nCachedObjects_=o},uncache:function(){for(var e,n,o,i,c,t=this._objects,p=t.length,l=this.nCachedObjects_,a=this._indicesByUUID,u=this._bindings,f=u.length,d=0,v=arguments.length;d!==v;++d){var g=arguments[d],h=g.uuid,s=a[h];if(s!==void 0)if(delete a[h],s<l){var r=--l,m=t[r],i=--p,o=t[i];a[m.uuid]=s,t[s]=m,a[o.uuid]=r,t[r]=o,t.pop();for(n=0,c=f;n!==c;++n){var e=u[n],b=e[r],j=e[i];e[s]=b,e[r]=j,e.pop()}}else{i=--p,o=t[i],a[o.uuid]=s,t[s]=o,t.pop();for(n=0,c=f;n!==c;++n)e=u[n],e[s]=e[i],e.pop()}}this.nCachedObjects_=l},subscribe_:function(e,t){var r=this._bindingsIndicesByPath,s=r[e],o=this._bindings;if(s!==void 0)return o[s];var n,c,l,d=this._paths,u=this._parsedPaths,i=this._objects,h=i.length,m=this.nCachedObjects_,a=new Array(h),s=o.length;r[e]=s,d.push(e),u.push(t),o.push(a);for(n=m,c=i.length;n!==c;++n)l=i[n],a[n]=new PropertyBinding(l,e,t);return a},unsubscribe_:function(e){if(o=this._bindingsIndicesByPath,t=o[e],t!==void 0){var t,o,i=this._paths,a=this._parsedPaths,n=this._bindings,s=n.length-1,r=n[s],c=e[s];o[c]=t,n[t]=r,n.pop(),a[t]=a[s],a.pop(),i[t]=i[s],i.pop()}}});function AnimationAction(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var i,a=t.tracks,o=a.length,r=new Array(o),c={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},s=0;s!==o;++s)i=a[s].createInterpolant(null),r[s]=i,i.settings=c;this._interpolantSettings=c,this._interpolants=r,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}Object.assign(AnimationAction.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var s=this._clip.duration,o=e._clip.duration,i=o/s,a=s/o;e.warp(1,i,t),this.warp(a,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var o,i,a=this._mixer,r=a.time,s=this._timeScaleInterpolant,c=this.timeScale;return s===null&&(s=a._lendControlInterpolant(),this._timeScaleInterpolant=s),o=s.parameterPositions,i=s.sampleValues,o[0]=r,o[1]=r+n,i[0]=e/c,i[1]=t/c,this},stopWarping:function(){var e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,s){if(!this.enabled){this._updateWeight(e);return}if(i=this._startTime,i!==null){if(a=(e-i)*n,a<0||n===0)return;this._startTime=null,t=n*a}if(t*=this._updateTimeScale(e),l=this._updateTime(t),r=this._updateWeight(e),r>0){c=this._interpolants,d=this._propertyBindings;for(var i,a,r,c,l,d,o=0,u=c.length;o!==u;++o)c[o].evaluate(l),d[o].accumulate(s,r)}},_updateWeight:function(e){var n,s,t=0;return this.enabled&&(t=this.weight,n=this._weightInterpolant,n!==null&&(s=n.evaluate(e)[0],t*=s,e>n.parameterPositions[1]&&(this.stopFading(),s===0&&(this.enabled=!1)))),this._effectiveWeight=t,t},_updateTimeScale:function(e){var n,s,t=0;return this.paused||(t=this.timeScale,n=this._timeScaleInterpolant,n!==null&&(s=n.evaluate(e)[0],t*=s,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))),this._effectiveTimeScale=t,t},_updateTime:function(e){var i,a,r,t=this.time+e,s=this._clip.duration,c=this.loop,n=this._loopCount,o=c===LoopPingPong;if(e===0)return n===-1?t:o&&(n&1)===1?s-t:t;if(c===LoopOnce){n===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));handle_stop:{if(t>=s)t=s;else if(t<0)t=0;else{this.time=t;break handle_stop}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(n===-1&&(e>=0?(n=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),t>=s||t<0?(i=Math.floor(t/s),t-=s*i,n+=Math.abs(i),a=this.repetitions-n,a<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?s:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1})):(a===1?(r=e<0,this._setEndings(r,!r,o)):this._setEndings(!1,!1,o),this._loopCount=n,this.time=t,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:i}))):this.time=t,o&&(n&1)===1)return s-t;return t},_setEndings:function(e,t,n){var s=this._interpolantSettings;n?(s.endingStart=ZeroSlopeEnding,s.endingEnd=ZeroSlopeEnding):(e?s.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding:s.endingStart=WrapAroundEnding,t?s.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding:s.endingEnd=WrapAroundEnding)},_scheduleFading:function(e,t,n){var o,i,a=this._mixer,r=a.time,s=this._weightInterpolant;return s===null&&(s=a._lendControlInterpolant(),this._weightInterpolant=s),o=s.parameterPositions,i=s.sampleValues,o[0]=r,i[0]=t,o[1]=r+e,i[1]=n,this}});function AnimationMixer(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(e,t){var s,h,d=e._localRoot||this._root,u=e._clip.tracks,f=u.length,c=e._propertyBindings,m=e._interpolants,o=d.uuid,l=this._bindingsByRootAndName,a=l[o];a===void 0&&(a={},l[o]=a);for(s=0;s!==f;++s){var r=u[s],i=r.name,n=a[i];if(n!==void 0)c[s]=n;else{if(n=c[s],n!==void 0){n._cacheIndex===null&&(++n.referenceCount,this._addInactiveBinding(n,o,i));continue}h=t&&t._propertyBindings[s].binding.parsedPath,n=new PropertyMixer(PropertyBinding.create(d,i,h),r.ValueTypeName,r.getValueSize()),++n.referenceCount,this._addInactiveBinding(n,o,i),c[s]=n}m[s].resultBuffer=n.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t,n,s,a,r=(e._localRoot||this._root).uuid,o=e._clip.uuid,i=this._actionsByClip[o];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,o,r)}s=e._propertyBindings;for(t=0,a=s.length;t!==a;++t)n=s[t],n.useCount++===0&&(this._lendBinding(n),n.saveOriginalState());this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){n=e._propertyBindings;for(var t,n,s=0,o=n.length;s!==o;++s)t=n[s],--t.useCount===0&&(t.restoreOriginalState(),this._takeBackBinding(t));this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var o,i=this._actions,a=this._actionsByClip,s=a[t];s===void 0?(s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,a[t]=s):(o=s.knownActions,e._byClipCacheIndex=o.length,o.push(e)),e._cacheIndex=i.length,i.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){var n=this._actions,s=n[n.length-1],o=e._cacheIndex;s._cacheIndex=o,n[o]=s,n.pop(),e._cacheIndex=null;var d,u,i=e._clip.uuid,a=this._actionsByClip,r=a[i],t=r.knownActions,c=t[t.length-1],l=e._byClipCacheIndex;c._byClipCacheIndex=l,t[l]=c,t.pop(),e._byClipCacheIndex=null,d=r.actionByRoot,u=(e._localRoot||this._root).uuid,delete d[u],t.length===0&&delete a[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){t=e._propertyBindings;for(var t,s,n=0,o=t.length;n!==o;++n)s=t[n],--s.referenceCount===0&&this._removeInactiveBinding(s)},_lendAction:function(e){var t=this._actions,s=e._cacheIndex,n=this._nActiveActions++,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=s,t[s]=o},_takeBackAction:function(e){var t=this._actions,s=e._cacheIndex,n=--this._nActiveActions,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=s,t[s]=o},_addInactiveBinding:function(e,t,n){var o=this._bindingsByRootAndName,s=o[t],i=this._bindings;s===void 0&&(s={},o[t]=s),s[n]=e,e._cacheIndex=i.length,i.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,s=n.rootNode.uuid,c=n.path,o=this._bindingsByRootAndName,i=o[s],a=t[t.length-1],r=e._cacheIndex;a._cacheIndex=r,t[r]=a,t.pop(),delete i[c],Object.keys(i).length===0&&delete o[s]},_lendBinding:function(e){var t=this._bindings,s=e._cacheIndex,n=this._nActiveBindings++,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=s,t[s]=o},_takeBackBinding:function(e){var t=this._bindings,s=e._cacheIndex,n=--this._nActiveBindings,o=t[n];e._cacheIndex=n,t[n]=e,o._cacheIndex=s,t[s]=o},_lendControlInterpolant:function(){var n=this._controlInterpolants,t=this._nActiveControlInterpolants++,e=n[t];return e===void 0&&(e=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),e.__cacheIndex=t,n[t]=e),e},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,s=e.__cacheIndex,n=--this._nActiveControlInterpolants,o=t[n];e.__cacheIndex=n,t[n]=e,o.__cacheIndex=s,t[s]=o},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(e,t){var s,a,r=t||this._root,c=r.uuid,n=typeof e=="string"?AnimationClip.findByName(r,e):e,l=n!==null?n.uuid:e,o=this._actionsByClip[l],i=null;if(o!==void 0){if(a=o.actionByRoot[c],a!==void 0)return a;i=o.knownActions[0],n===null&&(n=i._clip)}return n===null?null:(s=new AnimationAction(this,n,t),this._bindAction(s,i),this._addInactiveAction(s,l,c),s)},existingAction:function(e,t){var n=t||this._root,i=n.uuid,s=typeof e=="string"?AnimationClip.findByName(n,e):e,a=s?s.uuid:e,o=this._actionsByClip[a];return o!==void 0?o.actionByRoot[i]||null:null},stopAllAction:function(){var e,t=this._actions,n=this._nActiveActions,s=this._bindings,o=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(e=0;e!==n;++e)t[e].reset();for(e=0;e!==o;++e)s[e].useCount=0;return this},update:function(e){e*=this.timeScale;for(var s,o,i,a=this._actions,r=this._nActiveActions,c=this.time+=e,l=Math.sign(e),n=this._accuIndex^=1,t=0;t!==r;++t)s=a[t],s._update(c,e,l,n);o=this._bindings,i=this._nActiveBindings;for(t=0;t!==i;++t)o[t].apply(n);return this},setTime:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)},getRoot:function(){return this._root},uncacheClip:function(e){var t,s,o,i,a,d,n=this._actions,r=e.uuid,c=this._actionsByClip,l=c[r];if(l!==void 0){o=l.knownActions;for(s=0,d=o.length;s!==d;++s)t=o[s],this._deactivateAction(t),i=t._cacheIndex,a=n[n.length-1],t._cacheIndex=null,t._byClipCacheIndex=null,a._cacheIndex=i,n[i]=a,n.pop(),this._removeInactiveBindingsForAction(t);delete c[r]}},uncacheRoot:function(e){var t,n,s,a,r,c,l,o=e.uuid,i=this._actionsByClip;for(c in i)a=i[c].actionByRoot,t=a[o],t!==void 0&&(this._deactivateAction(t),this._removeInactiveAction(t));if(r=this._bindingsByRootAndName,n=r[o],n!==void 0)for(l in n)s=n[l],s.restoreOriginalState(),this._removeInactiveBinding(s)},uncacheAction:function(e,t){var n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});function Uniform(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}Uniform.prototype.clone=function(){return new Uniform(this.value.clone===void 0?this.value:this.value.clone())};function InstancedInterleavedBuffer(e,t,n){InterleavedBuffer.call(this,e,t),this.meshPerAttribute=n||1}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:!0,copy:function(e){return InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}});function Raycaster(e,t,n,s){this.ray=new Ray(e,t),this.near=n||0,this.far=s||1/0,this.camera=null,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function ascSort(e,t){return e.distance-t.distance}function intersectObject(e,t,n,s){if(e.visible===!1)return;if(e.raycast(t,n),s===!0){o=e.children;for(var o,i=0,a=o.length;i<a;i++)intersectObject(o[i],t,n,!0)}}Object.assign(Raycaster.prototype,{linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t,n){var s=n||[];return intersectObject(e,this,s,t),s.sort(ascSort),s},intersectObjects:function(e,t,n){if(s=n||[],Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),s;for(var s,o=0,i=e.length;o<i;o++)intersectObject(e[o],this,s,t);return s.sort(ascSort),s}});function Spherical(e,t,n){return this.radius=e!==void 0?e:1,this.phi=t!==void 0?t:0,this.theta=n!==void 0?n:0,this}Object.assign(Spherical.prototype,{set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(MathUtils.clamp(t/this.radius,-1,1))),this}});function Cylindrical(e,t,n){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=n!==void 0?n:0,this}Object.assign(Cylindrical.prototype,{set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)},setFromCartesianCoords:function(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}}),_vector$7=new Vector2;function Box2(e,t){this.min=e!==void 0?e:new Vector2(+(1/0),+(1/0)),this.max=t!==void 0?t:new Vector2(-(1/0),-(1/0))}Object.assign(Box2.prototype,{set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(e,t){var n=_vector$7.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=+(1/0),this.max.x=this.max.y=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){return e===void 0&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){return e===void 0&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Vector2),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Vector2),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){return t===void 0&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Vector2),t.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=_vector$7.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}),_startP=new Vector3,_startEnd=new Vector3;function Line3(e,t){this.start=e!==void 0?e:new Vector3,this.end=t!==void 0?t:new Vector3}Object.assign(Line3.prototype,{set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){return e===void 0&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new Vector3),e.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return e===void 0&&(console.warn("THREE.Line3: .delta() target is now required"),e=new Vector3),e.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){return t===void 0&&(console.warn("THREE.Line3: .at() target is now required"),t=new Vector3),this.delta(t).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(e,t){_startP.subVectors(e,this.start),_startEnd.subVectors(this.end,this.start);var s=_startEnd.dot(_startEnd),o=_startEnd.dot(_startP),n=o/s;return t&&(n=MathUtils.clamp(n,0,1)),n},closestPointToPoint:function(e,t,n){var s=this.closestPointToPointParameter(e,t);return n===void 0&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new Vector3),this.delta(n).multiplyScalar(s).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}});function ImmediateRenderObject(e){Object3D.call(this),this.material=e,this.render=function(){}}ImmediateRenderObject.prototype=Object.create(Object3D.prototype),ImmediateRenderObject.prototype.constructor=ImmediateRenderObject,ImmediateRenderObject.prototype.isImmediateRenderObject=!0,_vector$8=new Vector3;function SpotLightHelper(e,t){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,n=new BufferGeometry,s=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var n,s,a,r,l,o=0,c=1,i=32;o<i;o++,c++)a=o/i*Math.PI*2,r=c/i*Math.PI*2,s.push(Math.cos(a),Math.sin(a),1,Math.cos(r),Math.sin(r),1);n.setAttribute("position",new Float32BufferAttribute(s,3)),l=new LineBasicMaterial({fog:!1}),this.cone=new LineSegments(n,l),this.add(this.cone),this.update()}SpotLightHelper.prototype=Object.create(Object3D.prototype),SpotLightHelper.prototype.constructor=SpotLightHelper,SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},SpotLightHelper.prototype.update=function(){this.light.updateMatrixWorld();var e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),_vector$8.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(_vector$8),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)},_vector$9=new Vector3,_boneMatrix=new Matrix4,_matrixWorldInv=new Matrix4;function getBoneList(e){var n,t=[];e&&e.isBone&&t.push(e);for(n=0;n<e.children.length;n++)t.push.apply(t,getBoneList(e.children[n]));return t}function SkeletonHelper(e){for(var c,l,t=getBoneList(e),n=new BufferGeometry,s=[],o=[],i=new Color(0,0,1),a=new Color(0,1,0),r=0;r<t.length;r++)c=t[r],c.parent&&c.parent.isBone&&(s.push(0,0,0),s.push(0,0,0),o.push(i.r,i.g,i.b),o.push(a.r,a.g,a.b));n.setAttribute("position",new Float32BufferAttribute(s,3)),n.setAttribute("color",new Float32BufferAttribute(o,3)),l=new LineBasicMaterial({vertexColors:VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),LineSegments.call(this,n,l),this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}SkeletonHelper.prototype=Object.create(LineSegments.prototype),SkeletonHelper.prototype.constructor=SkeletonHelper,SkeletonHelper.prototype.updateMatrixWorld=function(e){n=this.bones,s=this.geometry,o=s.getAttribute("position"),_matrixWorldInv.getInverse(this.root.matrixWorld);for(var t,n,s,o,i=0,a=0;i<n.length;i++)t=n[i],t.parent&&t.parent.isBone&&(_boneMatrix.multiplyMatrices(_matrixWorldInv,t.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),o.setXYZ(a,_vector$9.x,_vector$9.y,_vector$9.z),_boneMatrix.multiplyMatrices(_matrixWorldInv,t.parent.matrixWorld),_vector$9.setFromMatrixPosition(_boneMatrix),o.setXYZ(a+1,_vector$9.x,_vector$9.y,_vector$9.z),a+=2);s.getAttribute("position").needsUpdate=!0,Object3D.prototype.updateMatrixWorld.call(this,e)};function PointLightHelper(e,t,n){this.light=e,this.light.updateMatrixWorld(),this.color=n;var s=new SphereBufferGeometry(t,4,2),o=new MeshBasicMaterial({wireframe:!0,fog:!1});Mesh.call(this,s,o),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}PointLightHelper.prototype=Object.create(Mesh.prototype),PointLightHelper.prototype.constructor=PointLightHelper,PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},PointLightHelper.prototype.update=function(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)},_vector$a=new Vector3,_color1=new Color,_color2=new Color;function HemisphereLightHelper(e,t,n){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;var o,i,s=new OctahedronBufferGeometry(t);s.rotateY(Math.PI*.5),this.material=new MeshBasicMaterial({wireframe:!0,fog:!1}),this.color===void 0&&(this.material.vertexColors=VertexColors),o=s.getAttribute("position"),i=new Float32Array(o.count*3),s.setAttribute("color",new BufferAttribute(i,3)),this.add(new Mesh(s,this.material)),this.update()}HemisphereLightHelper.prototype=Object.create(Object3D.prototype),HemisphereLightHelper.prototype.constructor=HemisphereLightHelper,HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},HemisphereLightHelper.prototype.update=function(){if(s=this.children[0],this.color!==void 0)this.material.color.set(this.color);else{e=s.geometry.getAttribute("color"),_color1.copy(this.light.color),_color2.copy(this.light.groundColor);for(var e,n,s,t=0,o=e.count;t<o;t++)n=t<o/2?_color1:_color2,e.setXYZ(t,n.r,n.g,n.b);e.needsUpdate=!0}s.lookAt(_vector$a.setFromMatrixPosition(this.light.matrixWorld).negate())};function GridHelper(e,t,n,s){e=e||10,t=t||10,n=new Color(n!==void 0?n:4473924),s=new Color(s!==void 0?s:8947848),h=t/2,m=e/t,i=e/2,l=[],a=[];for(var i,a,c,l,d,h,m,f,u=0,o=0,r=-i;u<=t;u++,r+=m)l.push(-i,0,r,i,0,r),l.push(r,0,-i,r,0,i),c=u===h?n:s,c.toArray(a,o),o+=3,c.toArray(a,o),o+=3,c.toArray(a,o),o+=3,c.toArray(a,o),o+=3;d=new BufferGeometry,d.setAttribute("position",new Float32BufferAttribute(l,3)),d.setAttribute("color",new Float32BufferAttribute(a,3)),f=new LineBasicMaterial({vertexColors:VertexColors}),LineSegments.call(this,d,f)}GridHelper.prototype=Object.assign(Object.create(LineSegments.prototype),{constructor:GridHelper,copy:function(e){return LineSegments.prototype.copy.call(this,e),this.geometry.copy(e.geometry),this.material.copy(e.material),this},clone:function(){return(new this.constructor).copy(this)}});function PolarGridHelper(e,t,n,s,o,i){e=e||10,t=t||16,n=n||8,s=s||64,o=new Color(o!==void 0?o:4473924),i=new Color(i!==void 0?i:8947848);var a,r,c,l,d,m,f,p,g,u=[],h=[];for(r=0;r<=t;r++)c=r/t*(Math.PI*2),l=Math.sin(c)*e,d=Math.cos(c)*e,u.push(0,0,0),u.push(l,0,d),a=r&1?o:i,h.push(a.r,a.g,a.b),h.push(a.r,a.g,a.b);for(r=0;r<=n;r++){a=r&1?o:i,f=e-e/n*r;for(m=0;m<s;m++)c=m/s*(Math.PI*2),l=Math.sin(c)*f,d=Math.cos(c)*f,u.push(l,0,d),h.push(a.r,a.g,a.b),c=(m+1)/s*(Math.PI*2),l=Math.sin(c)*f,d=Math.cos(c)*f,u.push(l,0,d),h.push(a.r,a.g,a.b)}p=new BufferGeometry,p.setAttribute("position",new Float32BufferAttribute(u,3)),p.setAttribute("color",new Float32BufferAttribute(h,3)),g=new LineBasicMaterial({vertexColors:VertexColors}),LineSegments.call(this,p,g)}PolarGridHelper.prototype=Object.create(LineSegments.prototype),PolarGridHelper.prototype.constructor=PolarGridHelper,_v1$5=new Vector3,_v2$3=new Vector3,_v3$1=new Vector3;function DirectionalLightHelper(e,t,n){Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);var o,s=new BufferGeometry;s.setAttribute("position",new Float32BufferAttribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3)),o=new LineBasicMaterial({fog:!1}),this.lightPlane=new Line(s,o),this.add(this.lightPlane),s=new BufferGeometry,s.setAttribute("position",new Float32BufferAttribute([0,0,0,0,0,1],3)),this.targetLine=new Line(s,o),this.add(this.targetLine),this.update()}DirectionalLightHelper.prototype=Object.create(Object3D.prototype),DirectionalLightHelper.prototype.constructor=DirectionalLightHelper,DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},DirectionalLightHelper.prototype.update=function(){_v1$5.setFromMatrixPosition(this.light.matrixWorld),_v2$3.setFromMatrixPosition(this.light.target.matrixWorld),_v3$1.subVectors(_v2$3,_v1$5),this.lightPlane.lookAt(_v2$3),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(_v2$3),this.targetLine.scale.z=_v3$1.length()},_vector$b=new Vector3,_camera=new Camera;function CameraHelper(e){var a=new BufferGeometry,u=new LineBasicMaterial({color:16777215,vertexColors:FaceColors}),r=[],l=[],o={},n=new Color(16755200),i=new Color(16711680),c=new Color(43775),h=new Color(16777215),s=new Color(3355443);t("n1","n2",n),t("n2","n4",n),t("n4","n3",n),t("n3","n1",n),t("f1","f2",n),t("f2","f4",n),t("f4","f3",n),t("f3","f1",n),t("n1","f1",n),t("n2","f2",n),t("n3","f3",n),t("n4","f4",n),t("p","n1",i),t("p","n2",i),t("p","n3",i),t("p","n4",i),t("u1","u2",c),t("u2","u3",c),t("u3","u1",c),t("c","t",h),t("p","c",s),t("cn1","cn2",s),t("cn3","cn4",s),t("cf1","cf2",s),t("cf3","cf4",s);function t(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),l.push(t.r,t.g,t.b),o[e]===void 0&&(o[e]=[]),o[e].push(r.length/3-1)}a.setAttribute("position",new Float32BufferAttribute(r,3)),a.setAttribute("color",new Float32BufferAttribute(l,3)),LineSegments.call(this,a,u),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}CameraHelper.prototype=Object.create(LineSegments.prototype),CameraHelper.prototype.constructor=CameraHelper,CameraHelper.prototype.update=function(){var e=this.geometry,t=this.pointMap,s=1,n=1;_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),setPoint("c",t,e,_camera,0,0,-1),setPoint("t",t,e,_camera,0,0,1),setPoint("n1",t,e,_camera,-s,-n,-1),setPoint("n2",t,e,_camera,s,-n,-1),setPoint("n3",t,e,_camera,-s,n,-1),setPoint("n4",t,e,_camera,s,n,-1),setPoint("f1",t,e,_camera,-s,-n,1),setPoint("f2",t,e,_camera,s,-n,1),setPoint("f3",t,e,_camera,-s,n,1),setPoint("f4",t,e,_camera,s,n,1),setPoint("u1",t,e,_camera,s*.7,n*1.1,-1),setPoint("u2",t,e,_camera,-s*.7,n*1.1,-1),setPoint("u3",t,e,_camera,0,n*2,-1),setPoint("cf1",t,e,_camera,-s,0,1),setPoint("cf2",t,e,_camera,s,0,1),setPoint("cf3",t,e,_camera,0,-n,1),setPoint("cf4",t,e,_camera,0,n,1),setPoint("cn1",t,e,_camera,-s,0,-1),setPoint("cn2",t,e,_camera,s,0,-1),setPoint("cn3",t,e,_camera,0,-n,-1),setPoint("cn4",t,e,_camera,0,n,-1),e.getAttribute("position").needsUpdate=!0};function setPoint(e,t,n,s,o,i,a){if(_vector$b.set(o,i,a).unproject(s),r=t[e],r!==void 0){l=n.getAttribute("position");for(var r,l,c=0,d=r.length;c<d;c++)l.setXYZ(r[c],_vector$b.x,_vector$b.y,_vector$b.z)}}_box$3=new Box3;function BoxHelper(e,t){this.object=e,t===void 0&&(t=16776960);var s=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),o=new Float32Array(8*3),n=new BufferGeometry;n.setIndex(new BufferAttribute(s,1)),n.setAttribute("position",new BufferAttribute(o,3)),LineSegments.call(this,n,new LineBasicMaterial({color:t})),this.matrixAutoUpdate=!1,this.update()}BoxHelper.prototype=Object.create(LineSegments.prototype),BoxHelper.prototype.constructor=BoxHelper,BoxHelper.prototype.update=function(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&_box$3.setFromObject(this.object),_box$3.isEmpty())return;var n=_box$3.min,s=_box$3.max,o=this.geometry.attributes.position,t=o.array;t[0]=s.x,t[1]=s.y,t[2]=s.z,t[3]=n.x,t[4]=s.y,t[5]=s.z,t[6]=n.x,t[7]=n.y,t[8]=s.z,t[9]=s.x,t[10]=n.y,t[11]=s.z,t[12]=s.x,t[13]=s.y,t[14]=n.z,t[15]=n.x,t[16]=s.y,t[17]=n.z,t[18]=n.x,t[19]=n.y,t[20]=n.z,t[21]=s.x,t[22]=n.y,t[23]=n.z,o.needsUpdate=!0,this.geometry.computeBoundingSphere()},BoxHelper.prototype.setFromObject=function(e){return this.object=e,this.update(),this},BoxHelper.prototype.copy=function(e){return LineSegments.prototype.copy.call(this,e),this.object=e.object,this},BoxHelper.prototype.clone=function(){return(new this.constructor).copy(this)};function Box3Helper(e,t){this.type="Box3Helper",this.box=e,t=t||16776960;var s=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),o=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],n=new BufferGeometry;n.setIndex(new BufferAttribute(s,1)),n.setAttribute("position",new Float32BufferAttribute(o,3)),LineSegments.call(this,n,new LineBasicMaterial({color:t})),this.geometry.computeBoundingSphere()}Box3Helper.prototype=Object.create(LineSegments.prototype),Box3Helper.prototype.constructor=Box3Helper,Box3Helper.prototype.updateMatrixWorld=function(e){var t=this.box;if(t.isEmpty())return;t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),Object3D.prototype.updateMatrixWorld.call(this,e)};function PlaneHelper(e,t,n){this.type="PlaneHelper",this.plane=e,this.size=t===void 0?1:t;var s,a,i=n!==void 0?n:16776960,r=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new BufferGeometry;o.setAttribute("position",new Float32BufferAttribute(r,3)),o.computeBoundingSphere(),Line.call(this,o,new LineBasicMaterial({color:i})),a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],s=new BufferGeometry,s.setAttribute("position",new Float32BufferAttribute(a,3)),s.computeBoundingSphere(),this.add(new Mesh(s,new MeshBasicMaterial({color:i,opacity:.2,transparent:!0,depthWrite:!1})))}PlaneHelper.prototype=Object.create(Line.prototype),PlaneHelper.prototype.constructor=PlaneHelper,PlaneHelper.prototype.updateMatrixWorld=function(e){var t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?BackSide:FrontSide,this.lookAt(this.plane.normal),Object3D.prototype.updateMatrixWorld.call(this,e)},_axis=new Vector3;function ArrowHelper(e,t,n,s,o,i){Object3D.call(this),e===void 0&&(e=new Vector3(0,0,1)),t===void 0&&(t=new Vector3(0,0,0)),n===void 0&&(n=1),s===void 0&&(s=16776960),o===void 0&&(o=.2*n),i===void 0&&(i=.2*o),_lineGeometry===void 0&&(_lineGeometry=new BufferGeometry,_lineGeometry.setAttribute("position",new Float32BufferAttribute([0,0,0,0,1,0],3)),_coneGeometry=new CylinderBufferGeometry(0,.5,1,5,1),_coneGeometry.translate(0,-.5,0)),this.position.copy(t),this.line=new Line(_lineGeometry,new LineBasicMaterial({color:s})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:s})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,o,i)}ArrowHelper.prototype=Object.create(Object3D.prototype),ArrowHelper.prototype.constructor=ArrowHelper,ArrowHelper.prototype.setDirection=function(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{_axis.set(e.z,0,-e.x).normalize();var t=Math.acos(e.y);this.quaternion.setFromAxisAngle(_axis,t)}},ArrowHelper.prototype.setLength=function(e,t,n){t===void 0&&(t=.2*e),n===void 0&&(n=.2*t),this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},ArrowHelper.prototype.copy=function(e){return Object3D.prototype.copy.call(this,e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this},ArrowHelper.prototype.clone=function(){return(new this.constructor).copy(this)};function AxesHelper(e){e=e||1;var n,s=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],o=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],t=new BufferGeometry;t.setAttribute("position",new Float32BufferAttribute(s,3)),t.setAttribute("color",new Float32BufferAttribute(o,3)),n=new LineBasicMaterial({vertexColors:VertexColors}),LineSegments.call(this,t,n)}AxesHelper.prototype=Object.create(LineSegments.prototype),AxesHelper.prototype.constructor=AxesHelper;var i,LOD_MIN=4,LOD_MAX=8,SIZE_MAX=Math.pow(2,LOD_MAX),EXTRA_LOD_SIGMA=[.125,.215,.35,.446,.526,.582],TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length,MAX_SAMPLES=20,ENCODINGS={[LinearEncoding]:0,[sRGBEncoding]:1,[RGBEEncoding]:2,[RGBM7Encoding]:3,[RGBM16Encoding]:4,[RGBDEncoding]:5,[GammaEncoding]:6},_flatCamera=new OrthographicCamera,_blurMaterial=_getBlurShader(MAX_SAMPLES),_equirectShader=null,_cubemapShader=null,{_lodPlanes,_sizeLods,_sigmas}=_createPlanes(),MOUSE,TOUCH,CullFaceNone,CullFaceBack,CullFaceFront,CullFaceFrontBack,FrontFaceDirectionCW,FrontFaceDirectionCCW,BasicShadowMap,PCFShadowMap,PCFSoftShadowMap,VSMShadowMap,FrontSide,BackSide,DoubleSide,FlatShading,SmoothShading,NoColors,FaceColors,VertexColors,NoBlending,NormalBlending,AdditiveBlending,SubtractiveBlending,MultiplyBlending,CustomBlending,AddEquation,SubtractEquation,ReverseSubtractEquation,MinEquation,MaxEquation,ZeroFactor,OneFactor,SrcColorFactor,OneMinusSrcColorFactor,SrcAlphaFactor,OneMinusSrcAlphaFactor,DstAlphaFactor,OneMinusDstAlphaFactor,DstColorFactor,OneMinusDstColorFactor,SrcAlphaSaturateFactor,NeverDepth,AlwaysDepth,LessDepth,LessEqualDepth,EqualDepth,GreaterEqualDepth,GreaterDepth,NotEqualDepth,MultiplyOperation,MixOperation,AddOperation,NoToneMapping,LinearToneMapping,ReinhardToneMapping,Uncharted2ToneMapping,CineonToneMapping,ACESFilmicToneMapping,UVMapping,CubeReflectionMapping,CubeRefractionMapping,EquirectangularReflectionMapping,EquirectangularRefractionMapping,SphericalReflectionMapping,CubeUVReflectionMapping,CubeUVRefractionMapping,RepeatWrapping,ClampToEdgeWrapping,MirroredRepeatWrapping,NearestFilter,NearestMipmapNearestFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipMapLinearFilter,LinearFilter,LinearMipmapNearestFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipMapLinearFilter,UnsignedByteType,ByteType,ShortType,UnsignedShortType,IntType,UnsignedIntType,FloatType,HalfFloatType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedInt248Type,AlphaFormat,RGBFormat,RGBAFormat,LuminanceFormat,LuminanceAlphaFormat,RGBEFormat,DepthFormat,DepthStencilFormat,RedFormat,RedIntegerFormat,RGFormat,RGIntegerFormat,RGBIntegerFormat,RGBAIntegerFormat,RGB_S3TC_DXT1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGB_PVRTC_4BPPV1_Format,RGB_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_PVRTC_2BPPV1_Format,RGB_ETC1_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_10x10_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,LoopOnce,LoopRepeat,LoopPingPong,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,ZeroCurvatureEnding,ZeroSlopeEnding,WrapAroundEnding,TrianglesDrawMode,TriangleStripDrawMode,TriangleFanDrawMode,LinearEncoding,sRGBEncoding,GammaEncoding,RGBEEncoding,LogLuvEncoding,RGBM7Encoding,RGBM16Encoding,RGBDEncoding,BasicDepthPacking,RGBADepthPacking,TangentSpaceNormalMap,ObjectSpaceNormalMap,ZeroStencilOp,KeepStencilOp,ReplaceStencilOp,IncrementStencilOp,DecrementStencilOp,IncrementWrapStencilOp,DecrementWrapStencilOp,InvertStencilOp,NeverStencilFunc,LessStencilFunc,EqualStencilFunc,LessEqualStencilFunc,GreaterStencilFunc,NotEqualStencilFunc,GreaterEqualStencilFunc,AlwaysStencilFunc,StaticDrawUsage,DynamicDrawUsage,StreamDrawUsage,StaticReadUsage,DynamicReadUsage,StreamReadUsage,StaticCopyUsage,DynamicCopyUsage,StreamCopyUsage,_lut,MathUtils,_canvas,ImageUtils,textureId,_vector,_quaternion,_v1,_m1,_zero,_one,_x,_y,_z,_matrix,_quaternion$1,_object3DId,_v1$1,_q1,_m1$1,_target,_position,_scale,_quaternion$2,_xAxis,_yAxis,_zAxis,_addedEvent,_removedEvent,_points,_vector$1,_box,_v0,_v1$2,_v2,_f0,_f1,_f2,_center,_extents,_triangleNormal,_testAxis,_box$1,_vector$2,_segCenter,_segDir,_diff,_edge1,_edge2,_normal,_vector1,_vector2,_normalMatrix,_v0$1,_v1$3,_v2$1,_v3,_vab,_vac,_vbc,_vap,_vbp,_vcp,_colorKeywords,_hslA,_hslB,materialId,_vector$3,_bufferGeometryId,_m1$2,_obj,_offset,_box$2,_boxMorphTargets,_vector$4,_inverseMatrix,_ray,_sphere,_vA,_vB,_vC,_tempA,_tempB,_tempC,_morphA,_morphB,_morphC,_uvA,_uvB,_uvC,_intersectionPoint,_intersectionPointWorld,_geometryId,_m1$3,_obj$1,_offset$1,UniformsUtils,default_vertex,default_fragment,fov,aspect,_sphere$1,_vector$5,UniformsLib,alphamap_fragment,alphamap_pars_fragment,alphatest_fragment,aomap_fragment,aomap_pars_fragment,begin_vertex,beginnormal_vertex,bsdfs,bumpmap_pars_fragment,clipping_planes_fragment,clipping_planes_pars_fragment,clipping_planes_pars_vertex,clipping_planes_vertex,color_fragment,color_pars_fragment,color_pars_vertex,color_vertex,common,cube_uv_reflection_fragment,defaultnormal_vertex,displacementmap_pars_vertex,displacementmap_vertex,emissivemap_fragment,emissivemap_pars_fragment,encodings_fragment,encodings_pars_fragment,envmap_fragment,envmap_common_pars_fragment,envmap_pars_fragment,envmap_pars_vertex,envmap_vertex,fog_vertex,fog_pars_vertex,fog_fragment,fog_pars_fragment,gradientmap_pars_fragment,lightmap_fragment,lightmap_pars_fragment,lights_lambert_vertex,lights_pars_begin,envmap_physical_pars_fragment,lights_toon_fragment,lights_toon_pars_fragment,lights_phong_fragment,lights_phong_pars_fragment,lights_physical_fragment,lights_physical_pars_fragment,lights_fragment_begin,lights_fragment_maps,lights_fragment_end,logdepthbuf_fragment,logdepthbuf_pars_fragment,logdepthbuf_pars_vertex,logdepthbuf_vertex,map_fragment,map_pars_fragment,map_particle_fragment,map_particle_pars_fragment,metalnessmap_fragment,metalnessmap_pars_fragment,morphnormal_vertex,morphtarget_pars_vertex,morphtarget_vertex,normal_fragment_begin,normal_fragment_maps,normalmap_pars_fragment,clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps,clearcoat_normalmap_pars_fragment,packing,premultiplied_alpha_fragment,project_vertex,dithering_fragment,dithering_pars_fragment,roughnessmap_fragment,roughnessmap_pars_fragment,shadowmap_pars_fragment,shadowmap_pars_vertex,shadowmap_vertex,shadowmask_pars_fragment,skinbase_vertex,skinning_pars_vertex,skinning_vertex,skinnormal_vertex,specularmap_fragment,specularmap_pars_fragment,tonemapping_fragment,tonemapping_pars_fragment,uv_pars_fragment,uv_pars_vertex,uv_vertex,uv2_pars_fragment,uv2_pars_vertex,uv2_vertex,worldpos_vertex,background_frag,background_vert,cube_frag,cube_vert,depth_frag,depth_vert,distanceRGBA_frag,distanceRGBA_vert,equirect_frag,equirect_vert,linedashed_frag,linedashed_vert,meshbasic_frag,meshbasic_vert,meshlambert_frag,meshlambert_vert,meshmatcap_frag,meshmatcap_vert,meshtoon_frag,meshtoon_vert,meshphong_frag,meshphong_vert,meshphysical_frag,meshphysical_vert,normal_frag,normal_vert,points_frag,points_vert,shadow_frag,shadow_vert,sprite_frag,sprite_vert,ShaderChunk,ShaderLib,emptyTexture,emptyTexture2dArray,emptyTexture3d,emptyCubeTexture,arrayCacheF32,arrayCacheI32,mat4array,mat3array,mat2array,RePathPart,programIdCount,includePattern,loopPattern,nextVersion,vsm_frag,vsm_vert,_vector$6,_geometry,_intersectPoint,_worldScale,_mvPosition,_alignedPosition,_rotatedPosition,_viewWorldMatrix,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,_v1$4,_v2$2,_offsetMatrix,_identityMatrix,_instanceLocalMatrix,_instanceWorldMatrix,_instanceIntersects,_mesh,_start,_end,_inverseMatrix$1,_ray$1,_sphere$2,_start$1,_end$1,_inverseMatrix$2,_ray$2,_sphere$3,_position$1,Earcut,ShapeUtils,WorldUVGenerator,Geometries,Materials,AnimationUtils,Cache,DefaultLoadingManager,loading,Curves,LoaderUtils,TYPED_ARRAYS,TEXTURE_MAPPING,TEXTURE_WRAPPING,TEXTURE_FILTER,_context,AudioContext,_eyeRight,_eyeLeft,_position$2,_quaternion$3,_scale$1,_orientation,_position$3,_quaternion$4,_scale$2,_orientation$1,_RESERVED_CHARS_RE,_reservedRe,_wordChar,_wordCharOrDot,_directoryRe,_nodeRe,_objectRe,_propertyRe,_trackRe,_supportedObjectNames,_vector$7,_startP,_startEnd,_vector$8,_vector$9,_boneMatrix,_matrixWorldInv,_vector$a,_color1,_color2,_v1$5,_v2$3,_v3$1,_vector$b,_camera,_box$3,_axis,_lineGeometry,_coneGeometry,REVISION,LineStrip,LinePieces,GeometryUtils,SceneUtils,_pingPongRenderTarget=null,_renderer=null,_oldTarget=null,PHI=(1+Math.sqrt(5))/2,INV_PHI=1/PHI,_axisDirections=[new Vector3(1,1,1),new Vector3(-1,1,1),new Vector3(1,1,-1),new Vector3(-1,1,-1),new Vector3(0,PHI,INV_PHI),new Vector3(0,PHI,-INV_PHI),new Vector3(INV_PHI,0,PHI),new Vector3(-INV_PHI,0,PHI),new Vector3(PHI,INV_PHI,0),new Vector3(-PHI,INV_PHI,0)];function PMREMGenerator(e){_renderer=e,_compileMaterial(_blurMaterial)}PMREMGenerator.prototype={constructor:PMREMGenerator,fromScene:function(e,t=0,n=.1,s=100){_oldTarget=_renderer.getRenderTarget();var o=_allocateTargets();return _sceneToCubeUV(e,n,s,o),t>0&&_blur(o,0,0,t),_applyPMREM(o),_cleanup(o),o},fromEquirectangular:function(e){return e.magFilter=NearestFilter,e.minFilter=NearestFilter,e.generateMipmaps=!1,this.fromCubemap(e)},fromCubemap:function(e){_oldTarget=_renderer.getRenderTarget();var t=_allocateTargets(e);return _textureToCubeUV(e,t),_applyPMREM(t),_cleanup(t),t},compileCubemapShader:function(){_cubemapShader==null&&(_cubemapShader=_getCubemapShader(),_compileMaterial(_cubemapShader))},compileEquirectangularShader:function(){_equirectShader==null&&(_equirectShader=_getEquirectShader(),_compileMaterial(_equirectShader))},dispose:function(){_blurMaterial.dispose(),_cubemapShader!=null&&_cubemapShader.dispose(),_equirectShader!=null&&_equirectShader.dispose();for(var e=0;e<_lodPlanes.length;e++)_lodPlanes[e].dispose()}};function _createPlanes(){for(var e,t,n,s,o,i,a,c,l,d,u,h,m,f,p,g,v,y,w,O,j=[],x=[],_=[],b=LOD_MAX,r=0;r<TOTAL_LODS;r++){d=Math.pow(2,b),x.push(d),l=1/d,r>LOD_MAX-LOD_MIN?l=EXTRA_LOD_SIGMA[r-LOD_MAX+LOD_MIN-1]:r==0&&(l=0),_.push(l),f=1/(d-1),i=-f/2,t=1+f/2,y=[i,i,t,i,t,t,i,i,t,t,i,t],c=6,o=6,m=3,h=2,u=1,p=new Float32Array(m*o*c),g=new Float32Array(h*o*c),v=new Float32Array(u*o*c);for(e=0;e<c;e++)s=e%3*2/3-1,n=e>2?0:-1,w=[s,n,0,s+2/3,n,0,s+2/3,n+1,0,s,n,0,s+2/3,n+1,0,s,n+1,0],p.set(w,m*o*e),g.set(y,h*o*e),O=[e,e,e,e,e,e],v.set(O,u*o*e);a=new BufferGeometry,a.setAttribute("position",new BufferAttribute(p,m)),a.setAttribute("uv",new BufferAttribute(g,h)),a.setAttribute("faceIndex",new BufferAttribute(v,u)),j.push(a),b>LOD_MIN&&b--}return{_lodPlanes:j,_sizeLods:x,_sigmas:_}}function _allocateTargets(e){var t={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:!1,type:e?e.type:UnsignedByteType,format:e?e.format:RGBEFormat,encoding:e?e.encoding:RGBEEncoding,depthBuffer:!1,stencilBuffer:!1},n=_createRenderTarget(t);return n.depthBuffer=!e,_pingPongRenderTarget=_createRenderTarget(t),n}function _cleanup(e){_pingPongRenderTarget.dispose(),_renderer.setRenderTarget(_oldTarget),e.scissorTest=!1,e.setSize(e.width,e.height)}function _sceneToCubeUV(e,t,n,s){var o,i,r,c,u,h,b=90,j=1,a=new PerspectiveCamera(b,j,t,n),d=[1,1,1,1,-1,1],l=[1,1,-1,-1,-1,1],m=_renderer.outputEncoding,f=_renderer.toneMapping,p=_renderer.toneMappingExposure,g=_renderer.getClearColor(),v=_renderer.getClearAlpha();_renderer.toneMapping=LinearToneMapping,_renderer.toneMappingExposure=1,_renderer.outputEncoding=LinearEncoding,e.scale.z*=-1,i=e.background,i&&i.isColor&&(i.convertSRGBToLinear(),u=Math.max(i.r,i.g,i.b),c=Math.min(Math.max(Math.ceil(Math.log2(u)),-128),127),i=i.multiplyScalar(Math.pow(2,-c)),h=(c+128)/255,_renderer.setClearColor(i,h),e.background=null);for(o=0;o<6;o++)r=o%3,r==0?(a.up.set(0,d[o],0),a.lookAt(l[o],0,0)):r==1?(a.up.set(0,0,d[o]),a.lookAt(0,l[o],0)):(a.up.set(0,d[o],0),a.lookAt(0,0,l[o])),_setViewport(s,r*SIZE_MAX,o>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX),_renderer.setRenderTarget(s),_renderer.render(e,a);_renderer.toneMapping=f,_renderer.toneMappingExposure=p,_renderer.outputEncoding=m,_renderer.setClearColor(g,v),e.scale.z*=-1}function _textureToCubeUV(e,t){var n,s,o=new Scene;e.isCubeTexture?_cubemapShader==null&&(_cubemapShader=_getCubemapShader()):_equirectShader==null&&(_equirectShader=_getEquirectShader()),s=e.isCubeTexture?_cubemapShader:_equirectShader,o.add(new Mesh(_lodPlanes[0],s)),n=s.uniforms,n.envMap.value=e,e.isCubeTexture||n.texelSize.value.set(1/e.image.width,1/e.image.height),n.inputEncoding.value=ENCODINGS[e.encoding],n.outputEncoding.value=ENCODINGS[e.encoding],_setViewport(t,0,0,3*SIZE_MAX,2*SIZE_MAX),_renderer.setRenderTarget(t),_renderer.render(o,_flatCamera)}function _compileMaterial(e){var t=new Scene;t.add(new Mesh(_lodPlanes[0],e)),_renderer.compile(t,_flatCamera)}function _createRenderTarget(e){var t=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,e);return t.texture.mapping=CubeUVReflectionMapping,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function _setViewport(e,t,n,s,o){e.viewport.set(t,n,s,o),e.scissor.set(t,n,s,o)}function _applyPMREM(e){var t,n,s,o=_renderer.autoClear;_renderer.autoClear=!1;for(t=1;t<TOTAL_LODS;t++)n=Math.sqrt(_sigmas[t]*_sigmas[t]-_sigmas[t-1]*_sigmas[t-1]),s=_axisDirections[(t-1)%_axisDirections.length],_blur(e,t-1,t,n,s);_renderer.autoClear=o}function _blur(e,t,n,s,o){_halfBlur(e,_pingPongRenderTarget,t,n,s,"latitudinal",o),_halfBlur(_pingPongRenderTarget,e,n,n,s,"longitudinal",o)}function _halfBlur(e,t,n,s,o,i,a){i!=="latitudinal"&&i!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");var r,c,l,d,u,h,m,f,p,g,v,j,y=3,b=new Scene;b.add(new Mesh(_lodPlanes[s],_blurMaterial)),c=_blurMaterial.uniforms,v=_sizeLods[n]-1,p=isFinite(o)?Math.PI/(2*v):2*Math.PI/(2*MAX_SAMPLES-1),g=o/p,d=isFinite(o)?1+Math.floor(y*g):MAX_SAMPLES,d>MAX_SAMPLES&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${d} samples when the maximum is set to ${MAX_SAMPLES}`),l=[],m=0;for(r=0;r<MAX_SAMPLES;++r)u=r/g,f=Math.exp(-u*u/2),l.push(f),r==0?m+=f:r<d&&(m+=2*f);for(r=0;r<l.length;r++)l[r]=l[r]/m;c.envMap.value=e.texture,c.samples.value=d,c.weights.value=l,c.latitudinal.value=i==="latitudinal",a&&(c.poleAxis.value=a),c.dTheta.value=p,c.mipInt.value=LOD_MAX-n,c.inputEncoding.value=ENCODINGS[e.texture.encoding],c.outputEncoding.value=ENCODINGS[e.texture.encoding],h=_sizeLods[s],u=3*Math.max(0,SIZE_MAX-2*h),j=(s===0?0:2*SIZE_MAX)+2*h*(s>LOD_MAX-LOD_MIN?s-LOD_MAX+LOD_MIN:0),_setViewport(t,u,j,3*h,2*h),_renderer.setRenderTarget(t),_renderer.render(b,_flatCamera)}function _getBlurShader(e){var n=new Float32Array(e),s=new Vector3(0,1,0),t=new RawShaderMaterial({defines:{n:e},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform int samples;
uniform float weights[n];
uniform bool latitudinal;
uniform float dTheta;
uniform float mipInt;
uniform vec3 poleAxis;

${_getEncodings()}

#define ENVMAP_TYPE_CUBE_UV
#include <cube_uv_reflection_fragment>

void main() {
	gl_FragColor = vec4(0.0);
	for (int i = 0; i < n; i++) {
		if (i >= samples)
			break;
		for (int dir = -1; dir < 2; dir += 2) {
			if (i == 0 && dir == 1)
				continue;
			vec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);
			if (all(equal(axis, vec3(0.0))))
				axis = cross(vec3(0.0, 1.0, 0.0), vOutputDirection);
			axis = normalize(axis);
			float theta = dTheta * float(dir * i);
			float cosTheta = cos(theta);
			// Rodrigues' axis-angle rotation
			vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross(axis, vOutputDirection) * sin(theta)
					+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);
			gl_FragColor.rgb +=
					weights[i] * bilinearCubeUV(envMap, sampleDirection, mipInt);
		}
	}
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return t.type="SphericalGaussianBlur",t}function _getEquirectShader(){var t=new Vector2(1,1),e=new RawShaderMaterial({uniforms:{envMap:{value:null},texelSize:{value:t},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform sampler2D envMap;
uniform vec2 texelSize;

${_getEncodings()}

#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494

void main() {
	gl_FragColor = vec4(0.0);
	vec3 outputDirection = normalize(vOutputDirection);
	vec2 uv;
	uv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;
	uv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;
	vec2 f = fract(uv / texelSize - 0.5);
	uv -= f * texelSize;
	vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x += texelSize.x;
	vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.y += texelSize.y;
	vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	uv.x -= texelSize.x;
	vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;
	vec3 tm = mix(tl, tr, f.x);
	vec3 bm = mix(bl, br, f.x);
	gl_FragColor.rgb = mix(tm, bm, f.y);
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return e.type="EquirectangularToCubeUV",e}function _getCubemapShader(){var e=new RawShaderMaterial({uniforms:{envMap:{value:null},inputEncoding:{value:ENCODINGS[LinearEncoding]},outputEncoding:{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:`
precision mediump float;
precision mediump int;
varying vec3 vOutputDirection;
uniform samplerCube envMap;

${_getEncodings()}

void main() {
	gl_FragColor = vec4(0.0);
	gl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;
	gl_FragColor = linearToOutputTexel(gl_FragColor);
}
		`,blending:NoBlending,depthTest:!1,depthWrite:!1});return e.type="CubemapToCubeUV",e}function _getCommonVertexShader(){return`
precision mediump float;
precision mediump int;
attribute vec3 position;
attribute vec2 uv;
attribute float faceIndex;
varying vec3 vOutputDirection;
vec3 getDirection(vec2 uv, float face) {
	uv = 2.0 * uv - 1.0;
	vec3 direction = vec3(uv, 1.0);
	if (face == 0.0) {
		direction = direction.zyx;
		direction.z *= -1.0;
	} else if (face == 1.0) {
		direction = direction.xzy;
		direction.z *= -1.0;
	} else if (face == 3.0) {
		direction = direction.zyx;
		direction.x *= -1.0;
	} else if (face == 4.0) {
		direction = direction.xzy;
		direction.y *= -1.0;
	} else if (face == 5.0) {
		direction.xz *= -1.0;
	}
	return direction;
}
void main() {
	vOutputDirection = getDirection(uv, faceIndex);
	gl_Position = vec4( position, 1.0 );
}
	`}function _getEncodings(){return`
uniform int inputEncoding;
uniform int outputEncoding;

#include <encodings_pars_fragment>

vec4 inputTexelToLinear(vec4 value){
	if(inputEncoding == 0){
		return value;
	}else if(inputEncoding == 1){
		return sRGBToLinear(value);
	}else if(inputEncoding == 2){
		return RGBEToLinear(value);
	}else if(inputEncoding == 3){
		return RGBMToLinear(value, 7.0);
	}else if(inputEncoding == 4){
		return RGBMToLinear(value, 16.0);
	}else if(inputEncoding == 5){
		return RGBDToLinear(value, 256.0);
	}else{
		return GammaToLinear(value, 2.2);
	}
}

vec4 linearToOutputTexel(vec4 value){
	if(outputEncoding == 0){
		return value;
	}else if(outputEncoding == 1){
		return LinearTosRGB(value);
	}else if(outputEncoding == 2){
		return LinearToRGBE(value);
	}else if(outputEncoding == 3){
		return LinearToRGBM(value, 7.0);
	}else if(outputEncoding == 4){
		return LinearToRGBM(value, 16.0);
	}else if(outputEncoding == 5){
		return LinearToRGBD(value, 256.0);
	}else{
		return LinearToGamma(value, 2.2);
	}
}

vec4 envMapTexelToLinear(vec4 color) {
	return inputTexelToLinear(color);
}
	`}function Face4(e,t,n,s,o,i,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Face3(e,t,n,o,i,a)}LineStrip=0,LinePieces=1;function MeshFaceMaterial(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e}function MultiMaterial(e){return e===void 0&&(e=[]),console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,e.materials=e,e.clone=function(){return e.slice()},e}function PointCloud(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Points(e,t)}function Particle(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Sprite(e)}function ParticleSystem(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Points(e,t)}function PointCloudMaterial(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleBasicMaterial(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function ParticleSystemMaterial(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new PointsMaterial(e)}function Vertex(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Vector3(e,t,n)}function DynamicBufferAttribute(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new BufferAttribute(e,t).setUsage(DynamicDrawUsage)}function Int8Attribute(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Int8BufferAttribute(e,t)}function Uint8Attribute(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Uint8BufferAttribute(e,t)}function Uint8ClampedAttribute(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Uint8ClampedBufferAttribute(e,t)}function Int16Attribute(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Int16BufferAttribute(e,t)}function Uint16Attribute(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Uint16BufferAttribute(e,t)}function Int32Attribute(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Int32BufferAttribute(e,t)}function Uint32Attribute(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Uint32BufferAttribute(e,t)}function Float32Attribute(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Float32BufferAttribute(e,t)}function Float64Attribute(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Float64BufferAttribute(e,t)}Curve.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},Object.assign(CurvePath.prototype,{createPointsGeometry:function(e){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead."),n=new Geometry;for(var t,n,s=0,o=e.length;s<o;s++)t=e[s],n.vertices.push(new Vector3(t.x,t.y,t.z||0));return n}}),Object.assign(Path.prototype,{fromPoints:function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)}});function ClosedSplineCurve3(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0}ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);function SplineCurve3(e){console.warn("THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);function Spline(e){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),CatmullRomCurve3.call(this,e),this.type="catmullrom"}Spline.prototype=Object.create(CatmullRomCurve3.prototype),Object.assign(Spline.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}});function AxisHelper(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new AxesHelper(e)}function BoundingBoxHelper(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new BoxHelper(e,t)}function EdgesHelper(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new LineSegments(new EdgesGeometry(e.geometry),new LineBasicMaterial({color:t!==void 0?t:16777215}))}GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},SkeletonHelper.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};function WireframeHelper(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new LineSegments(new WireframeGeometry(e.geometry),new LineBasicMaterial({color:t!==void 0?t:16777215}))}Object.assign(Loader.prototype,{extractUrlBase:function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),LoaderUtils.extractUrlBase(e)}}),Loader.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};function XHRLoader(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new FileLoader(e)}function BinaryTextureLoader(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new DataTextureLoader(e)}Object.assign(ObjectLoader.prototype,{setTexturePath:function(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}),Object.assign(Box2.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}}),Object.assign(Box3.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}}),Frustum.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Line3.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Object.assign(MathUtils,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(e){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),MathUtils.floorPowerOfTwo(e)},nextPowerOfTwo:function(e){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),MathUtils.ceilPowerOfTwo(e)}}),Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")}}),Object.assign(Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Vector3).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(e,t,n,s,o,i){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,s,n,o,i)}}),Plane.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Quaternion.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Object.assign(Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(Triangle.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},midpoint:function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},normal:function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},plane:function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)}}),Object.assign(Triangle,{barycoordFromPoint:function(e,t,n,s,o){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Triangle.getBarycoord(e,t,n,s,o)},normal:function(e,t,n,s){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Triangle.getNormal(e,t,n,s)}}),Object.assign(Shape.prototype,{extractAllPoints:function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ExtrudeGeometry(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new ShapeGeometry(this,e)}}),Object.assign(Vector2.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},applyProjection:function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},fromAttribute:function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},distanceToManhattan:function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Vector4.prototype,{fromAttribute:function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(Geometry.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(e){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.assign(Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(Mesh.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(Mesh.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),TrianglesDrawMode},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Skeleton.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),SkinnedMesh.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Curve.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(e){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=e}}),PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(DynamicDrawUsage)}}}),Object.assign(BufferAttribute.prototype,{setDynamic:function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?DynamicDrawUsage:StaticDrawUsage),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addAttribute:function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(t&&t.isBufferAttribute)&&!(t&&t.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new BufferAttribute(arguments[1],arguments[2]))):e==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},applyMatrix:function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)}}),Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(InterleavedBuffer.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===DynamicDrawUsage},set:function(e){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(e)}}}),Object.assign(InterleavedBuffer.prototype,{setDynamic:function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(e===!0?DynamicDrawUsage:StaticDrawUsage),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Color}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===FlatShading}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Object.assign(WebGLRenderer.prototype,{clearTarget:function(e,t,n,s){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,s)},animate:function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=e===!0?sRGBEncoding:LinearEncoding}}}),Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});function WebGLRenderTargetCube(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new WebGLCubeRenderTarget(e,n)}Object.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.defineProperties(Audio.prototype,{load:{value:function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,n=new AudioLoader;return n.load(e,function(e){t.setBuffer(e)}),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),AudioAnalyser.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},CubeCamera.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},GeometryUtils={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var s;t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),s=t.matrix,t=t.geometry),e.merge(t,s,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},ImageUtils.crossOrigin=void 0,ImageUtils.loadTexture=function(e,t,n,s){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var o,i=new TextureLoader;return i.setCrossOrigin(this.crossOrigin),o=i.load(e,n,void 0,s),t&&(o.mapping=t),o},ImageUtils.loadTextureCube=function(e,t,n,s){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var o,i=new CubeTextureLoader;return i.setCrossOrigin(this.crossOrigin),o=i.load(e,n,void 0,s),t&&(o.mapping=t),o},ImageUtils.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},ImageUtils.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function CanvasRenderer(){console.error("THREE.CanvasRenderer has been removed")}function JSONLoader(){console.error("THREE.JSONLoader has been removed.")}SceneUtils={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js")}};function LensFlare(){console.error("THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js")}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:REVISION}}));export{ACESFilmicToneMapping,AddEquation,AddOperation,AdditiveBlending,AlphaFormat,AlwaysDepth,AlwaysStencilFunc,AmbientLight,AmbientLightProbe,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,AxisHelper,BackSide,BasicDepthPacking,BasicShadowMap,BinaryTextureLoader,Bone,BooleanKeyframeTrack,BoundingBoxHelper,Box2,Box3,Box3Helper,BoxBufferGeometry,BoxGeometry,BoxHelper,BufferAttribute,BufferGeometry,BufferGeometryLoader,ByteType,Cache,Camera,CameraHelper,CanvasRenderer,CanvasTexture,CatmullRomCurve3,CineonToneMapping,CircleBufferGeometry,CircleGeometry,ClampToEdgeWrapping,Clock,ClosedSplineCurve3,Color,ColorKeyframeTrack,CompressedTexture,CompressedTextureLoader,ConeBufferGeometry,ConeGeometry,CubeCamera,BoxGeometry as CubeGeometry,CubeReflectionMapping,CubeRefractionMapping,CubeTexture,CubeTextureLoader,CubeUVReflectionMapping,CubeUVRefractionMapping,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceBack,CullFaceFront,CullFaceFrontBack,CullFaceNone,Curve,CurvePath,CustomBlending,CylinderBufferGeometry,CylinderGeometry,Cylindrical,DataTexture,DataTexture2DArray,DataTexture3D,DataTextureLoader,DecrementStencilOp,DecrementWrapStencilOp,DefaultLoadingManager,DepthFormat,DepthStencilFormat,DepthTexture,DirectionalLight,DirectionalLightHelper,DirectionalLightShadow,DiscreteInterpolant,DodecahedronBufferGeometry,DodecahedronGeometry,DoubleSide,DstAlphaFactor,DstColorFactor,DynamicBufferAttribute,DynamicCopyUsage,DynamicDrawUsage,DynamicReadUsage,EdgesGeometry,EdgesHelper,EllipseCurve,EqualDepth,EqualStencilFunc,EquirectangularReflectionMapping,EquirectangularRefractionMapping,Euler,EventDispatcher,ExtrudeBufferGeometry,ExtrudeGeometry,Face3,Face4,FaceColors,FileLoader,FlatShading,Float32Attribute,Float32BufferAttribute,Float64Attribute,Float64BufferAttribute,FloatType,Fog,FogExp2,Font,FontLoader,FrontFaceDirectionCCW,FrontFaceDirectionCW,FrontSide,Frustum,GammaEncoding,Geometry,GeometryUtils,GreaterDepth,GreaterEqualDepth,GreaterEqualStencilFunc,GreaterStencilFunc,GridHelper,Group,HalfFloatType,HemisphereLight,HemisphereLightHelper,HemisphereLightProbe,IcosahedronBufferGeometry,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,ImmediateRenderObject,IncrementStencilOp,IncrementWrapStencilOp,InstancedBufferAttribute,InstancedBufferGeometry,InstancedInterleavedBuffer,InstancedMesh,Int16Attribute,Int16BufferAttribute,Int32Attribute,Int32BufferAttribute,Int8Attribute,Int8BufferAttribute,IntType,InterleavedBuffer,InterleavedBufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,InvertStencilOp,JSONLoader,KeepStencilOp,KeyframeTrack,LOD,LatheBufferGeometry,LatheGeometry,Layers,LensFlare,LessDepth,LessEqualDepth,LessEqualStencilFunc,LessStencilFunc,Light,LightProbe,LightShadow,Line,Line3,LineBasicMaterial,LineCurve,LineCurve3,LineDashedMaterial,LineLoop,LinePieces,LineSegments,LineStrip,LinearEncoding,LinearFilter,LinearInterpolant,LinearMipMapLinearFilter,LinearMipMapNearestFilter,LinearMipmapLinearFilter,LinearMipmapNearestFilter,LinearToneMapping,Loader,LoaderUtils,LoadingManager,LogLuvEncoding,LoopOnce,LoopPingPong,LoopRepeat,LuminanceAlphaFormat,LuminanceFormat,MOUSE,Material,MaterialLoader,MathUtils as Math,MathUtils,Matrix3,Matrix4,MaxEquation,Mesh,MeshBasicMaterial,MeshDepthMaterial,MeshDistanceMaterial,MeshFaceMaterial,MeshLambertMaterial,MeshMatcapMaterial,MeshNormalMaterial,MeshPhongMaterial,MeshPhysicalMaterial,MeshStandardMaterial,MeshToonMaterial,MinEquation,MirroredRepeatWrapping,MixOperation,MultiMaterial,MultiplyBlending,MultiplyOperation,NearestFilter,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NearestMipmapLinearFilter,NearestMipmapNearestFilter,NeverDepth,NeverStencilFunc,NoBlending,NoColors,NoToneMapping,NormalBlending,NotEqualDepth,NotEqualStencilFunc,NumberKeyframeTrack,Object3D,ObjectLoader,ObjectSpaceNormalMap,OctahedronBufferGeometry,OctahedronGeometry,OneFactor,OneMinusDstAlphaFactor,OneMinusDstColorFactor,OneMinusSrcAlphaFactor,OneMinusSrcColorFactor,OrthographicCamera,PCFShadowMap,PCFSoftShadowMap,PMREMGenerator,ParametricBufferGeometry,ParametricGeometry,Particle,ParticleBasicMaterial,ParticleSystem,ParticleSystemMaterial,Path,PerspectiveCamera,Plane,PlaneBufferGeometry,PlaneGeometry,PlaneHelper,PointCloud,PointCloudMaterial,PointLight,PointLightHelper,Points,PointsMaterial,PolarGridHelper,PolyhedronBufferGeometry,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,REVISION,RGBADepthPacking,RGBAFormat,RGBAIntegerFormat,RGBA_ASTC_10x10_Format,RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format,RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format,RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format,RGBA_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format,RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format,RGBDEncoding,RGBEEncoding,RGBEFormat,RGBFormat,RGBIntegerFormat,RGBM16Encoding,RGBM7Encoding,RGB_ETC1_Format,RGB_PVRTC_2BPPV1_Format,RGB_PVRTC_4BPPV1_Format,RGB_S3TC_DXT1_Format,RGFormat,RGIntegerFormat,RawShaderMaterial,Ray,Raycaster,RectAreaLight,RedFormat,RedIntegerFormat,ReinhardToneMapping,RepeatWrapping,ReplaceStencilOp,ReverseSubtractEquation,RingBufferGeometry,RingGeometry,Scene,SceneUtils,ShaderChunk,ShaderLib,ShaderMaterial,ShadowMaterial,Shape,ShapeBufferGeometry,ShapeGeometry,ShapePath,ShapeUtils,ShortType,Skeleton,SkeletonHelper,SkinnedMesh,SmoothShading,Sphere,SphereBufferGeometry,SphereGeometry,Spherical,SphericalHarmonics3,SphericalReflectionMapping,Spline,SplineCurve,SplineCurve3,SpotLight,SpotLightHelper,SpotLightShadow,Sprite,SpriteMaterial,SrcAlphaFactor,SrcAlphaSaturateFactor,SrcColorFactor,StaticCopyUsage,StaticDrawUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,SubtractEquation,SubtractiveBlending,TOUCH,TangentSpaceNormalMap,TetrahedronBufferGeometry,TetrahedronGeometry,TextBufferGeometry,TextGeometry,Texture,TextureLoader,TorusBufferGeometry,TorusGeometry,TorusKnotBufferGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeBufferGeometry,TubeGeometry,UVMapping,Uint16Attribute,Uint16BufferAttribute,Uint32Attribute,Uint32BufferAttribute,Uint8Attribute,Uint8BufferAttribute,Uint8ClampedAttribute,Uint8ClampedBufferAttribute,Uncharted2ToneMapping,Uniform,UniformsLib,UniformsUtils,UnsignedByteType,UnsignedInt248Type,UnsignedIntType,UnsignedShort4444Type,UnsignedShort5551Type,UnsignedShort565Type,UnsignedShortType,VSMShadowMap,Vector2,Vector3,Vector4,VectorKeyframeTrack,Vertex,VertexColors,VideoTexture,WebGLCubeRenderTarget,WebGLMultisampleRenderTarget,WebGLRenderTarget,WebGLRenderTargetCube,WebGLRenderer,WebGLUtils,WireframeGeometry,WireframeHelper,WrapAroundEnding,XHRLoader,ZeroCurvatureEnding,ZeroFactor,ZeroSlopeEnding,ZeroStencilOp,sRGBEncoding}