var i,canvas=document.querySelector(".quantum"),width=canvas.offsetWidth,height=canvas.offsetHeight,renderer=new THREE.WebGLRenderer({canvas,antialias:!0}),scene,camera,light,light2,geometry,vector,material,shape,resizeTm,mouse;renderer.setPixelRatio(window.devicePixelRatio>1?2:1),renderer.setSize(width,height),renderer.setClearColor(background_quantum),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(100,width/height,.1,1e4),camera.position.set(120,0,300),light=new THREE.HemisphereLight(gemisphere_light,gemisphere_light_2,.6),scene.add(light),(light=new THREE.DirectionalLight(directional_light,.5)).position.set(200,300,400),scene.add(light),light2=light.clone(),light2.position.set(-200,300,400),scene.add(light2);for(geometry=new THREE.IcosahedronGeometry(120,4),i=0;i<geometry.vertices.length;i++)vector=geometry.vertices[i],vector._o=vector.clone();material=new THREE.MeshPhongMaterial({emissive:mesh_phong_material,emissiveIntensity:.4,shininess:0}),shape=new THREE.Mesh(geometry,material);function updateVertices(e){for(var t,s,n=0;n<geometry.vertices.length;n++)t=geometry.vertices[n],t.copy(t._o),s=.4*noise.simplex3(.006*t.x+2e-4*e,.006*t.y+3e-4*e,.006*t.z)*(mouse.y+.1)+.8,t.multiplyScalar(s);geometry.verticesNeedUpdate=!0}function render(e){requestAnimationFrame(render),updateVertices(e),renderer.render(scene,camera)}function onResize(){canvas.style.width="",canvas.style.height="",width=canvas.offsetWidth,height=canvas.offsetHeight,camera.aspect=width/height,camera.updateProjectionMatrix(),renderer.setSize(width,height)}scene.add(shape),mouse=new THREE.Vector2(.8,.5);function onMouseMove(e){TweenMax.to(mouse,.8,{y:e.clientY/height,x:e.clientX/width,ease:Power1.easeOut})}requestAnimationFrame(render),window.addEventListener("mousemove",onMouseMove),window.addEventListener("resize",function(){resizeTm=clearTimeout(resizeTm),resizeTm=setTimeout(onResize,200)})