!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports._vantaEffect=t():e._vantaEffect=t()}("undefined"!=typeof self?self:this,function(){return function(e){var n={};function t(s){if(n[s])return n[s].exports;var o=n[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,s){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var o,s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(o in e)t.d(s,o,function(t){return e[t]}.bind(null,o));return s},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=17)}({0:function(e,t,n){"use strict";function o(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e}function i(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<600}n.d(t,"c",function(){return o}),n.d(t,"d",function(){return i}),n.d(t,"h",function(){return a}),n.d(t,"g",function(){return r}),n.d(t,"f",function(){return c}),n.d(t,"e",function(){return l}),n.d(t,"a",function(){return s}),n.d(t,"b",function(){return d}),Number.prototype.clamp=function(e,t){return Math.min(Math.max(this,e),t)};const a=e=>e[Math.floor(Math.random()*e.length)];function r(e,t){return e==null&&(e=0),t==null&&(t=1),e+Math.random()*(t-e)}function c(e,t){return e==null&&(e=0),t==null&&(t=1),Math.floor(e+Math.random()*(t-e+1))}var l=e=>document.querySelector(e);const s=e=>"number"==typeof e?"#"+("00000"+e.toString(16)).slice(-6):e,d=(e,t=1)=>{const i=s(e),n=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i),o=n?{r:parseInt(n[1],16),g:parseInt(n[2],16),b:parseInt(n[3],16)}:null;return"rgba("+o.r+","+o.g+","+o.b+","+t+")"}},1:function(e,t,n){"use strict";n.d(t,"a",function(){return o});var a,s=n(0);const r="object"==typeof window,i=r&&window.THREE||{};r&&!window.VANTA&&(window.VANTA={});const o=r&&window.VANTA||{};o.register=(e,t)=>o[e]=e=>new t(e),o.version="0.5.2",a=function(){return Array.prototype.unshift.call(arguments,"[VANTA]"),console.error.apply(this,arguments)},o.VantaBase=class{constructor(e={}){if(!r)return!1;var t,n,c,l;if(o.current=this,this.windowMouseMoveWrapper=this.windowMouseMoveWrapper.bind(this),this.windowTouchWrapper=this.windowTouchWrapper.bind(this),this.resize=this.resize.bind(this),this.animationLoop=this.animationLoop.bind(this),this.restart=this.restart.bind(this),this.options=Object(s.c)({},this.defaultOptions),e instanceof HTMLElement||"string"==typeof e?Object(s.c)(this.options,{el:e}):Object(s.c)(this.options,e),this.el=this.options.el,null==this.el)a('Instance needs "el" param!');else if(!(this.options.el instanceof HTMLElement||(c=this.el,this.el=Object(s.e)(c),this.el)))return void a("Cannot find element",c);for(n=0;n<this.el.children.length;n++)t=this.el.children[n],"static"===getComputedStyle(t).position&&(t.style.position="relative"),"auto"===getComputedStyle(t).zIndex&&(t.style.zIndex=1);"static"===getComputedStyle(this.el).position&&(this.el.style.position="relative"),this.initThree(),this.setSize(),this.uniforms={u_time:{type:"f",value:1},u_resolution:{type:"v2",value:new i.Vector2(1,1)},u_mouse:{type:"v2",value:new i.Vector2(0,0)}};try{this.init()}catch(e){return l=e,a("Init error"),a(l),this.el.removeChild(this.renderer.domElement),void(this.options.backgroundColor&&(console.log("[VANTA] Falling back to backgroundColor"),this.el.style.background=Object(s.a)(this.options.backgroundColor)))}window.addEventListener("resize",this.resize),this.resize(),this.animationLoop(),window.addEventListener("scroll",this.windowMouseMoveWrapper),window.addEventListener("mousemove",this.windowMouseMoveWrapper),window.addEventListener("touchstart",this.windowTouchWrapper),window.addEventListener("touchmove",this.windowTouchWrapper)}applyCanvasStyles(e,t={}){Object(s.c)(e.style,{position:"absolute",zIndex:0,top:0,left:0,background:""}),Object(s.c)(e.style,t),e.classList.add("vanta-canvas")}initThree(){i.WebGLRenderer?(this.renderer=new i.WebGLRenderer({alpha:!0,antialias:!0}),this.el.appendChild(this.renderer.domElement),this.applyCanvasStyles(this.renderer.domElement),isNaN(this.options.backgroundAlpha)&&(this.options.backgroundAlpha=1),this.scene=new i.Scene):console.warn("[VANTA] No THREE defined on window")}windowMouseMoveWrapper(e){const t=this.renderer.domElement.getBoundingClientRect(),n=e.clientX-t.left,s=e.clientY-t.top;n>=0&&s>=0&&n<=t.width&&s<=t.height&&(this.mouseX=n,this.mouseY=s,this.options.mouseEase||this.triggerMouseMove(n,s))}windowTouchWrapper(e){if(1===e.touches.length){const t=this.renderer.domElement.getBoundingClientRect(),n=e.touches[0].clientX-t.left,s=e.touches[0].clientY-t.top;n>=0&&s>=0&&n<=t.width&&s<=t.height&&(this.mouseX=n,this.mouseY=s,this.options.mouseEase||this.triggerMouseMove(n,s))}}triggerMouseMove(e,t){this.uniforms&&(this.uniforms.u_mouse.value.x=e/this.scale,this.uniforms.u_mouse.value.y=t/this.scale);const n=e/this.width,s=t/this.height;"function"==typeof this.onMouseMove&&this.onMouseMove(n,s)}setSize(){this.scale||(this.scale=1),Object(s.d)()&&this.options.scaleMobile?this.scale=this.options.scaleMobile:this.options.scale&&(this.scale=this.options.scale),this.width=this.el.offsetWidth||window.innerWidth,this.height=this.el.offsetHeight||window.innerHeight}resize(){var e,t;this.setSize(),null!=(t=this.camera)&&(t.aspect=this.width/this.height),null!=(e=this.camera)&&"function"==typeof e.updateProjectionMatrix&&e.updateProjectionMatrix(),this.renderer&&(this.renderer.setSize(this.width,this.height),this.renderer.setPixelRatio(window.devicePixelRatio/this.scale)),"function"==typeof this.onResize&&this.onResize()}isOnscreen(){const n=this.el.offsetHeight,s=this.el.getBoundingClientRect(),e=window.pageYOffset||(document.documentElement||document.body.parentNode||document.body).scrollTop,t=s.top+e;return t-window.innerHeight<=e&&e<=t+n}animationLoop(){return this.t||(this.t=0),this.t+=1,this.t2||(this.t2=0),this.t2+=this.options.speed||1,this.uniforms&&(this.uniforms.u_time.value=.016667*this.t2),this.options.mouseEase&&(this.mouseEaseX=this.mouseEaseX||this.mouseX||0,this.mouseEaseY=this.mouseEaseY||this.mouseY||0,Math.abs(this.mouseEaseX-this.mouseX)+Math.abs(this.mouseEaseY-this.mouseY)>.1&&(this.mouseEaseX=this.mouseEaseX+.05*(this.mouseX-this.mouseEaseX),this.mouseEaseY=this.mouseEaseY+.05*(this.mouseY-this.mouseEaseY),this.triggerMouseMove(this.mouseEaseX,this.mouseEaseY))),(this.isOnscreen()||this.options.forceAnimate)&&("function"==typeof this.onUpdate&&this.onUpdate(),this.scene&&this.camera&&(this.renderer.render(this.scene,this.camera),this.renderer.setClearColor(this.options.backgroundColor,this.options.backgroundAlpha)),this.fps&&this.fps.update&&this.fps.update()),this.req=window.requestAnimationFrame(this.animationLoop)}restart(){if(this.scene)for(;this.scene.children.length;)this.scene.remove(this.scene.children[0]);"function"==typeof this.onRestart&&this.onRestart(),this.init()}init(){"function"==typeof this.onInit&&this.onInit()}destroy(){"function"==typeof this.onDestroy&&this.onDestroy(),window.removeEventListener("touchstart",this.windowTouchWrapper),window.removeEventListener("touchmove",this.windowTouchWrapper),window.removeEventListener("scroll",this.windowMouseMoveWrapper),window.removeEventListener("mousemove",this.windowMouseMoveWrapper),window.removeEventListener("resize",this.resize),window.cancelAnimationFrame(this.req),this.renderer&&(this.el.removeChild(this.renderer.domElement),this.renderer=null,this.scene=null)}},t.b=o.VantaBase},17:function(e,t,n){"use strict";n.r(t);var l,d,h=n(1),f=n(0);function y(e,t,n){this.variables=[],this.currentTextureIndex=0,s=new THREE.Scene,o=new THREE.Camera,o.position.z=1;var s,o,i={texture:{value:null}},a=l(`uniform sampler2D texture;

void main() {

	vec2 uv = gl_FragCoord.xy / resolution.xy;

	gl_FragColor = texture2D( texture, uv );

}
`,i),r=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),a);function c(n){n.defines.resolution="vec2( "+e.toFixed(1)+", "+t.toFixed(1)+" )"}function l(e,t){t=t||{};var n=new THREE.ShaderMaterial({uniforms:t,vertexShader:`void main()	{

	gl_Position = vec4( position, 1.0 );

}
`,fragmentShader:e});return c(n),n}s.add(r),this.addVariable=function(e,t,n){var s={name:e,initialValueTexture:n,material:this.createShaderMaterial(t),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter};return this.variables.push(s),s},this.setVariableDependencies=function(e,t){e.dependencies=t},this.init=function(){if(!n.extensions.get("OES_texture_float"))return"No OES_texture_float support for float textures.";if(0===n.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(i=0;i<this.variables.length;i++){s=this.variables[i],s.renderTargets[0]=this.createRenderTarget(e,t,s.wrapS,s.wrapT,s.minFilter,s.magFilter),s.renderTargets[1]=this.createRenderTarget(e,t,s.wrapS,s.wrapT,s.minFilter,s.magFilter),this.renderTexture(s.initialValueTexture,s.renderTargets[0]),this.renderTexture(s.initialValueTexture,s.renderTargets[1]);var s,o,i,a,r,l,c=s.material,d=c.uniforms;if(null!==s.dependencies)for(a=0;a<s.dependencies.length;a++){if(o=s.dependencies[a],o.name!==s.name){for(l=!1,r=0;r<this.variables.length;r++)if(o.name===this.variables[r].name){l=!0;break}if(!l)return"Variable dependency not found. Variable="+s.name+", dependency="+o.name}d[o.name]={value:null},c.fragmentShader=`
uniform sampler2D `+o.name+`;
`+c.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){for(var e,s,i=this.currentTextureIndex,o=0===this.currentTextureIndex?1:0,t=0,a=this.variables.length;t<a;t++){if(e=this.variables[t],null!==e.dependencies)for(var r=e.material.uniforms,n=0,c=e.dependencies.length;n<c;n++)s=e.dependencies[n],r[s.name].value=s.renderTargets[i].texture;this.doRenderTarget(e.material,e.renderTargets[o])}this.currentTextureIndex=o},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=c,this.createShaderMaterial=l,this.createRenderTarget=function(n,s,o,i,a,r){return n=n||e,s=s||t,o=o||THREE.ClampToEdgeWrapping,i=i||THREE.ClampToEdgeWrapping,a=a||THREE.NearestFilter,r=r||THREE.NearestFilter,new THREE.WebGLRenderTarget(n,s,{wrapS:o,wrapT:i,minFilter:a,magFilter:r,format:THREE.RGBAFormat,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?THREE.HalfFloatType:THREE.FloatType,stencilBuffer:!1})},this.createTexture=function(n,s){n=n||e,s=s||t;var i=new Float32Array(n*s*4),o=new THREE.DataTexture(i,e,t,THREE.RGBAFormat,THREE.FloatType);return o.needsUpdate=!0,o},this.renderTexture=function(e,t){i.texture.value=e,this.doRenderTarget(a,t),i.texture.value=null},this.doRenderTarget=function(e,t){r.material=e,n.render(s,o,t),r.material=a}}const s="object"==typeof window&&window.THREE||{},c=!Object(f.d)();let o=32,a=o*o;const i=800,r=i/2;l=function(e={}){var o=this;function t(t,n,i){const a=1.5*(e.birdSize||1);o.vertices.push(new s.Vector3(t*a,n*a,i*a))}function n(e,t,n){o.faces.push(new s.Face3(e,t,n))}s.Geometry.call(this),t(5,0,0),t(-5,-1,1),t(-5,0,0),t(-5,-2,-1),t(0,2,-6),t(0,2,6),t(2,0,0),t(-3,0,0),n(0,2,1),n(4,7,6),n(5,6,7),this.computeFaceNormals()},l.prototype=Object.create(s.Geometry.prototype),d=function(e){var n,r,t=new s.Vector3,o=500,i=500,a=200,c=e;this.position=new s.Vector3,this.velocity=new s.Vector3,n=new s.Vector3,this.setGoal=function(e){r=e},this.setWorldSize=function(e,t,n){o=e,i=t,a=n},this.run=function(e){t.set(-o,this.position.y,this.position.z),(t=this.avoid(t)).multiplyScalar(5),n.add(t),t.set(o,this.position.y,this.position.z),(t=this.avoid(t)).multiplyScalar(5),n.add(t),t.set(this.position.x,-i,this.position.z),(t=this.avoid(t)).multiplyScalar(5),n.add(t),t.set(this.position.x,i,this.position.z),(t=this.avoid(t)).multiplyScalar(5),n.add(t),t.set(this.position.x,this.position.y,-a),(t=this.avoid(t)).multiplyScalar(5),n.add(t),t.set(this.position.x,this.position.y,a),(t=this.avoid(t)).multiplyScalar(5),n.add(t),Math.random()>.5&&this.flock(e),this.move()},this.flock=function(e){r&&n.add(this.reach(r,.005)),n.add(this.alignment(e)),n.add(this.cohesion(e)),n.add(this.separation(e))},this.move=function(){this.velocity.add(n);var e=this.velocity.length();e>2.5&&this.velocity.divideScalar(e/2.5),this.position.add(this.velocity),n.set(0,0,0)},this.checkBounds=function(){this.position.x>o&&(this.position.x=-o),this.position.x<-o&&(this.position.x=o),this.position.y>i&&(this.position.y=-i),this.position.y<-i&&(this.position.y=i),this.position.z>a&&(this.position.z=-a),this.position.z<-a&&(this.position.z=a)},this.avoid=function(e){var t=new s.Vector3;return t.copy(this.position),t.sub(e),t.multiplyScalar(1/this.position.distanceToSquared(e)),t},this.repulse=function(e){var t,o=this.position.distanceTo(e);o<150&&(t=new s.Vector3,t.subVectors(this.position,e),t.multiplyScalar(.5/o),n.add(t))},this.reach=function(e,t){var n=new s.Vector3;return n.subVectors(e,this.position),n.multiplyScalar(t),n},this.alignment=function(e){var n,i,a,r,l,t=new s.Vector3,o=0;const d=100*c.alignment/20;for(n=0,l=e.length;n<l;n++)Math.random()>.6||(r=(a=e[n]).position.distanceTo(this.position))>0&&r<=d&&(t.add(a.velocity),o++);return o>0&&(t.divideScalar(o),i=t.length(),i>.1&&t.divideScalar(i/.1)),t},this.cohesion=function(e){var n,a,r,l,d,o=new s.Vector3,t=new s.Vector3,i=0;const u=100*c.cohesion/20;for(n=0,d=e.length;n<d;n++)Math.random()>.6||(l=(r=e[n]).position.distanceTo(this.position))>0&&l<=u&&(o.add(r.position),i++);return i>0&&o.divideScalar(i),t.subVectors(o,this.position),a=t.length(),a>.1&&t.divideScalar(a/.1),t},this.separation=function(e){var n,o,i,r,a=new s.Vector3,t=new s.Vector3;const l=100*c.separation/20;for(n=0,r=e.length;n<r;n++)Math.random()>.6||(o=(i=e[n]).position.distanceTo(this.position))>0&&o<=l&&(t.subVectors(this.position,i.position),t.normalize(),t.divideScalar(o),a.add(t));return a}};const m=`uniform float time;
uniform float delta;

void main() {

  vec2 uv = gl_FragCoord.xy / resolution.xy;
  vec4 tmpPos = texture2D( texturePosition, uv );
  vec3 position = tmpPos.xyz;
  vec3 velocity = texture2D( textureVelocity, uv ).xyz;

  float phase = tmpPos.w;

  phase = mod( ( phase + delta +
    length( velocity.xz ) * delta * 3. +
    max( velocity.y, 0.0 ) * delta * 6. ), 62.83 );

  gl_FragColor = vec4( position + velocity * delta * 15. , phase );

}`,p=`uniform float time;
uniform float testing;
uniform float delta; // about 0.016
uniform float separationDistance; // 20
uniform float alignmentDistance; // 40
uniform float cohesionDistance;
uniform float speedLimit;
uniform float freedomFactor;
uniform vec3 predator;

const float width = resolution.x;
const float height = resolution.y;

const float PI = 3.141592653589793;
const float PI_2 = PI * 2.0;
// const float VISION = PI * 0.55;

float zoneRadius = 40.0;
float zoneRadiusSquared = 1600.0;

float separationThresh = 0.45;
float alignmentThresh = 0.65;

const float UPPER_BOUNDS = BOUNDS;
const float LOWER_BOUNDS = -UPPER_BOUNDS;

float rand(vec2 co){
  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

void main() {

  zoneRadius = separationDistance + alignmentDistance + cohesionDistance;
  separationThresh = separationDistance / zoneRadius;
  alignmentThresh = ( separationDistance + alignmentDistance ) / zoneRadius;
  zoneRadiusSquared = zoneRadius * zoneRadius;


  vec2 uv = gl_FragCoord.xy / resolution.xy;
  vec3 birdPosition, birdVelocity;

  vec3 selfPosition = texture2D( texturePosition, uv ).xyz;
  vec3 selfVelocity = texture2D( textureVelocity, uv ).xyz;

  float dist;
  vec3 dir; // direction
  float distSquared;

  float separationSquared = separationDistance * separationDistance;
  float cohesionSquared = cohesionDistance * cohesionDistance;

  float f;
  float percent;

  vec3 velocity = selfVelocity;

  float limit = speedLimit;

  dir = predator * UPPER_BOUNDS - selfPosition;
  dir.z = 0.;
  // dir.z *= 0.6;
  dist = length( dir );
  distSquared = dist * dist;

  float preyRadius = 150.0;
  float preyRadiusSq = preyRadius * preyRadius;

  // move birds away from predator
  if (dist < preyRadius) {

    f = ( distSquared / preyRadiusSq - 1.0 ) * delta * 100.;
    velocity += normalize( dir ) * f;
    limit += 5.0;
  }

  // if (testing == 0.0) {}
  // if ( rand( uv + time ) < freedomFactor ) {}

  // Attract flocks to the center
  vec3 central = vec3( 0., 0., 0. );
  dir = selfPosition - central;
  dist = length( dir );

  dir.y *= 2.5;
  velocity -= normalize( dir ) * delta * 5.;

  for (float y=0.0;y<height;y++) {
    for (float x=0.0;x<width;x++) {

      vec2 ref = vec2( x + 0.5, y + 0.5 ) / resolution.xy;
      birdPosition = texture2D( texturePosition, ref ).xyz;

      dir = birdPosition - selfPosition;
      dist = length(dir);

      if (dist < 0.0001) continue;

      distSquared = dist * dist;

      if (distSquared > zoneRadiusSquared ) continue;

      percent = distSquared / zoneRadiusSquared;

      if ( percent < separationThresh ) { // low

        // Separation - Move apart for comfort
        f = (separationThresh / percent - 1.0) * delta;
        velocity -= normalize(dir) * f;

      } else if ( percent < alignmentThresh ) { // high

        // Alignment - fly the same direction
        float threshDelta = alignmentThresh - separationThresh;
        float adjustedPercent = ( percent - separationThresh ) / threshDelta;

        birdVelocity = texture2D( textureVelocity, ref ).xyz;

        f = ( 0.5 - cos( adjustedPercent * PI_2 ) * 0.5 + 0.5 ) * delta;
        velocity += normalize(birdVelocity) * f;

      } else {

        // Attraction / Cohesion - move closer
        float threshDelta = 1.0 - alignmentThresh;
        float adjustedPercent = ( percent - alignmentThresh ) / threshDelta;

        f = ( 0.5 - ( cos( adjustedPercent * PI_2 ) * -0.5 + 0.5 ) ) * delta;

        velocity += normalize(dir) * f;

      }
    }
  }

  // this make tends to fly around than down or up
  // if (velocity.y > 0.) velocity.y *= (1. - 0.2 * delta);

  // Speed Limits
  if ( length( velocity ) > limit ) {
    velocity = normalize( velocity ) * limit;
  }

  gl_FragColor = vec4( velocity, 1.0 );

}`,g=`attribute vec2 reference;
attribute float birdVertex;

attribute vec3 birdColor;

uniform sampler2D texturePosition;
uniform sampler2D textureVelocity;

varying vec4 vColor;
varying float z;

uniform float time;
uniform float birdSize;

void main() {

  vec4 tmpPos = texture2D( texturePosition, reference );
  vec3 pos = tmpPos.xyz;
  vec3 velocity = normalize(texture2D( textureVelocity, reference ).xyz);

  vec3 newPosition = position;

  if ( birdVertex == 4.0 || birdVertex == 7.0 ) {
    // flap wings
    newPosition.y = sin( tmpPos.w ) * 5. * birdSize;
  }

  newPosition = mat3( modelMatrix ) * newPosition;

  velocity.z *= -1.;
  float xz = length( velocity.xz );
  float xyz = 1.;
  float x = sqrt( 1. - velocity.y * velocity.y );

  float cosry = velocity.x / xz;
  float sinry = velocity.z / xz;

  float cosrz = x / xyz;
  float sinrz = velocity.y / xyz;

  mat3 maty =  mat3(
    cosry, 0, -sinry,
    0    , 1, 0     ,
    sinry, 0, cosry
  );

  mat3 matz =  mat3(
    cosrz , sinrz, 0,
    -sinrz, cosrz, 0,
    0     , 0    , 1
  );
  newPosition =  maty * matz * newPosition;
  newPosition += pos;
  z = newPosition.z;

  vColor = vec4( birdColor, 1.0 );
  gl_Position = projectionMatrix *  viewMatrix  * vec4( newPosition, 1.0 );
}`,v=`varying vec4 vColor;
varying float z;
uniform vec3 color;
void main() {
  // Fake colors for now
  float rr = 0.2 + ( 1000. - z ) / 1000. * vColor.x;
  float gg = 0.2 + ( 1000. - z ) / 1000. * vColor.y;
  float bb = 0.2 + ( 1000. - z ) / 1000. * vColor.z;
  gl_FragColor = vec4( rr, gg, bb, 1. );
}`,b=function(e){const n=e.image.data;let t=0;const s=n.length;return(()=>{const e=[];for(;t<s;){const o=Math.random()*i-r,a=Math.random()*i-r,c=Math.random()*i-r;n[t+0]=o,n[t+1]=a,n[t+2]=c,n[t+3]=1,e.push(t+=4)}return e})()},j=function(e){const n=e.image.data;let t=0;const s=n.length;return(()=>{const e=[];for(;t<s;){const o=Math.random()-.5,i=Math.random()-.5,a=Math.random()-.5;n[t+0]=10*o,n[t+1]=10*i,n[t+2]=10*a,n[t+3]=1,e.push(t+=4)}return e})()};s.BirdGeometry=function(e){e.quantity&&(o=Math.pow(2,e.quantity),a=o*o);const u=3*a,i=3*u;s.BufferGeometry.call(this);const h=new s.BufferAttribute(new Float32Array(3*i),3),r=new s.BufferAttribute(new Float32Array(3*i),3),l=new s.BufferAttribute(new Float32Array(2*i),2),m=new s.BufferAttribute(new Float32Array(i),1);this.addAttribute("position",h),this.addAttribute("birdColor",r),this.addAttribute("reference",l),this.addAttribute("birdVertex",m);let t=0;const d=function(){for(let e=0;e<arguments.length;e++)h.array[t++]=arguments[e]},f=e.wingSpan||20,n=e.birdSize||1;for(let e=0;e<a;e++)d(0,-0,-20*n,0,4*n,-20*n,0,0,30*n),d(0,0,-15*n,-f*n,0,0,0,0,15*n),d(0,0,15*n,f*n,0,0,0,0,-15*n);const c={};for(t=0;t<3*u;t++){const i=~~(t/3),f=i%o/o,p=~~(i/o)/o,d=~~(t/9)/a,s=d.toString(),h=-1!=e.colorMode.indexOf("Gradient");let n;n=!h&&c[s]?c[s]:e.effect.getNewCol(d),h||c[s]||(c[s]=n),r.array[3*t+0]=n.r,r.array[3*t+1]=n.g,r.array[3*t+2]=n.b,l.array[2*t]=f,l.array[2*t+1]=p,m.array[t]=t%9}return this.scale(.2,.2,.2)},s.BirdGeometry.prototype=Object.create(s.BufferGeometry.prototype);class u extends h.b{static initClass(){this.prototype.defaultOptions={backgroundColor:465199,color1:16711680,color2:53759,colorMode:"varianceGradient",birdSize:1,wingSpan:30,speedLimit:5,separation:20,alignment:20,cohesion:20,quantity:5}}initComputeRenderer(){this.gpuCompute=new y(o,o,this.renderer);const e=this.gpuCompute.createTexture(),t=this.gpuCompute.createTexture();b(e),j(t),this.velocityVariable=this.gpuCompute.addVariable("textureVelocity",p,t),this.positionVariable=this.gpuCompute.addVariable("texturePosition",m,e),this.gpuCompute.setVariableDependencies(this.velocityVariable,[this.positionVariable,this.velocityVariable]),this.gpuCompute.setVariableDependencies(this.positionVariable,[this.positionVariable,this.velocityVariable]),this.positionUniforms=this.positionVariable.material.uniforms,this.velocityUniforms=this.velocityVariable.material.uniforms,this.positionUniforms.time={value:0},this.positionUniforms.delta={value:0},this.velocityUniforms.time={value:1},this.velocityUniforms.delta={value:0},this.velocityUniforms.testing={value:1},this.velocityUniforms.separationDistance={value:1},this.velocityUniforms.alignmentDistance={value:1},this.velocityUniforms.cohesionDistance={value:1},this.velocityUniforms.speedLimit={value:1},this.velocityUniforms.freedomFactor={value:1},this.velocityUniforms.predator={value:new s.Vector3},this.velocityVariable.material.defines.BOUNDS=i.toFixed(2),this.velocityVariable.wrapS=s.RepeatWrapping,this.velocityVariable.wrapT=s.RepeatWrapping,this.positionVariable.wrapS=s.RepeatWrapping,this.positionVariable.wrapT=s.RepeatWrapping;const n=this.gpuCompute.init();null!==n&&console.error(n)}initGpgpuBirds(){const t=Object.assign({},this.options,{effect:this}),n=new s.BirdGeometry(t);this.birdUniforms={color:{value:new s.Color(16720384)},texturePosition:{value:null},textureVelocity:{value:null},time:{value:1},delta:{value:0},birdSize:{value:this.options.birdSize}};const o=new s.ShaderMaterial({uniforms:this.birdUniforms,vertexShader:g,fragmentShader:v,side:s.DoubleSide}),e=new s.Mesh(n,o);return e.rotation.y=Math.PI/2,e.matrixAutoUpdate=!1,e.updateMatrix(),this.scene.add(e)}getNewCol(e){const t=this.options,r=null!=t.color1?t.color1:4456448,c=null!=t.color2?t.color2:6684672,n=new s.Color(r),o=new s.Color(c);let i,a;if(a=-1!=t.colorMode.indexOf("Gradient")?Math.random():e,0==t.colorMode.indexOf("variance")){const e=(n.r+Math.random()*o.r).clamp(0,1),t=(n.g+Math.random()*o.g).clamp(0,1),a=(n.b+Math.random()*o.b).clamp(0,1);i=new s.Color(e,t,a)}else i=0==t.colorMode.indexOf("mix")?new s.Color(r+a*c):n.lerp(o,a);return i}onInit(){this.camera=new s.PerspectiveCamera(75,this.width/this.height,1,3e3),this.camera.position.z=350,this.fog=new s.Fog(16777215,100,1e3),this.mouseX=this.mouseY=0;const u=this.birds=[],i=this.boids=[],a=this.options;let t,o;if(c)try{this.initComputeRenderer(),this.valuesChanger=this.valuesChanger.bind(this),this.valuesChanger(),this.initGpgpuBirds()}catch(e){console.error("[vanta.js] birds init error: ",e)}else{const c=6*Math.pow(2,a.quantity);for(var n,r,e=0;e<c;e++){(t=i[e]=new d(a)).position.x=400*Math.random()-200,t.position.y=400*Math.random()-200,t.position.z=400*Math.random()-200,t.velocity.x=2*Math.random()-1,t.velocity.y=2*Math.random()-1,t.velocity.z=2*Math.random()-1,t.setWorldSize(500,500,300);const m=-1!=a.colorMode.indexOf("Gradient"),h=new l(a);for(n=0;n<h.faces.length;n++)if(m)for(r=0;r<3;r++){const e=this.getNewCol();h.faces[n].vertexColors[r]=e}else{const t=this.getNewCol(e/c);h.faces[n].vertexColors[0]=t,h.faces[n].vertexColors[1]=t,h.faces[n].vertexColors[2]=t}(o=u[e]=new s.Mesh(h,new s.MeshBasicMaterial({color:16777215,side:s.DoubleSide,vertexColors:s.VertexColors}))).phase=Math.floor(62.83*Math.random()),o.position.x=i[e].position.x,o.position.y=i[e].position.y,o.position.z=i[e].position.z,this.scene.add(o)}}}valuesChanger(){this.velocityUniforms&&(this.velocityUniforms.separationDistance.value=this.options.separation,this.velocityUniforms.alignmentDistance.value=this.options.alignment,this.velocityUniforms.speedLimit.value=this.options.speedLimit,this.velocityUniforms.cohesionDistance.value=this.options.cohesion)}onUpdate(){this.now=performance.now(),this.last||(this.last=this.now);let t=(this.now-this.last)/1e3;if(t>1&&(t=1),this.last=this.now,c)this.positionUniforms.time.value=this.now,this.positionUniforms.delta.value=t,this.velocityUniforms.time.value=this.now,this.velocityUniforms.delta.value=t,this.birdUniforms.time.value=this.now,this.birdUniforms.delta.value=t,this.velocityUniforms.predator.value.set(this.mouseX,-this.mouseY,0),this.mouseX=1e4,this.mouseY=1e4,this.gpuCompute.compute(),this.birdUniforms.texturePosition.value=this.gpuCompute.getCurrentRenderTarget(this.positionVariable).texture,this.birdUniforms.textureVelocity.value=this.gpuCompute.getCurrentRenderTarget(this.velocityVariable).texture;else{const i=this.birds,s=this.boids;let o,t;for(var e=0,n=i.length;e<n;e++)(o=s[e]).run(s),(t=i[e]).rotation.y=Math.atan2(-o.velocity.z,o.velocity.x),t.rotation.z=Math.asin(o.velocity.y/o.velocity.length()),t.phase=(t.phase+(Math.max(0,t.rotation.z)+.1))%62.83,t.geometry.vertices[5].y=t.geometry.vertices[4].y=5*Math.sin(t.phase)*this.options.birdSize,t.geometry.verticesNeedUpdate=!0,t.position.x=s[e].position.x,t.position.y=s[e].position.y,t.position.z=s[e].position.z}}onMouseMove(e,t){if(this.mouseX=e-.5,this.mouseY=t-.5,!c){const t=this.boids;let e;for(var o=new s.Vector3(this.mouseX*this.width,-this.mouseY*this.height,0),n=0,i=t.length;n<i;n++)e=t[n],o.z=e.position.z,e.repulse(o)}}onDestroy(){}onResize(){}}u.initClass(),t.default=h.a.register("BIRDS",u)}})})